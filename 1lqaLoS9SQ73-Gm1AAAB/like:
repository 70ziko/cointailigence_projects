import React, { Component } from 'react';
import bcrypt from 'bcryptjs';

class User extends Component {
    constructor(props) {
        super(props);
        this.state = {
            email: '',
            password: '',
            error: null,
        };
    }

    validateEmail(email) {
        // Simple regex to validate email format
        const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
    }

    validatePassword(password) {
        // Password must be at least 8 characters long
        return password.length >= 8;
    }

    register(email, password) {
        if (!this.validateEmail(email) || !this.validatePassword(password)) {
            this.setState({ error: 'Invalid email or password.' });
            return;
        }

        // Hash the password before sending it over the network
        const hashedPassword = bcrypt.hashSync(password, 10);

        fetch('/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password: hashedPassword }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    this.setState({ email, password: '' });
                } else {
                    this.setState({ error: data.message });
                }
            })
            .catch(error => {
                this.setState({ error: 'An error occurred. Please try again.' });
            });
    }

    login(email, password) {
        if (!this.validateEmail(email) || !this.validatePassword(password)) {
            this.setState({ error: 'Invalid email or password.' });
            return;
        }

        fetch('/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    this.setState({ email, password: '' });
                } else {
                    this.setState({ error: data.message });
                }
            })
            .catch(error => {
                this.setState({ error: 'An error occurred. Please try again.' });
            });
    }

    render() {
        // Render the component here
    }
}

export default User;
