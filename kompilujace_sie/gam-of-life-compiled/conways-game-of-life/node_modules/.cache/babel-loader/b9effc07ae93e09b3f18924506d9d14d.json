{"ast":null,"code":"var _jsxFileName = \"/home/paris/projekty/haergi/contailigence projects/kompilujace_sie/gam-of-life-compiled/conways-game-of-life/src/components/GameGrid.js\";\nimport React from 'react';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GameGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleCellState = (row, col) => {\n      this.setState(prevState => {\n        let grid = prevState.grid.slice();\n        grid[row][col] = !grid[row][col];\n        return {\n          grid\n        };\n      });\n    };\n    this.countLiveNeighbors = (row, col) => {\n      const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n      return directions.reduce((count, [dx, dy]) => {\n        const newRow = row + dx;\n        const newCol = col + dy;\n        if (newRow >= 0 && newRow < 20 && newCol >= 0 && newCol < 20 && this.state.grid[newRow][newCol]) {\n          count++;\n        }\n        return count;\n      }, 0);\n    };\n    this.generateNextGeneration = () => {\n      this.setState(prevState => {\n        let newGrid = prevState.grid.map((row, i) => row.map((isAlive, j) => {\n          const liveNeighbors = this.countLiveNeighbors(i, j);\n          if (isAlive && (liveNeighbors < 2 || liveNeighbors > 3)) {\n            return false;\n          } else if (!isAlive && liveNeighbors === 3) {\n            return true;\n          }\n          return isAlive;\n        }));\n        return {\n          grid: newGrid\n        };\n      });\n    };\n    this.state = {\n      grid: this.initializeGrid()\n    };\n  }\n  initializeGrid() {\n    let grid = [];\n    for (let i = 0; i < 20; i++) {\n      let row = [];\n      for (let j = 0; j < 20; j++) {\n        row.push(false);\n      }\n      grid.push(row);\n    }\n    return grid;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [this.state.grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((isAlive, j) => /*#__PURE__*/_jsxDEV(Cell, {\n          isAlive: isAlive,\n          toggleCellState: () => this.toggleCellState(i, j)\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.generateNextGeneration,\n        children: \"Next Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default GameGrid;","map":{"version":3,"names":["React","Cell","jsxDEV","_jsxDEV","GameGrid","Component","constructor","props","toggleCellState","row","col","setState","prevState","grid","slice","countLiveNeighbors","directions","reduce","count","dx","dy","newRow","newCol","state","generateNextGeneration","newGrid","map","i","isAlive","j","liveNeighbors","initializeGrid","push","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/paris/projekty/haergi/contailigence projects/kompilujace_sie/gam-of-life-compiled/conways-game-of-life/src/components/GameGrid.js"],"sourcesContent":["import React from 'react';\nimport Cell from './Cell';\n\nclass GameGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.initializeGrid()\n        };\n    }\n\n    initializeGrid() {\n        let grid = [];\n        for (let i = 0; i < 20; i++) {\n            let row = [];\n            for (let j = 0; j < 20; j++) {\n                row.push(false);\n            }\n            grid.push(row);\n        }\n        return grid;\n    }\n\n    toggleCellState = (row, col) => {\n        this.setState(prevState => {\n            let grid = prevState.grid.slice();\n            grid[row][col] = !grid[row][col];\n            return {grid};\n        });\n    }\n\n    countLiveNeighbors = (row, col) => {\n        const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n        return directions.reduce((count, [dx, dy]) => {\n            const newRow = row + dx;\n            const newCol = col + dy;\n            if (newRow >= 0 && newRow < 20 && newCol >= 0 && newCol < 20 && this.state.grid[newRow][newCol]) {\n                count++;\n            }\n            return count;\n        }, 0);\n    }\n\n    generateNextGeneration = () => {\n        this.setState(prevState => {\n            let newGrid = prevState.grid.map((row, i) => row.map((isAlive, j) => {\n                const liveNeighbors = this.countLiveNeighbors(i, j);\n                if (isAlive && (liveNeighbors < 2 || liveNeighbors > 3)) {\n                    return false;\n                } else if (!isAlive && liveNeighbors === 3) {\n                    return true;\n                }\n                return isAlive;\n            }));\n            return {grid: newGrid};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"grid\">\n                {this.state.grid.map((row, i) => (\n                    <div key={i} className=\"row\">\n                        {row.map((isAlive, j) => (\n                            <Cell key={j} isAlive={isAlive} toggleCellState={() => this.toggleCellState(i, j)} />\n                        ))}\n                    </div>\n                ))}\n                <button onClick={this.generateNextGeneration}>Next Generation</button>\n            </div>\n        );\n    }\n}\n\nexport default GameGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}