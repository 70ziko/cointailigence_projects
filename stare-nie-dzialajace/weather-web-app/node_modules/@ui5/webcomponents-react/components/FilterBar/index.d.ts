import { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';
import { InputPropTypes } from '@ui5/webcomponents-react/lib/Input';
import { CSSProperties, FC, ReactElement, ReactNode, ReactNodeArray } from 'react';
export interface FilterBarPropTypes extends CommonProps {
    children: ReactNode | ReactNodeArray;
    search?: ReactElement<InputPropTypes>;
    variants?: ReactNode;
    useToolbar?: boolean;
    filterBarExpanded?: boolean;
    filterContainerWidth?: CSSProperties['width'];
    considerGroupName?: boolean;
    showClearOnFB?: boolean;
    showGoOnFB?: boolean;
    showFilterConfiguration?: boolean;
    showClearButton?: boolean;
    showRestoreButton?: boolean;
    showGo?: boolean;
    activeFiltersCount?: number | string;
    loading?: boolean;
    showSearchOnFiltersDialog?: boolean;
    showRestoreOnFB?: boolean;
    onToggleFilters?: (event: CustomEvent<{
        visible?: boolean;
    }>) => void;
    onFiltersDialogSave?: (event: CustomEvent<{
        elements?: unknown;
        toggledElements?: unknown;
    }>) => void;
    onFiltersDialogClear?: (event: CustomEvent) => void;
    onFiltersDialogCancel?: (event: CustomEvent) => void;
    onFiltersDialogOpen?: (event: CustomEvent) => void;
    onFiltersDialogClose?: (event: CustomEvent) => void;
    onFiltersDialogSelectionChange?: (event: CustomEvent<{
        element?: unknown;
        checked?: unknown;
    }>) => void;
    onFiltersDialogSearch?: (event: CustomEvent<{
        value?: unknown;
    }>) => void;
    onClear?: (event: CustomEvent) => void;
    onGo?: (event: CustomEvent) => void;
    onRestore?: (event: CustomEvent<{
        source?: unknown;
    }>) => void;
}
declare const FilterBar: FC<FilterBarPropTypes>;
export { FilterBar };
