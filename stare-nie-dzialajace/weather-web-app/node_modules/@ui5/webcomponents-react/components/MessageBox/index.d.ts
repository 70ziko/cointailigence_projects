import '@ui5/webcomponents-icons/dist/icons/hint';
import '@ui5/webcomponents-icons/dist/icons/message-error';
import '@ui5/webcomponents-icons/dist/icons/message-information';
import '@ui5/webcomponents-icons/dist/icons/message-success';
import '@ui5/webcomponents-icons/dist/icons/message-warning';
import '@ui5/webcomponents-icons/dist/icons/question-mark';
import { MessageBoxActions } from '@ui5/webcomponents-react/lib/MessageBoxActions';
import { MessageBoxTypes } from '@ui5/webcomponents-react/lib/MessageBoxTypes';
import { FC, ReactNode, ReactNodeArray } from 'react';
import { CommonProps } from '../../interfaces/CommonProps';
export interface MessageBoxPropTypes extends CommonProps {
    /**
     * Flag whether the Message Box should be opened or closed
     */
    open?: boolean;
    /**
     * A custom title for the MessageBox. If not present, it will be derived from the `MessageBox` type.
     */
    title?: string;
    /**
     * Defines the content of the `MessageBox`.
     *
     * **Note: Although this prop accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.**
     */
    children: ReactNode | ReactNodeArray;
    /**
     * Array of actions of the MessageBox. Those actions will be transformed into buttons in the `MessageBox` footer.
     */
    actions?: (MessageBoxActions | string)[];
    /**
     * A custom icon. If not present, it will be derived from the `MessageBox` type.
     */
    icon?: ReactNode;
    /**
     * Defines the type of the `MessageBox` with predefined title, icon, actions and a visual highlight color.
     */
    type?: MessageBoxTypes;
    /**
     * Callback to be executed when the `MessageBox` is closed. `event.detail.action` contains the pressed action button.
     */
    onClose: (event: CustomEvent<{
        action: MessageBoxActions;
    }>) => void;
}
declare const MessageBox: FC<MessageBoxPropTypes>;
export { MessageBox };
