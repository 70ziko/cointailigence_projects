{"version":3,"file":"NotificationListItem.js","sources":["../src/webComponents/NotificationListItem/index.tsx"],"sourcesContent":["import '@ui5/webcomponents-fiori/dist/NotificationListItem';\nimport { Priority } from '@ui5/webcomponents-react/lib/Priority';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport { FC, ReactNode } from 'react';\n\nexport interface NotificationListItemPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Defines if the <code>notification</code> is new or has been already read. <br><br> <b>Note:</b> if set to <code>false</code> the <code>heading</code> has bold font, if set to true - it has a normal font.\n   */\n  read?: boolean;\n  /**\n   * Defines if the <code>heading</code> and <code>decription</code> should wrap, they truncate by default.<br/><br/>\n   *\n   * <b>Note:</b> by default the <code>heading</code> and <code>decription</code>, and a <code>ShowMore/Less</code> button would be displayed.\n   */\n  wrap?: unknown;\n  /**\n   * Defines if a busy indicator would be displayed over the item.\n   */\n  busy?: boolean;\n  /**\n   * Defines the <code>heading</code> of the item.\n   */\n  heading?: string;\n  /**\n   * Defines the <code>priority</code> of the item.\n   */\n  priority?: Priority;\n  /**\n   * Defines if the <code>close</code> button would be displayed.\n   */\n  showClose?: boolean;\n  /**\n   * Defines the selected state of the <code>ListItem</code>.\n   */\n  selected?: boolean;\n  /**\n   * Defines the avatar, displayed in the <code>ui5-li-notification</code>.<br/><br/>\n   *\n   * <b>Note:</b> Consider using the <code>ui5-avatar</code> to display icons, initials or images.\n   */\n  avatar?: ReactNode;\n  /**\n   * Defines the content of the <code>ui5-li-notification</code>, usually a description of the notification.<br/><br/>\n   *\n   * <b>Note:</b> –êlthough this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the elements, dipalyed in the footer of the of the <code>ui5-li-notification</code>.\n   */\n  footnotes?: ReactNode | ReactNode[];\n  /**\n   * Defines the actions, displayed in the top-right area. <br><br> <b>Note:</b> use the <code>ui5-notification-overflow-action</code> component.\n   */\n  actions?: ReactNode;\n  /**\n   * Fired when the <code>Close</code> button is pressed.\n   */\n  onClose?: (event: CustomEvent<{}>) => void;\n}\n\n/**\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/NotificationListItem\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst NotificationListItem: FC<NotificationListItemPropTypes> = withWebComponent<NotificationListItemPropTypes>(\n  'ui5-li-notification',\n  ['wrap', 'heading', 'priority'],\n  ['read', 'busy', 'showClose', 'selected'],\n  ['avatar', 'footnotes', 'actions'],\n  ['close']\n);\n\nNotificationListItem.displayName = 'NotificationListItem';\n\nNotificationListItem.defaultProps = {\n  read: false,\n  wrap: false,\n  busy: false,\n  priority: Priority.None,\n  showClose: false,\n  selected: false\n};\n\nexport { NotificationListItem };\n"],"names":["NotificationListItem","withWebComponent","displayName","defaultProps","read","wrap","busy","priority","Priority","None","showClose","selected"],"mappings":";;;;AA8DA;;;IAGMA,oBAAuD,GAAGC,gBAAgB,CAC9E,qBAD8E,EAE9E,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,CAF8E,EAG9E,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,UAA9B,CAH8E,EAI9E,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CAJ8E,EAK9E,CAAC,OAAD,CAL8E;AAQhFD,oBAAoB,CAACE,WAArB,GAAmC,sBAAnC;AAEAF,oBAAoB,CAACG,YAArB,GAAoC;AAClCC,EAAAA,IAAI,EAAE,KAD4B;AAElCC,EAAAA,IAAI,EAAE,KAF4B;AAGlCC,EAAAA,IAAI,EAAE,KAH4B;AAIlCC,EAAAA,QAAQ,EAAEC,QAAQ,CAACC,IAJe;AAKlCC,EAAAA,SAAS,EAAE,KALuB;AAMlCC,EAAAA,QAAQ,EAAE;AANwB,CAApC;;;;"}