{"version":3,"file":"DateRangePicker.js","sources":["../src/webComponents/DateRangePicker/index.tsx"],"sourcesContent":["import { CalendarType } from '@ui5/webcomponents-react/lib/CalendarType';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/DateRangePicker';\nimport { FC, ReactNode } from 'react';\n\nexport interface DateRangePickerPropTypes extends Omit<WithWebComponentPropTypes, 'onChange' | 'onInput'> {\n  /**\n   * Determines the symbol which separates the dates.\n   */\n  delimiter?: string;\n  /**\n   * Determines whether the <code>ui5-date-picker</code> is displayed as disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Determines the format, displayed in the input field.\n   */\n  formatPattern?: string;\n  /**\n   * Defines the visibility of the week numbers column. <br><br><br/><br/>\n   *\n   * <b>Note:<b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n   */\n  hideWeekNumbers?: boolean;\n  /**\n   * Determines the maximum date available for selection.\n   */\n  maxDate?: string;\n  /**\n   * Determines the minimum date available for selection.\n   */\n  minDate?: string;\n  /**\n   * Determines the name with which the <code>ui5-date-picker</code> will be submitted in an HTML form.<br/><br/>\n   *\n   * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project: <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code><br/><br/>\n   *\n   * <b>Note:</b> When set, a native <code>input</code> HTML element will be created inside the <code>ui5-date-picker</code> so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines a short hint, intended to aid the user with data entry when the <code>ui5-date-picker</code> has no value.<br/><br/>\n   *\n   * <b>Note:</b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the <code>ui5-date-picker</code> appear empty - without placeholder or format pattern.\n   */\n  placeholder?: string;\n  /**\n   * Determines the calendar type. The input value is formated according to the calendar type and the picker shows the months and years from the specified calendar. <br><br> Available options are: <ul> <li><code>Gregorian</code></li> <li><code>Islamic</code></li> <li><code>Japanese</code></li> <li><code>Buddhist</code></li> <li><code>Persian</code></li> </ul>\n   */\n  primaryCalendarType?: CalendarType;\n  /**\n   * Determines whether the <code>ui5-date-picker</code> is displayed as read-only.\n   */\n  readonly?: boolean;\n  /**\n   * Defines a formatted date value.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the <code>ui5-date-picker</code>. <br><br> Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Warning</code></li> <li><code>Success</code></li> <li><code>Information</code></li> </ul>\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the value state message that will be displayed as pop up under the <code>ui5-date-picker</code>. <br><br><br/><br/>\n   *\n   * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed. <br> <b>Note:</b> The <code>valueStateMessage</code> would be displayed, when the <code>ui5-date-picker</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n   */\n  valueStateMessage?: ReactNode;\n  /**\n   * Fired when the input operation has finished by pressing Enter or on focusout.\n   */\n  onChange?: (event: CustomEvent<{}>) => void;\n  /**\n   * Fired when the value of the <code>ui5-date-picker</code> is changed at each key stroke.\n   */\n  onInput?: (event: CustomEvent<{}>) => void;\n}\n\n/**\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/DateRangePicker\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst DateRangePicker: FC<DateRangePickerPropTypes> = withWebComponent<DateRangePickerPropTypes>(\n  'ui5-daterange-picker',\n  [\n    'delimiter',\n    'formatPattern',\n    'maxDate',\n    'minDate',\n    'name',\n    'placeholder',\n    'primaryCalendarType',\n    'value',\n    'valueState'\n  ],\n  ['disabled', 'hideWeekNumbers', 'readonly'],\n  ['valueStateMessage'],\n  ['change', 'input']\n);\n\nDateRangePicker.displayName = 'DateRangePicker';\n\nDateRangePicker.defaultProps = {\n  delimiter: '-',\n  disabled: false,\n  hideWeekNumbers: false,\n  placeholder: undefined,\n  primaryCalendarType: CalendarType.Gregorian,\n  readonly: false,\n  valueState: ValueState.None\n};\n\nexport { DateRangePicker };\n"],"names":["DateRangePicker","withWebComponent","displayName","defaultProps","delimiter","disabled","hideWeekNumbers","placeholder","undefined","primaryCalendarType","CalendarType","Gregorian","readonly","valueState","ValueState","None"],"mappings":";;;;;AA+EA;;;IAGMA,eAA6C,GAAGC,gBAAgB,CACpE,sBADoE,EAEpE,CACE,WADF,EAEE,eAFF,EAGE,SAHF,EAIE,SAJF,EAKE,MALF,EAME,aANF,EAOE,qBAPF,EAQE,OARF,EASE,YATF,CAFoE,EAapE,CAAC,UAAD,EAAa,iBAAb,EAAgC,UAAhC,CAboE,EAcpE,CAAC,mBAAD,CAdoE,EAepE,CAAC,QAAD,EAAW,OAAX,CAfoE;AAkBtED,eAAe,CAACE,WAAhB,GAA8B,iBAA9B;AAEAF,eAAe,CAACG,YAAhB,GAA+B;AAC7BC,EAAAA,SAAS,EAAE,GADkB;AAE7BC,EAAAA,QAAQ,EAAE,KAFmB;AAG7BC,EAAAA,eAAe,EAAE,KAHY;AAI7BC,EAAAA,WAAW,EAAEC,SAJgB;AAK7BC,EAAAA,mBAAmB,EAAEC,YAAY,CAACC,SALL;AAM7BC,EAAAA,QAAQ,EAAE,KANmB;AAO7BC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AAPM,CAA/B;;;;"}