import _extends from '@babel/runtime/helpers/extends';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';
import React, { forwardRef, useRef, Children, cloneElement, useEffect } from 'react';

var capitalizeFirstLetter = function capitalizeFirstLetter(s) {
  return s.charAt(0).toUpperCase() + s.slice(1);
};

var camelToKebabCase = function camelToKebabCase(s) {
  return s.replace(/([A-Z])/g, function (a, b) {
    return "-".concat(b.toLowerCase());
  });
};

var kebabToCamelCase = function kebabToCamelCase(str) {
  return str.replace(/([-_]\w)/g, function (g) {
    return g[1].toUpperCase();
  });
};

var createEventPropName = function createEventPropName(eventName) {
  return "on".concat(capitalizeFirstLetter(kebabToCamelCase(eventName)));
};

var withWebComponent = function withWebComponent(TagName, regularProperties, booleanProperties, slotProperties, eventProperties) {
  var WithWebComponent = /*#__PURE__*/forwardRef(function (props, wcRef) {
    var className = props.className,
        tooltip = props.tooltip,
        children = props.children,
        rest = _objectWithoutProperties(props, ["className", "tooltip", "children"]);

    var ref = useConsolidatedRef(wcRef);
    var eventRegistry = useRef({}); // regular props (no booleans, no slots and no events)

    var regularProps = regularProperties.reduce(function (acc, name) {
      if (rest.hasOwnProperty(name)) {
        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, camelToKebabCase(name), rest[name]));
      }

      return acc;
    }, {}); // boolean properties - only attach if they are truthy

    var booleanProps = booleanProperties.reduce(function (acc, name) {
      if (rest[name] === true || rest[name] === 'true') {
        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, camelToKebabCase(name), true));
      }

      return acc;
    }, {});
    var slots = slotProperties.reduce(function (acc, name) {
      var slotValue = rest[name];

      if (slotValue) {
        var _slotValue$props;

        return [].concat(_toConsumableArray(acc), _toConsumableArray(Children.map((slotValue === null || slotValue === void 0 ? void 0 : slotValue.type) === React.Fragment ? (_slotValue$props = slotValue.props) === null || _slotValue$props === void 0 ? void 0 : _slotValue$props.children : slotValue, function (item, index) {
          return /*#__PURE__*/cloneElement(item, {
            key: "".concat(name, "-").concat(index),
            slot: name
          });
        })));
      }

      return acc;
    }, []); // event binding

    useEffect(function () {
      eventProperties.forEach(function (eventName) {
        var eventHandler = rest[createEventPropName(eventName)];

        if (typeof eventHandler === 'function') {
          eventRegistry.current[eventName] = eventHandler;
          ref.current.addEventListener(eventName, eventRegistry.current[eventName]);
        }
      });
      return function () {
        // eslint-disable-next-line guard-for-in
        for (var eventName in eventRegistry.current) {
          var _ref$current;

          (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.removeEventListener(eventName, eventRegistry.current[eventName]);
        }
      };
    }, eventProperties.map(function (eventName) {
      return rest[createEventPropName(eventName)];
    })); // non web component related props, just pass them

    var nonWebComponentRelatedProps = Object.entries(rest).filter(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          key = _ref2[0];

      return !regularProperties.includes(key);
    }).filter(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 1),
          key = _ref4[0];

      return !slotProperties.includes(key);
    }).filter(function (_ref5) {
      var _ref6 = _slicedToArray(_ref5, 1),
          key = _ref6[0];

      return !booleanProperties.includes(key);
    }).filter(function (_ref7) {
      var _ref8 = _slicedToArray(_ref7, 1),
          key = _ref8[0];

      return !eventProperties.map(function (eventName) {
        return createEventPropName(eventName);
      }).includes(key);
    }).reduce(function (acc, _ref9) {
      var _ref10 = _slicedToArray(_ref9, 2),
          key = _ref10[0],
          val = _ref10[1];

      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, val));
    }, {});
    return (
      /*#__PURE__*/
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore
      React.createElement(TagName, _extends({
        ref: ref
      }, booleanProps, regularProps, nonWebComponentRelatedProps, {
        "class": className,
        title: tooltip
      }), slots, children)
    );
  });
  WithWebComponent.displayName = "WithWebComponent(".concat(TagName, ")");
  return WithWebComponent;
};

export { withWebComponent };
//# sourceMappingURL=withWebComponent.js.map
