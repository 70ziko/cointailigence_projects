'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var reactJss = require('react-jss');
var _defineProperty = _interopDefault(require('@babel/runtime/helpers/defineProperty'));
var _objectSpread = _interopDefault(require('@babel/runtime/helpers/objectSpread2'));
var _classCallCheck = _interopDefault(require('@babel/runtime/helpers/classCallCheck'));
var Device$1 = require('@ui5/webcomponents-base/dist/Device');
var _createClass = _interopDefault(require('@babel/runtime/helpers/createClass'));
var _createForOfIteratorHelper = _interopDefault(require('@babel/runtime/helpers/createForOfIteratorHelper'));
require('@ui5/webcomponents-react-base/third-party/modernizr');
var react = require('react');
var _regeneratorRuntime = _interopDefault(require('@babel/runtime/regenerator'));
var _asyncToGenerator = _interopDefault(require('@babel/runtime/helpers/asyncToGenerator'));
var _slicedToArray = _interopDefault(require('@babel/runtime/helpers/slicedToArray'));
var _toArray = _interopDefault(require('@babel/runtime/helpers/toArray'));
var i18nBundle = require('@ui5/webcomponents-base/dist/i18nBundle');
var Device$2 = require('@ui5/webcomponents-react-base/lib/Device');

var createComponentStyles = function createComponentStyles(styles, options) {
  var useStyles = reactJss.createUseStyles(styles, options); // if (ponyfillNeeded()) {
  //   schedulePonyfill();
  // }

  return useStyles;
};

(function (CssSizeVariablesNames) {
  CssSizeVariablesNames["sapWcrBarHeight"] = "sapWcrBarHeight";
  CssSizeVariablesNames["sapWcrSubHeaderBarHeight"] = "sapWcrSubHeaderBarHeight";
  CssSizeVariablesNames["sapWcrProgressIndicatorHeight"] = "sapWcrProgressIndicatorHeight";
  CssSizeVariablesNames["sapWcrProgressIndicatorMargin"] = "sapWcrProgressIndicatorMargin";
  CssSizeVariablesNames["sapWcrSegmentedButtonPadding"] = "sapWcrSegmentedButtonPadding";
  CssSizeVariablesNames["sapWcrSegmentedButtonHeight"] = "sapWcrSegmentedButtonHeight";
  CssSizeVariablesNames["sapWcrSegmentedButtonItemHeight"] = "sapWcrSegmentedButtonItemHeight";
  CssSizeVariablesNames["sapWcrSegmentedButtonItemLineHeight"] = "sapWcrSegmentedButtonItemLineHeight";
  CssSizeVariablesNames["sapWcrSideNavigationItemIconSize"] = "sapWcrSideNavigationItemIconSize";
  CssSizeVariablesNames["sapWcrSideNavigationItemIconPadding"] = "sapWcrSideNavigationItemIconPadding";
  CssSizeVariablesNames["sapWcrSideNavigationItemExpandedArrowPadding"] = "sapWcrSideNavigationItemExpandedArrowPadding";
  CssSizeVariablesNames["sapWcrAnalyticalTableRowHeight"] = "sapWcrAnalyticalTableRowHeight";
  CssSizeVariablesNames["sapWcrAnalyticalTableTreePaddingLevel1"] = "sapWcrAnalyticalTableTreePaddingLevel1";
  CssSizeVariablesNames["sapWcrAnalyticalTableTreePaddingLevel2"] = "sapWcrAnalyticalTableTreePaddingLevel2";
  CssSizeVariablesNames["sapWcrAnalyticalTableTreePaddingLevel3"] = "sapWcrAnalyticalTableTreePaddingLevel3";
  CssSizeVariablesNames["sapWcrCheckBoxWidthHeight"] = "sapWcrCheckBoxWidthHeight";
  CssSizeVariablesNames["sapWcrAnalyticalTableSelectionColumnWidth"] = "sapWcrAnalyticalTableSelectionColumnWidth";
  CssSizeVariablesNames["sapWcrToolbarHeight"] = "sapWcrToolbarHeight";
  CssSizeVariablesNames["sapWcrToolbarPopoverContentPadding"] = "sapWcrToolbarPopoverContentPadding";
  CssSizeVariablesNames["sapWcrToolbarSeparatorHeight"] = "sapWcrToolbarSeparatorHeight";
})(exports.CssSizeVariablesNames || (exports.CssSizeVariablesNames = {}));

var CssSizeVariables = Object.values(exports.CssSizeVariablesNames).reduce(function (acc, variable) {
  return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, variable, "var(--".concat(variable, ")")));
}, {});
var cssVariablesStyles = "\n:root {\n  --".concat(exports.CssSizeVariablesNames.sapWcrBarHeight, ":2.75rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSubHeaderBarHeight, ":3rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrProgressIndicatorHeight, ":1rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrProgressIndicatorMargin, ":0.5rem 0;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonPadding, ":0.250rem 0;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonHeight, ":3rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonItemHeight, ":2.25rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonItemLineHeight, ":2.25rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSideNavigationItemIconSize, ":1.125rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSideNavigationItemIconPadding, ":0.9375rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSideNavigationItemExpandedArrowPadding, ":0.8125rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableRowHeight, ":44px;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableTreePaddingLevel1, ":1.5rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableTreePaddingLevel2, ":2.25rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableTreePaddingLevel3, ":2.75rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrCheckBoxWidthHeight, ":2.75rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth, ":55px;\n  --").concat(exports.CssSizeVariablesNames.sapWcrToolbarHeight, ":2.75rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrToolbarPopoverContentPadding, ":0.25rem 0.5rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrToolbarSeparatorHeight, ": 2rem;\n}\n\n[data-ui5-compact-size],\n.ui5-content-density-compact,\n.sapUiSizeCompact {\n  --").concat(exports.CssSizeVariablesNames.sapWcrBarHeight, ":2.5rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSubHeaderBarHeight, ":2.25rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrProgressIndicatorHeight, ":1.125rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonPadding, ":0.1875rem 0;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonHeight, ":2rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonItemHeight, ":1.625rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSegmentedButtonItemLineHeight, ":1.5rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSideNavigationItemIconSize, ":1rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSideNavigationItemIconPadding, ":0.5rem 0.9375rem 0.5rem 0.9375rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrSideNavigationItemExpandedArrowPadding, ":0.125rem 0.8125rem 0.125rem 0.8125rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableRowHeight, ":32px;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableTreePaddingLevel1, ":1rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableTreePaddingLevel2, ":1.5rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableTreePaddingLevel3, ":2rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrCheckBoxWidthHeight, ":2rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth, ":40px;\n  --").concat(exports.CssSizeVariablesNames.sapWcrToolbarHeight, ":2rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrToolbarPopoverContentPadding, ":0.1875rem 0.375rem;\n  --").concat(exports.CssSizeVariablesNames.sapWcrToolbarSeparatorHeight, ": 1.5rem;\n}\n");

var EventRegistry = /*#__PURE__*/function () {
  function EventRegistry() {
    _classCallCheck(this, EventRegistry);
  }

  _createClass(EventRegistry, null, [{
    key: "attachEvent",
    value: function attachEvent(sEventId, fnFunction, oListener) {
      if (!EventRegistry.mEventRegistry[sEventId]) {
        EventRegistry.mEventRegistry[sEventId] = [];
      }

      EventRegistry.mEventRegistry[sEventId].push({
        oListener: oListener,
        fFunction: fnFunction
      });
    }
  }, {
    key: "detachEvent",
    value: function detachEvent(sEventId, fnFunction, oListener) {
      var aEventListeners = EventRegistry.mEventRegistry[sEventId];

      if (!aEventListeners) {
        return;
      }

      for (var i = 0, iL = aEventListeners.length; i < iL; i++) {
        if (aEventListeners[i].fFunction === fnFunction && aEventListeners[i].oListener === oListener) {
          aEventListeners.splice(i, 1);
          break;
        }
      }

      if (aEventListeners.length === 0) {
        delete EventRegistry.mEventRegistry[sEventId];
      }
    }
  }, {
    key: "fireEvent",
    value: function fireEvent(sEventId, mParameters) {
      var aEventListeners = EventRegistry.mEventRegistry[sEventId];
      var oInfo;

      if (aEventListeners) {
        aEventListeners = aEventListeners.slice();

        for (var i = 0, iL = aEventListeners.length; i < iL; i++) {
          oInfo = aEventListeners[i];
          oInfo.fFunction.call(oInfo.oListener || window, mParameters);
        }
      }
    }
  }]);

  return EventRegistry;
}();
EventRegistry.mEventRegistry = {};

/* eslint-disable no-console,no-unused-expressions */
var pad0 = function pad0(i, w) {
  return "000".concat(String(i)).slice(-w);
};

(function (LOG_LEVEL) {
  LOG_LEVEL[LOG_LEVEL["FATAL"] = 0] = "FATAL";
  LOG_LEVEL[LOG_LEVEL["ERROR"] = 1] = "ERROR";
  LOG_LEVEL[LOG_LEVEL["WARNING"] = 2] = "WARNING";
  LOG_LEVEL[LOG_LEVEL["INFO"] = 3] = "INFO";
  LOG_LEVEL[LOG_LEVEL["DEBUG"] = 4] = "DEBUG";
  LOG_LEVEL[LOG_LEVEL["TRACE"] = 5] = "TRACE";
})(exports.LOG_LEVEL || (exports.LOG_LEVEL = {}));

var DeviceLogger = /*#__PURE__*/function () {
  function DeviceLogger() {
    var defaultComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'DEVICE';

    _classCallCheck(this, DeviceLogger);

    this.defaultComponent = void 0;
    this.sWindowName = window.top === window ? '' : "[".concat(window.location.pathname.split('/').slice(-1)[0], "] ");
    this.log(exports.LOG_LEVEL.INFO, 'Device API logging initialized');
    this.defaultComponent = defaultComponent;
    return this;
  }

  _createClass(DeviceLogger, [{
    key: "for",
    value: function _for(defaultComponent) {
      return new DeviceLogger(defaultComponent);
    }
  }, {
    key: "log",
    value: function log(iLevel, sMessage, sComponent) {
      sComponent = sComponent || this.defaultComponent || '';
      var oNow = new Date();
      var oLogEntry = {
        time: "".concat(pad0(oNow.getHours(), 2), ":").concat(pad0(oNow.getMinutes(), 2), ":").concat(pad0(oNow.getSeconds(), 2)),
        date: "".concat(pad0(oNow.getFullYear(), 4), "-").concat(pad0(oNow.getMonth() + 1, 2), "-").concat(pad0(oNow.getDate(), 2)),
        timestamp: oNow.getTime(),
        level: iLevel,
        message: sMessage || '',
        component: sComponent || ''
      };

      if (window.console) {
        var logText = "".concat(oLogEntry.date, " ").concat(oLogEntry.time, " ").concat(this.sWindowName).concat(oLogEntry.message, " - ").concat(oLogEntry.component);

        switch (iLevel) {
          case exports.LOG_LEVEL.FATAL:
          case exports.LOG_LEVEL.ERROR:
            console.error(logText);
            break;

          case exports.LOG_LEVEL.WARNING:
            console.warn(logText);
            break;

          case exports.LOG_LEVEL.INFO:
            console.info ? console.info(logText) : console.log(logText);
            break;
          // info not available in iOS simulator

          case exports.LOG_LEVEL.DEBUG:
            console.debug ? console.debug(logText) : console.log(logText);
            break;
          // debug not available in IE, fallback to log

          case exports.LOG_LEVEL.TRACE:
            console.trace ? console.trace(logText) : console.log(logText);
            break;
          // trace not available in IE, fallback to log
        }
      }

      return oLogEntry;
    } //  Public API

  }, {
    key: "fatal",
    value: function fatal(msg, component) {
      return this.log(exports.LOG_LEVEL.FATAL, msg, component);
    }
  }, {
    key: "error",
    value: function error(msg, component) {
      return this.log(exports.LOG_LEVEL.ERROR, msg, component);
    }
  }, {
    key: "warning",
    value: function warning(msg, component) {
      return this.log(exports.LOG_LEVEL.WARNING, msg, component);
    }
  }, {
    key: "info",
    value: function info(msg, component) {
      return this.log(exports.LOG_LEVEL.INFO, msg, component);
    }
  }, {
    key: "debug",
    value: function debug(msg, component) {
      return this.log(exports.LOG_LEVEL.DEBUG, msg, component);
    }
  }, {
    key: "trace",
    value: function trace(msg, component) {
      return this.log(exports.LOG_LEVEL.TRACE, msg, component);
    }
  }]);

  return DeviceLogger;
}();

var Logger = new DeviceLogger();

var windowSize = function windowSize() {
  return [window.innerWidth, window.innerHeight];
};
var changeRootCSSClass = function changeRootCSSClass(sClassName, bRemove, sPrefix) {
  var oRoot = document.documentElement;

  if (oRoot.className.length === 0) {
    if (!bRemove) {
      oRoot.className = sClassName;
    }
  } else {
    var aCurrentClasses = oRoot.className.split(' ');
    var sNewClasses = '';
    aCurrentClasses.forEach(function (currentClass) {
      // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with
      if (sPrefix && currentClass.indexOf(sPrefix) !== 0 || !sPrefix && currentClass !== sClassName) {
        sNewClasses = "".concat(sNewClasses + currentClass, " ");
      }
    });

    if (!bRemove) {
      sNewClasses += sClassName;
    }

    oRoot.className = sNewClasses;
  }
};
var getQuery = function getQuery(from, to, unit) {
  unit = unit || 'px';
  var q = 'all';

  if (from > 0) {
    q = "".concat(q, " and (min-width:").concat(from).concat(unit, ")");
  }

  if (to > 0) {
    q = "".concat(q, " and (max-width:").concat(to).concat(unit, ")");
  }

  return q;
};
var convertToPx = function convertToPx(val, unit) {
  if (unit === 'em' || unit === 'rem') {
    var _window$getComputedSt;

    var s = (_window$getComputedSt = window.getComputedStyle) !== null && _window$getComputedSt !== void 0 ? _window$getComputedSt : function (element) {
      return element.currentStyle;
    };
    var x = s(document.documentElement).fontSize;
    var f = x && x.indexOf('px') >= 0 ? parseFloat(x) : 16;
    return val * f;
  }

  return val;
};
var matchLegacyBySize = function matchLegacyBySize(from, to, unit, size) {
  from = convertToPx(from, unit);
  to = convertToPx(to, unit);
  var width = size[0];
  var a = from < 0 || from <= width;
  var b = to < 0 || width <= to;
  return a && b;
};

var _Media$predefinedRang;
var RANGESETS; // tslint:disable prefer-for-of variable-name one-variable-per-declaration

(function (RANGESETS) {
  RANGESETS["SAP_3STEPS"] = "3Step";
  RANGESETS["SAP_4STEPS"] = "4Step";
  RANGESETS["SAP_6STEPS"] = "6Step";
  RANGESETS["SAP_STANDARD"] = "Std";
  RANGESETS["SAP_STANDARD_EXTENDED"] = "StdExt";
})(RANGESETS || (RANGESETS = {}));

var support;
var defaultRangeSet = RANGESETS.SAP_STANDARD;
var querysets = {};
var mediaCurrentwidth = null;

var matchLegacy = function matchLegacy(from, to, unit) {
  return matchLegacyBySize(from, to, unit, windowSize());
};

var match = function match(from, to, unit) {
  var q = getQuery(from, to, unit);
  var mm = window.matchMedia(q); // FF returns null when running within an iframe with display:none

  return mm && mm.matches;
};

var refreshCSSClasses = function refreshCSSClasses(sSetName, sRangeName, bRemove) {
  var sClassPrefix = "sapUiMedia-".concat(sSetName, "-");
  changeRootCSSClass(sClassPrefix + sRangeName, bRemove, sClassPrefix);
};

var Media = /*#__PURE__*/function () {
  function Media(supportInstance) {
    _classCallCheck(this, Media);

    this.mediaTimeout = void 0;
    this.matches = void 0;
    this.RANGESETS = RANGESETS;
    support = supportInstance;
    this.mediaTimeout = support.matchmedialistener ? 0 : 100;
    this.matches = support.matchmedia ? match : matchLegacy;
    this.initRangeSet();
    this.initRangeSet(RANGESETS.SAP_STANDARD_EXTENDED);
  }

  _createClass(Media, [{
    key: "checkQueries",
    value: function checkQueries(name, infoOnly, fnMatches) {
      fnMatches = fnMatches || this.matches;

      if (querysets[name]) {
        var aQueries = querysets[name].queries;
        var info = null;

        for (var i = 0, len = aQueries.length; i < len; i++) {
          var q = aQueries[i];

          if ((q !== querysets[name].currentquery || infoOnly) && fnMatches(q.from, q.to, querysets[name].unit)) {
            if (!infoOnly) {
              querysets[name].currentquery = q;
            }

            if (!querysets[name].noClasses && querysets[name].names && !infoOnly) {
              refreshCSSClasses(name, querysets[name].names[i]);
            }

            info = Media.getRangeInfo(name, i);
          }
        }

        return info;
      }

      Logger.warning("No queryset with name ".concat(name, " found"), 'DEVICE.MEDIA');
      return null;
    }
  }, {
    key: "handleChange",
    value: function handleChange(name) {
      var _this = this;

      if (!support.matchmedialistener && mediaCurrentwidth === windowSize()[0]) {
        return; // Skip unnecessary resize events
      }

      if (querysets[name].timer) {
        clearTimeout(querysets[name].timer);
        querysets[name].timer = null;
      }

      querysets[name].timer = setTimeout(function () {
        var mParams = _this.checkQueries(name, false);

        if (mParams) {
          EventRegistry.fireEvent("media_".concat(name), mParams);
        }
      }, this.mediaTimeout);
    }
  }, {
    key: "attachHandler",
    value: function attachHandler(fnFunction, oListener, sName) {
      var name = sName || defaultRangeSet;
      EventRegistry.attachEvent("media_".concat(name), fnFunction, oListener);
    }
  }, {
    key: "detachHandler",
    value: function detachHandler(fnFunction, oListener, sName) {
      var name = sName || defaultRangeSet;
      EventRegistry.detachEvent("media_".concat(name), fnFunction, oListener);
    }
  }, {
    key: "initRangeSet",
    value: function initRangeSet(sName, aRangeBorders, sUnit, aRangeNames, bSuppressClasses) {
      var _this2 = this;

      var oConfig;

      if (!sName) {
        oConfig = Media.predefinedRangeSets[defaultRangeSet];
      } else if (sName && Media.predefinedRangeSets[sName]) {
        oConfig = Media.predefinedRangeSets[sName];
      } else {
        oConfig = {
          name: sName,
          unit: (sUnit || 'px').toLowerCase(),
          points: aRangeBorders || [],
          names: aRangeNames,
          noClasses: !!bSuppressClasses
        };
      }

      if (this.hasRangeSet(oConfig.name)) {
        Logger.info("Range set ".concat(oConfig.name, " has already been initialized"), 'DEVICE.MEDIA');
        return;
      }

      sName = oConfig.name;
      oConfig.queries = [];
      oConfig.timer = null;
      oConfig.currentquery = null;

      oConfig.listener = function () {
        return _this2.handleChange(sName);
      };

      var from;
      var to;
      var query;
      var aPoints = oConfig.points;

      for (var i = 0, len = aPoints.length; i <= len; i++) {
        from = i === 0 ? 0 : aPoints[i - 1];
        to = i === aPoints.length ? -1 : aPoints[i];
        query = getQuery(from, to, oConfig.unit);
        oConfig.queries.push({
          query: query,
          from: from,
          to: to
        });
      }

      if (oConfig.names && oConfig.names.length !== oConfig.queries.length) {
        oConfig.names = null;
      }

      querysets[oConfig.name] = oConfig;

      if (support.matchmedialistener) {
        // FF, Safari, Chrome, IE10?
        var queries = oConfig.queries;

        var _iterator = _createForOfIteratorHelper(queries),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var q = _step.value;
            q.media = window.matchMedia(q.query);
            q.media.addListener(oConfig.listener);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      } else {
        // IE, Safari (<6?)
        window.addEventListener('resize', oConfig.listener, false);
        window.addEventListener('orientationchange', oConfig.listener, false);
      }

      oConfig.listener();
    }
  }, {
    key: "getCurrentRange",
    value: function getCurrentRange(sName, iWidth) {
      if (!this.hasRangeSet(sName)) {
        return null;
      }

      return this.checkQueries(sName, true, isNaN(iWidth) ? null : function (from, to, unit) {
        return matchLegacyBySize(from, to, unit, [iWidth, 0]);
      });
    }
  }, {
    key: "hasRangeSet",
    value: function hasRangeSet(sName) {
      return sName && !!querysets[sName];
    }
  }, {
    key: "removeRangeSet",
    value: function removeRangeSet(sName) {
      if (!this.hasRangeSet(sName)) {
        Logger.info("RangeSet ".concat(sName, " not found, thus could not be removed."), 'DEVICE.MEDIA');
        return;
      }

      for (var x in RANGESETS) {
        if (sName === RANGESETS[x]) {
          Logger.warning('Cannot remove default rangeset - no action taken.', 'DEVICE.MEDIA');
          return;
        }
      }

      var oConfig = querysets[sName];

      if (support.matchmedialistener) {
        // FF, Safari, Chrome, IE10?
        var queries = oConfig.queries;

        var _iterator2 = _createForOfIteratorHelper(queries),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var q = _step2.value;
            q.media.removeListener(oConfig.listener);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      } else {
        // IE, Safari (<6?)
        window.removeEventListener('resize', oConfig.listener, false);
        window.removeEventListener('orientationchange', oConfig.listener, false);
      }

      refreshCSSClasses(sName, '', true);
      delete EventRegistry.mEventRegistry["media_".concat(sName)];
      delete querysets[sName];
    }
  }], [{
    key: "getRangeInfo",
    value: function getRangeInfo(sSetName, iRangeIdx) {
      var q = querysets[sSetName].queries[iRangeIdx];
      var info = {
        from: q.from,
        unit: querysets[sSetName].unit
      };

      if (q.to >= 0) {
        info.to = q.to;
      }

      if (querysets[sSetName].names) {
        info.name = querysets[sSetName].names[iRangeIdx];
      }

      return info;
    }
  }]);

  return Media;
}();
Media.predefinedRangeSets = (_Media$predefinedRang = {}, _defineProperty(_Media$predefinedRang, RANGESETS.SAP_3STEPS, {
  points: [520, 960],
  unit: 'px',
  name: RANGESETS.SAP_3STEPS,
  names: ['S', 'M', 'L']
}), _defineProperty(_Media$predefinedRang, RANGESETS.SAP_4STEPS, {
  points: [520, 760, 960],
  unit: 'px',
  name: RANGESETS.SAP_4STEPS,
  names: ['S', 'M', 'L', 'XL']
}), _defineProperty(_Media$predefinedRang, RANGESETS.SAP_6STEPS, {
  points: [241, 400, 541, 768, 960],
  unit: 'px',
  name: RANGESETS.SAP_6STEPS,
  names: ['XS', 'S', 'M', 'L', 'XL', 'XXL']
}), _defineProperty(_Media$predefinedRang, RANGESETS.SAP_STANDARD, {
  points: [600, 1024],
  unit: 'px',
  name: RANGESETS.SAP_STANDARD,
  names: ['Phone', 'Tablet', 'Desktop']
}), _defineProperty(_Media$predefinedRang, RANGESETS.SAP_STANDARD_EXTENDED, {
  points: [600, 1024, 1440],
  unit: 'px',
  name: RANGESETS.SAP_STANDARD_EXTENDED,
  names: ['Phone', 'Tablet', 'Desktop', 'LargeDesktop']
}), _Media$predefinedRang);

var Orientation = /*#__PURE__*/function () {
  function Orientation() {
    _classCallCheck(this, Orientation);

    this.landscape = void 0;
    this.portrait = void 0;
  }

  _createClass(Orientation, [{
    key: "attachHandler",
    value: function attachHandler(fnFunction, oListener) {
      EventRegistry.attachEvent('orientation', fnFunction, oListener);
    }
  }, {
    key: "detachHandler",
    value: function detachHandler(fnFunction, oListener) {
      EventRegistry.detachEvent('orientation', fnFunction, oListener);
    }
  }]);

  return Orientation;
}();

var Resize = /*#__PURE__*/function () {
  function Resize() {
    _classCallCheck(this, Resize);

    this.width = void 0;
    this.height = void 0;
    this.setResizeInfo();
  }

  _createClass(Resize, [{
    key: "attachHandler",
    value: function attachHandler(fnFunction, oListener) {
      EventRegistry.attachEvent('resize', fnFunction, oListener);
    }
  }, {
    key: "detachHandler",
    value: function detachHandler(fnFunction, oListener) {
      EventRegistry.detachEvent('resize', fnFunction, oListener);
    }
  }, {
    key: "setResizeInfo",
    value: function setResizeInfo() {
      this.width = windowSize()[0];
      this.height = windowSize()[1];
    }
  }]);

  return Resize;
}();

var Support = function Support() {
  _classCallCheck(this, Support);

  this.touch = Device$1.supportTouch();
  this.pointer = Modernizr.pointerevents;
  this.matchmedia = Modernizr.matchmedia;
  this.matchmedialistener = !!(this.matchmedia && window.matchMedia('all and (max-width:0px)'));
  this.orientation = Modernizr.deviceorientation;
  this.retina = window.retina || window.devicePixelRatio >= 2;
  this.websocket = Modernizr.websockets;
  this.input = {
    placeholder: Modernizr.placeholder
  };
};

var iResizeTimeout;
var bOrientationChange = false;
var bResize = false;
var iOrientationTimeout;
var iClearFlagTimeout;
var iWindowHeightOld = windowSize()[1];
var iWindowWidthOld = windowSize()[0];
var bKeyboardOpen = false;
var iLastResizeTime;
var rInputTagRegex = /INPUT|TEXTAREA|SELECT/;
var bSkipFirstResize;

var DeviceBuilder = function DeviceBuilder() {
  var _this = this;

  _classCallCheck(this, DeviceBuilder);

  this.os = Device$1.getOS();
  this.browser = Device$1.getBrowser();
  this.support = new Support();
  this.system = Device$1.getSystem();
  this.media = new Media(this.support);
  this.orientation = new Orientation();
  this.resize = new Resize();

  this.handleResizeEvent = function () {
    var wasL = _this.orientation.landscape;

    var isL = _this.isLandscape(false);

    if (wasL !== isL) {
      _this.handleOrientationChange();
    } // throttle resize events because most browsers throw one or more resize events per pixel
    // for every resize event inside the period from 150ms (starting from the first resize event),
    // we only fire one resize event after this period


    if (!iResizeTimeout) {
      iResizeTimeout = window.setTimeout(_this.handleResizeTimeout, 150);
    }
  };

  this.handleResizeTimeout = function () {
    _this.handleResizeChange();

    iResizeTimeout = null;
  };

  this.handleResizeChange = function () {
    _this.resize.setResizeInfo();

    EventRegistry.fireEvent('resize', {
      height: _this.resize.height,
      width: _this.resize.width
    });
  };

  this.setOrientationInfo = function () {
    _this.orientation.landscape = _this.isLandscape(true);
    _this.orientation.portrait = !_this.orientation.landscape;
  };

  this.handleOrientationChange = function () {
    _this.setOrientationInfo();

    EventRegistry.fireEvent('orientation', {
      landscape: _this.orientation.landscape
    });
  };

  this.isLandscape = function (bFromOrientationChange) {
    if (_this.support.touch && _this.support.orientation && _this.os.android) {
      // if on screen keyboard is open and the call of this method is from orientation change listener,
      // reverse the last value. this is because when keyboard opens on android device, the height can be less
      // than the width even in portrait mode.
      if (bKeyboardOpen && bFromOrientationChange) {
        return !_this.orientation.landscape;
      }

      if (bKeyboardOpen) {
        // when keyboard opens, the last orientation change value will be returned.
        return _this.orientation.landscape;
      }
    } else if (_this.support.matchmedia && _this.support.orientation) {
      // most desktop browsers and windows phone/tablet which not support orientationchange
      return !!window.matchMedia('(orientation: landscape)').matches;
    } // otherwise compare the width and height of window


    var size = windowSize();
    return size[0] > size[1];
  };

  this.handleMobileOrientationResizeChange = function (evt) {
    if (evt.type === 'resize') {
      if (bSkipFirstResize && rInputTagRegex.test(document.activeElement.tagName) && !bOrientationChange) {
        return;
      }

      var iWindowHeightNew = windowSize()[1];
      var iWindowWidthNew = windowSize()[0];
      var iTime = new Date().getTime(); // skip multiple resize events by only one orientationchange

      if (iWindowHeightNew === iWindowHeightOld && iWindowWidthNew === iWindowWidthOld) {
        return;
      }

      bResize = true; // on mobile devices opening the keyboard on some devices leads to a resize event
      // in this case only the height changes, not the width

      if (iWindowHeightOld !== iWindowHeightNew && iWindowWidthOld === iWindowWidthNew) {
        // Asus Transformer tablet fires two resize events when orientation changes while keyboard is open.
        // Between these two events, only the height changes. The check of if keyboard is open has to be skipped because
        // it may be judged as keyboard closed but the keyboard is still
        // open which will affect the orientation detection
        if (!iLastResizeTime || iTime - iLastResizeTime > 300) {
          bKeyboardOpen = iWindowHeightNew < iWindowHeightOld;
        }

        _this.handleResizeChange();
      } else {
        iWindowWidthOld = iWindowWidthNew;
      }

      iLastResizeTime = iTime;
      iWindowHeightOld = iWindowHeightNew;

      if (iClearFlagTimeout) {
        window.clearTimeout(iClearFlagTimeout);
        iClearFlagTimeout = null;
      } // Some Android build-in browser fires a resize event after the viewport is applied.
      // This resize event has to be dismissed otherwise when the next orientationchange event happens,
      // a UI5 resize event will be fired with the wrong window size.


      iClearFlagTimeout = window.setTimeout(DeviceBuilder.clearFlags, 1200);
    } else if (evt.type === 'orientationchange') {
      bOrientationChange = true;
    }

    if (iOrientationTimeout) {
      clearTimeout(iOrientationTimeout);
      iOrientationTimeout = null;
    }

    iOrientationTimeout = window.setTimeout(_this.handleMobileTimeout, 50);
  };

  this.handleMobileTimeout = function () {
    // with ios split view, the browser fires only resize event and no orientationchange
    // when changing the size of a split view
    // therefore the following if needs to be adapted with additional check of iPad with version greater or equal 9
    // (splitview was introduced with iOS 9)
    if (bResize && (bOrientationChange || _this.system.tablet && _this.os.ios && _this.os.version >= 9)) {
      _this.handleOrientationChange();

      _this.handleResizeChange();

      bOrientationChange = false;
      bResize = false;

      if (iClearFlagTimeout) {
        window.clearTimeout(iClearFlagTimeout);
        iClearFlagTimeout = null;
      }
    }

    iOrientationTimeout = null;
  };

  // On iPhone with iOS version 7.0.x and on iPad with iOS version 7.x
  // (tested with all versions below 7.1.1), there's an invalid resize event fired
  // when changing the orientation while keyboard is shown.
  bSkipFirstResize = this.os.ios && this.browser.name === 'sf' && (this.system.phone && this.os.version >= 7 && this.os.version < 7.1 || this.system.tablet && this.os.version >= 7); // Add handler for orientationchange and resize after initialization of Device API

  if (this.support.touch && this.support.orientation) {
    // logic for mobile devices which support orientationchange (like ios, android)
    window.addEventListener('resize', this.handleMobileOrientationResizeChange, false);
    window.addEventListener('orientationchange', this.handleMobileOrientationResizeChange, false);
  } else {
    // desktop browsers and windows phone/tablet which not support orientationchange
    window.addEventListener('resize', this.handleResizeEvent, false);
  }

  this.setOrientationInfo();
};

DeviceBuilder.clearFlags = function () {
  bOrientationChange = false;
  bResize = false;
  iClearFlagTimeout = null;
};

var Device = new DeviceBuilder();

var TINY_SPACE = '0.5rem';
var SMALL_SPACE = '1rem';
var MEDIUM_SPACE = '2rem';
var LARGE_SPACE = '3rem';
/*
 * ###################################################
 * Margin Classes
 * ###################################################
 */
// All Around Margins

var sapUiTinyMargin = {
  margin: TINY_SPACE
};
var sapUiSmallMargin = {
  margin: SMALL_SPACE
};
var sapUiMediumMargin = {
  margin: MEDIUM_SPACE
};
var sapUiLargeMargin = {
  margin: LARGE_SPACE
}; // Single Side Margins
// Tiny

var sapUiTinyMarginTop = {
  marginTop: TINY_SPACE
};
var sapUiTinyMarginBottom = {
  marginBottom: TINY_SPACE
};
var sapUiTinyMarginBegin = {
  marginLeft: TINY_SPACE
};
var sapUiTinyMarginEnd = {
  marginRight: TINY_SPACE
}; // Small

var sapUiSmallMarginTop = {
  marginTop: SMALL_SPACE
};
var sapUiSmallMarginBottom = {
  marginBottom: SMALL_SPACE
};
var sapUiSmallMarginBegin = {
  marginLeft: SMALL_SPACE
};
var sapUiSmallMarginEnd = {
  marginRight: SMALL_SPACE
}; // Medium

var sapUiMediumMarginTop = {
  marginTop: MEDIUM_SPACE
};
var sapUiMediumMarginBottom = {
  marginBottom: MEDIUM_SPACE
};
var sapUiMediumMarginBegin = {
  marginLeft: MEDIUM_SPACE
};
var sapUiMediumMarginEnd = {
  marginRight: MEDIUM_SPACE
}; // Large

var sapUiLargeMarginTop = {
  marginTop: LARGE_SPACE
};
var sapUiLargeMarginBottom = {
  marginBottom: LARGE_SPACE
};
var sapUiLargeMarginBegin = {
  marginLeft: LARGE_SPACE
};
var sapUiLargeMarginEnd = {
  marginRight: LARGE_SPACE
}; // Two Sided Margin
// Tiny

var sapUiTinyMarginBeginEnd = _objectSpread(_objectSpread({}, sapUiTinyMarginBegin), sapUiTinyMarginEnd);
var sapUiTinyMarginTopBottom = _objectSpread(_objectSpread({}, sapUiTinyMarginTop), sapUiTinyMarginBottom); // Small

var sapUiSmallMarginBeginEnd = _objectSpread(_objectSpread({}, sapUiSmallMarginBegin), sapUiSmallMarginEnd);
var sapUiSmallMarginTopBottom = _objectSpread(_objectSpread({}, sapUiSmallMarginTop), sapUiSmallMarginBottom); // Medium

var sapUiMediumMarginBeginEnd = _objectSpread(_objectSpread({}, sapUiMediumMarginBegin), sapUiMediumMarginEnd);
var sapUiMediumMarginTopBottom = _objectSpread(_objectSpread({}, sapUiMediumMarginTop), sapUiMediumMarginBottom); // Large

var sapUiLargeMarginBeginEnd = _objectSpread(_objectSpread({}, sapUiLargeMarginBegin), sapUiLargeMarginEnd);
var sapUiLargeMarginTopBottom = _objectSpread(_objectSpread({}, sapUiLargeMarginTop), sapUiLargeMarginBottom); // Remove Margins

var sapUiNoMargin = {
  margin: '0 !important'
}; // Remove Single Side Margins

var sapUiNoMarginTop = {
  marginTop: '0 !important'
};
var sapUiNoMarginBottom = {
  marginBottom: '0 !important'
};
var sapUiNoMarginBegin = {
  marginBegin: '0 !important'
};
var sapUiNoMarginEnd = {
  marginEnd: '0 !important'
}; // Force Auto Width

var sapUiForceWidthAuto = {
  width: 'auto !important'
};
var sapUiResponsiveMargin = {
  '@media(max-width:599px)': {
    margin: '0 0 1rem 0'
  },
  '@media (min-width:600px) and (max-width:1023px)': {
    margin: '1rem !important'
  },
  '@media (min-width:1024px) and (max-width: 1439px)': {
    margin: '1rem 2rem !important'
  },
  '@media (min-width:1440px)': {
    margin: '1rem 3rem !important'
  }
};
var sapUiTinyNegativeMarginBeginEnd = {
  margin: '0 -0.5rem !important'
};
var sapUiSmallNegativeMarginBeginEnd = {
  margin: '0 -1rem !important'
};
var sapUiMediumNegativeMarginBeginEnd = {
  margin: '0 -2rem !important'
};
var sapUiLargeNegativeMarginBeginEnd = {
  margin: '0 -3rem !important'
};
/*
 * ###################################################
 * Padding Classes
 * ###################################################
 */

var sapUiNoContentPadding = {
  padding: '0 !important'
};
var sapUiContentPadding = {
  padding: '1rem'
}; // Two Sided Padding

var sapUiTinyPaddingBeginEnd = {
  paddingLeft: '0.5rem !important',
  paddingRight: '0.5rem !important'
};
var sapUiSmallPaddingBeginEnd = {
  paddingLeft: '1rem !important',
  paddingRight: '1rem !important'
};
var sapUiMediumPaddingBeginEnd = {
  paddingLeft: '2rem !important',
  paddingRight: '2rem !important'
};
var sapUiLargePaddingBeginEnd = {
  paddingLeft: '3rem !important',
  paddingRight: '3rem !important'
};
var sapUiResponsiveContentPadding = {
  '@media(max-width:599px)': {
    padding: '0 1rem'
  },
  '@media (min-width:600px) and (max-width:1023px)': {
    padding: '0 2rem'
  },
  '@media (min-width:1024px) and (max-width: 1439px)': {
    padding: '0 2rem !important'
  },
  '@media (min-width:1440px)': {
    padding: '0 3rem !important'
  }
};

var spacing = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sapUiTinyMargin: sapUiTinyMargin,
  sapUiSmallMargin: sapUiSmallMargin,
  sapUiMediumMargin: sapUiMediumMargin,
  sapUiLargeMargin: sapUiLargeMargin,
  sapUiTinyMarginTop: sapUiTinyMarginTop,
  sapUiTinyMarginBottom: sapUiTinyMarginBottom,
  sapUiTinyMarginBegin: sapUiTinyMarginBegin,
  sapUiTinyMarginEnd: sapUiTinyMarginEnd,
  sapUiSmallMarginTop: sapUiSmallMarginTop,
  sapUiSmallMarginBottom: sapUiSmallMarginBottom,
  sapUiSmallMarginBegin: sapUiSmallMarginBegin,
  sapUiSmallMarginEnd: sapUiSmallMarginEnd,
  sapUiMediumMarginTop: sapUiMediumMarginTop,
  sapUiMediumMarginBottom: sapUiMediumMarginBottom,
  sapUiMediumMarginBegin: sapUiMediumMarginBegin,
  sapUiMediumMarginEnd: sapUiMediumMarginEnd,
  sapUiLargeMarginTop: sapUiLargeMarginTop,
  sapUiLargeMarginBottom: sapUiLargeMarginBottom,
  sapUiLargeMarginBegin: sapUiLargeMarginBegin,
  sapUiLargeMarginEnd: sapUiLargeMarginEnd,
  sapUiTinyMarginBeginEnd: sapUiTinyMarginBeginEnd,
  sapUiTinyMarginTopBottom: sapUiTinyMarginTopBottom,
  sapUiSmallMarginBeginEnd: sapUiSmallMarginBeginEnd,
  sapUiSmallMarginTopBottom: sapUiSmallMarginTopBottom,
  sapUiMediumMarginBeginEnd: sapUiMediumMarginBeginEnd,
  sapUiMediumMarginTopBottom: sapUiMediumMarginTopBottom,
  sapUiLargeMarginBeginEnd: sapUiLargeMarginBeginEnd,
  sapUiLargeMarginTopBottom: sapUiLargeMarginTopBottom,
  sapUiNoMargin: sapUiNoMargin,
  sapUiNoMarginTop: sapUiNoMarginTop,
  sapUiNoMarginBottom: sapUiNoMarginBottom,
  sapUiNoMarginBegin: sapUiNoMarginBegin,
  sapUiNoMarginEnd: sapUiNoMarginEnd,
  sapUiForceWidthAuto: sapUiForceWidthAuto,
  sapUiResponsiveMargin: sapUiResponsiveMargin,
  sapUiTinyNegativeMarginBeginEnd: sapUiTinyNegativeMarginBeginEnd,
  sapUiSmallNegativeMarginBeginEnd: sapUiSmallNegativeMarginBeginEnd,
  sapUiMediumNegativeMarginBeginEnd: sapUiMediumNegativeMarginBeginEnd,
  sapUiLargeNegativeMarginBeginEnd: sapUiLargeNegativeMarginBeginEnd,
  sapUiNoContentPadding: sapUiNoContentPadding,
  sapUiContentPadding: sapUiContentPadding,
  sapUiTinyPaddingBeginEnd: sapUiTinyPaddingBeginEnd,
  sapUiSmallPaddingBeginEnd: sapUiSmallPaddingBeginEnd,
  sapUiMediumPaddingBeginEnd: sapUiMediumPaddingBeginEnd,
  sapUiLargePaddingBeginEnd: sapUiLargePaddingBeginEnd,
  sapUiResponsiveContentPadding: sapUiResponsiveContentPadding
});

/**
 * Created by d059190 at 16.03.18
 */
var StyleClassHelper = /*#__PURE__*/function () {
  function StyleClassHelper() {
    _classCallCheck(this, StyleClassHelper);

    this.classes = [];

    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
      classes[_key] = arguments[_key];
    }

    this.classes = [].concat(classes);
  }

  _createClass(StyleClassHelper, [{
    key: "put",
    value: function put() {
      var _this$classes;

      (_this$classes = this.classes).push.apply(_this$classes, arguments);

      return this;
    }
  }, {
    key: "putIfPresent",
    value: function putIfPresent() {
      for (var _len2 = arguments.length, clazzes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        clazzes[_key2] = arguments[_key2];
      }

      for (var _i = 0, _clazzes = clazzes; _i < _clazzes.length; _i++) {
        var clazz = _clazzes[_i];

        if (clazz) {
          this.classes.push(clazz);
        }
      }

      return this;
    }
  }, {
    key: "valueOf",
    value: function valueOf() {
      return this.className;
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.className;
    }
  }, {
    key: "className",
    get: function get() {
      return this.classes.join(' ');
    }
  }], [{
    key: "of",
    value: function of() {
      var _StyleClassHelper;

      return (_StyleClassHelper = new StyleClassHelper()).put.apply(_StyleClassHelper, arguments);
    }
  }]);

  return StyleClassHelper;
}();

/* eslint-disable camelcase */

/*
 * ### WARNING ###
 * This is an autogenerated file, do not change manually.
 * In order to recreate this file, please run 'node packages/base/scripts/cssVariables/parse.js'
 */
var ThemingParameters = {
  sapBrandColor: 'var(--sapBrandColor)',
  sapHighlightColor: 'var(--sapHighlightColor)',
  sapBaseColor: 'var(--sapBaseColor)',
  sapShellColor: 'var(--sapShellColor)',
  sapBackgroundColor: 'var(--sapBackgroundColor)',
  sapFontFamily: 'var(--sapFontFamily)',
  sapFontLightFamily: 'var(--sapFontLightFamily)',
  sapFontBoldFamily: 'var(--sapFontBoldFamily)',
  sapFontHeaderFamily: 'var(--sapFontHeaderFamily)',
  sapFontSize: 'var(--sapFontSize)',
  sapFontSmallSize: 'var(--sapFontSmallSize)',
  sapFontLargeSize: 'var(--sapFontLargeSize)',
  sapFontHeader1Size: 'var(--sapFontHeader1Size)',
  sapFontHeader2Size: 'var(--sapFontHeader2Size)',
  sapFontHeader3Size: 'var(--sapFontHeader3Size)',
  sapFontHeader4Size: 'var(--sapFontHeader4Size)',
  sapFontHeader5Size: 'var(--sapFontHeader5Size)',
  sapFontHeader6Size: 'var(--sapFontHeader6Size)',
  sapTextColor: 'var(--sapTextColor)',
  sapLinkColor: 'var(--sapLinkColor)',
  sapLink_Hover_Color: 'var(--sapLink_Hover_Color)',
  sapLink_Active_Color: 'var(--sapLink_Active_Color)',
  sapLink_Visited_Color: 'var(--sapLink_Visited_Color)',
  sapLink_InvertedColor: 'var(--sapLink_InvertedColor)',
  sapCompanyLogo: 'var(--sapCompanyLogo)',
  sapBackgroundImage: 'var(--sapBackgroundImage)',
  sapBackgroundImageOpacity: 'var(--sapBackgroundImageOpacity)',
  sapBackgroundImageRepeat: 'var(--sapBackgroundImageRepeat)',
  sapSelectedColor: 'var(--sapSelectedColor)',
  sapActiveColor: 'var(--sapActiveColor)',
  sapHighlightTextColor: 'var(--sapHighlightTextColor)',
  sapTitleColor: 'var(--sapTitleColor)',
  sapNegativeColor: 'var(--sapNegativeColor)',
  sapCriticalColor: 'var(--sapCriticalColor)',
  sapPositiveColor: 'var(--sapPositiveColor)',
  sapInformativeColor: 'var(--sapInformativeColor)',
  sapNeutralColor: 'var(--sapNeutralColor)',
  sapNegativeElementColor: 'var(--sapNegativeElementColor)',
  sapCriticalElementColor: 'var(--sapCriticalElementColor)',
  sapPositiveElementColor: 'var(--sapPositiveElementColor)',
  sapInformativeElementColor: 'var(--sapInformativeElementColor)',
  sapNeutralElementColor: 'var(--sapNeutralElementColor)',
  sapNegativeTextColor: 'var(--sapNegativeTextColor)',
  sapPositiveTextColor: 'var(--sapPositiveTextColor)',
  sapCriticalTextColor: 'var(--sapCriticalTextColor)',
  sapInformativeTextColor: 'var(--sapInformativeTextColor)',
  sapNeutralTextColor: 'var(--sapNeutralTextColor)',
  sapNeutralBorderColor: 'var(--sapNeutralBorderColor)',
  sapErrorColor: 'var(--sapErrorColor)',
  sapErrorBorderColor: 'var(--sapErrorBorderColor)',
  sapWarningColor: 'var(--sapWarningColor)',
  sapWarningBorderColor: 'var(--sapWarningBorderColor)',
  sapSuccessColor: 'var(--sapSuccessColor)',
  sapSuccessBorderColor: 'var(--sapSuccessBorderColor)',
  sapInformationColor: 'var(--sapInformationColor)',
  sapInformationBorderColor: 'var(--sapInformationBorderColor)',
  sapErrorBackground: 'var(--sapErrorBackground)',
  sapWarningBackground: 'var(--sapWarningBackground)',
  sapSuccessBackground: 'var(--sapSuccessBackground)',
  sapInformationBackground: 'var(--sapInformationBackground)',
  sapNeutralBackground: 'var(--sapNeutralBackground)',
  sapIndicationColor_1: 'var(--sapIndicationColor_1)',
  sapIndicationColor_2: 'var(--sapIndicationColor_2)',
  sapIndicationColor_3: 'var(--sapIndicationColor_3)',
  sapIndicationColor_4: 'var(--sapIndicationColor_4)',
  sapIndicationColor_5: 'var(--sapIndicationColor_5)',
  sapIndicationColor_6: 'var(--sapIndicationColor_6)',
  sapIndicationColor_7: 'var(--sapIndicationColor_7)',
  sapIndicationColor_8: 'var(--sapIndicationColor_8)',
  sapElement_LineHeight: 'var(--sapElement_LineHeight)',
  sapElement_Height: 'var(--sapElement_Height)',
  sapElement_BorderWidth: 'var(--sapElement_BorderWidth)',
  sapElement_BorderCornerRadius: 'var(--sapElement_BorderCornerRadius)',
  sapElement_Compact_LineHeight: 'var(--sapElement_Compact_LineHeight)',
  sapElement_Compact_Height: 'var(--sapElement_Compact_Height)',
  sapElement_Condensed_LineHeight: 'var(--sapElement_Condensed_LineHeight)',
  sapElement_Condensed_Height: 'var(--sapElement_Condensed_Height)',
  sapContent_LineHeight: 'var(--sapContent_LineHeight)',
  sapContent_IconHeight: 'var(--sapContent_IconHeight)',
  sapContent_IconColor: 'var(--sapContent_IconColor)',
  sapContent_ContrastIconColor: 'var(--sapContent_ContrastIconColor)',
  sapContent_NonInteractiveIconColor: 'var(--sapContent_NonInteractiveIconColor)',
  sapContent_MarkerIconColor: 'var(--sapContent_MarkerIconColor)',
  sapContent_MarkerTextColor: 'var(--sapContent_MarkerTextColor)',
  sapContent_ImagePlaceholderBackground: 'var(--sapContent_ImagePlaceholderBackground)',
  sapContent_ImagePlaceholderForegroundColor: 'var(--sapContent_ImagePlaceholderForegroundColor)',
  sapContent_RatedColor: 'var(--sapContent_RatedColor)',
  sapContent_UnratedColor: 'var(--sapContent_UnratedColor)',
  sapContent_FocusColor: 'var(--sapContent_FocusColor)',
  sapContent_FocusStyle: 'var(--sapContent_FocusStyle)',
  sapContent_FocusWidth: 'var(--sapContent_FocusWidth)',
  sapContent_ContrastFocusColor: 'var(--sapContent_ContrastFocusColor)',
  sapContent_ShadowColor: 'var(--sapContent_ShadowColor)',
  sapContent_ContrastShadowColor: 'var(--sapContent_ContrastShadowColor)',
  sapContent_Shadow0: 'var(--sapContent_Shadow0)',
  sapContent_Shadow1: 'var(--sapContent_Shadow1)',
  sapContent_Shadow2: 'var(--sapContent_Shadow2)',
  sapContent_Shadow3: 'var(--sapContent_Shadow3)',
  sapContent_TextShadow: 'var(--sapContent_TextShadow)',
  sapContent_HeaderShadow: 'var(--sapContent_HeaderShadow)',
  sapContent_SearchHighlightColor: 'var(--sapContent_SearchHighlightColor)',
  sapContent_HelpColor: 'var(--sapContent_HelpColor)',
  sapContent_LabelColor: 'var(--sapContent_LabelColor)',
  sapContent_MonospaceFontFamily: 'var(--sapContent_MonospaceFontFamily)',
  sapContent_DisabledTextColor: 'var(--sapContent_DisabledTextColor)',
  sapContent_DisabledOpacity: 'var(--sapContent_DisabledOpacity)',
  sapContent_ContrastTextThreshold: 'var(--sapContent_ContrastTextThreshold)',
  sapContent_ContrastTextColor: 'var(--sapContent_ContrastTextColor)',
  sapContent_ForegroundColor: 'var(--sapContent_ForegroundColor)',
  sapContent_ForegroundBorderColor: 'var(--sapContent_ForegroundBorderColor)',
  sapContent_ForegroundTextColor: 'var(--sapContent_ForegroundTextColor)',
  sapContent_BadgeBackground: 'var(--sapContent_BadgeBackground)',
  sapContent_BadgeTextColor: 'var(--sapContent_BadgeTextColor)',
  sapContent_Placeholderloading_Background: 'var(--sapContent_Placeholderloading_Background)',
  sapContent_Placeholderloading_Gradient: 'var(--sapContent_Placeholderloading_Gradient)',
  sapContent_DragAndDropActiveColor: 'var(--sapContent_DragAndDropActiveColor)',
  sapContent_Selected_Background: 'var(--sapContent_Selected_Background)',
  sapContent_Selected_TextColor: 'var(--sapContent_Selected_TextColor)',
  sapContent_Selected_Hover_Background: 'var(--sapContent_Selected_Hover_Background)',
  sapContent_Illustrative_Color1: 'var(--sapContent_Illustrative_Color1)',
  sapContent_Illustrative_Color2: 'var(--sapContent_Illustrative_Color2)',
  sapContent_Illustrative_Color3: 'var(--sapContent_Illustrative_Color3)',
  sapContent_Illustrative_Color4: 'var(--sapContent_Illustrative_Color4)',
  sapContent_Illustrative_Color5: 'var(--sapContent_Illustrative_Color5)',
  sapContent_Illustrative_Color6: 'var(--sapContent_Illustrative_Color6)',
  sapContent_Illustrative_Color7: 'var(--sapContent_Illustrative_Color7)',
  sapContent_Illustrative_Color8: 'var(--sapContent_Illustrative_Color8)',
  sapShell_Background: 'var(--sapShell_Background)',
  sapShell_BackgroundImage: 'var(--sapShell_BackgroundImage)',
  sapShell_BackgroundGradient: 'var(--sapShell_BackgroundGradient)',
  sapShell_BackgroundImageOpacity: 'var(--sapShell_BackgroundImageOpacity)',
  sapShell_BackgroundImageRepeat: 'var(--sapShell_BackgroundImageRepeat)',
  sapShell_BorderColor: 'var(--sapShell_BorderColor)',
  sapShell_TextColor: 'var(--sapShell_TextColor)',
  sapShell_InteractiveTextColor: 'var(--sapShell_InteractiveTextColor)',
  sapShell_InteractiveBorderColor: 'var(--sapShell_InteractiveBorderColor)',
  sapShell_GroupTitleTextColor: 'var(--sapShell_GroupTitleTextColor)',
  sapShell_Hover_Background: 'var(--sapShell_Hover_Background)',
  sapShell_Active_Background: 'var(--sapShell_Active_Background)',
  sapShell_Active_TextColor: 'var(--sapShell_Active_TextColor)',
  sapShell_Selected_Background: 'var(--sapShell_Selected_Background)',
  sapShell_Selected_TextColor: 'var(--sapShell_Selected_TextColor)',
  sapShell_Selected_Hover_Background: 'var(--sapShell_Selected_Hover_Background)',
  sapShell_Favicon: 'var(--sapShell_Favicon)',
  sapShell_Navigation_Background: 'var(--sapShell_Navigation_Background)',
  sapShell_Navigation_SelectedColor: 'var(--sapShell_Navigation_SelectedColor)',
  sapShell_Navigation_Selected_TextColor: 'var(--sapShell_Navigation_Selected_TextColor)',
  sapShell_Navigation_TextColor: 'var(--sapShell_Navigation_TextColor)',
  sapShell_Shadow: 'var(--sapShell_Shadow)',
  sapButton_BorderWidth: 'var(--sapButton_BorderWidth)',
  sapButton_BorderCornerRadius: 'var(--sapButton_BorderCornerRadius)',
  sapButton_Background: 'var(--sapButton_Background)',
  sapButton_BorderColor: 'var(--sapButton_BorderColor)',
  sapButton_TextColor: 'var(--sapButton_TextColor)',
  sapButton_Hover_Background: 'var(--sapButton_Hover_Background)',
  sapButton_Hover_BorderColor: 'var(--sapButton_Hover_BorderColor)',
  sapButton_Hover_TextColor: 'var(--sapButton_Hover_TextColor)',
  sapButton_IconColor: 'var(--sapButton_IconColor)',
  sapButton_Active_Background: 'var(--sapButton_Active_Background)',
  sapButton_Active_BorderColor: 'var(--sapButton_Active_BorderColor)',
  sapButton_Active_TextColor: 'var(--sapButton_Active_TextColor)',
  sapButton_Emphasized_Background: 'var(--sapButton_Emphasized_Background)',
  sapButton_Emphasized_BorderColor: 'var(--sapButton_Emphasized_BorderColor)',
  sapButton_Emphasized_TextColor: 'var(--sapButton_Emphasized_TextColor)',
  sapButton_Emphasized_Hover_Background: 'var(--sapButton_Emphasized_Hover_Background)',
  sapButton_Emphasized_Hover_BorderColor: 'var(--sapButton_Emphasized_Hover_BorderColor)',
  sapButton_Emphasized_Hover_TextColor: 'var(--sapButton_Emphasized_Hover_TextColor)',
  sapButton_Emphasized_Active_Background: 'var(--sapButton_Emphasized_Active_Background)',
  sapButton_Emphasized_Active_BorderColor: 'var(--sapButton_Emphasized_Active_BorderColor)',
  sapButton_Emphasized_TextShadow: 'var(--sapButton_Emphasized_TextShadow)',
  sapButton_Accept_Background: 'var(--sapButton_Accept_Background)',
  sapButton_Accept_BorderColor: 'var(--sapButton_Accept_BorderColor)',
  sapButton_Accept_Hover_Background: 'var(--sapButton_Accept_Hover_Background)',
  sapButton_Accept_Hover_BorderColor: 'var(--sapButton_Accept_Hover_BorderColor)',
  sapButton_Accept_Hover_TextColor: 'var(--sapButton_Accept_Hover_TextColor)',
  sapButton_Accept_Active_Background: 'var(--sapButton_Accept_Active_Background)',
  sapButton_Accept_Active_BorderColor: 'var(--sapButton_Accept_Active_BorderColor)',
  sapButton_Accept_TextColor: 'var(--sapButton_Accept_TextColor)',
  sapButton_Accept_Selected_Background: 'var(--sapButton_Accept_Selected_Background)',
  sapButton_Accept_Selected_BorderColor: 'var(--sapButton_Accept_Selected_BorderColor)',
  sapButton_Accept_Selected_TextColor: 'var(--sapButton_Accept_Selected_TextColor)',
  sapButton_Accept_Selected_Hover_Background: 'var(--sapButton_Accept_Selected_Hover_Background)',
  sapButton_Accept_Selected_Hover_BorderColor: 'var(--sapButton_Accept_Selected_Hover_BorderColor)',
  sapButton_Reject_Background: 'var(--sapButton_Reject_Background)',
  sapButton_Reject_BorderColor: 'var(--sapButton_Reject_BorderColor)',
  sapButton_Reject_Hover_Background: 'var(--sapButton_Reject_Hover_Background)',
  sapButton_Reject_Hover_BorderColor: 'var(--sapButton_Reject_Hover_BorderColor)',
  sapButton_Reject_Hover_TextColor: 'var(--sapButton_Reject_Hover_TextColor)',
  sapButton_Reject_Active_Background: 'var(--sapButton_Reject_Active_Background)',
  sapButton_Reject_Active_BorderColor: 'var(--sapButton_Reject_Active_BorderColor)',
  sapButton_Reject_TextColor: 'var(--sapButton_Reject_TextColor)',
  sapButton_Reject_Selected_Background: 'var(--sapButton_Reject_Selected_Background)',
  sapButton_Reject_Selected_BorderColor: 'var(--sapButton_Reject_Selected_BorderColor)',
  sapButton_Reject_Selected_TextColor: 'var(--sapButton_Reject_Selected_TextColor)',
  sapButton_Reject_Selected_Hover_Background: 'var(--sapButton_Reject_Selected_Hover_Background)',
  sapButton_Reject_Selected_Hover_BorderColor: 'var(--sapButton_Reject_Selected_Hover_BorderColor)',
  sapButton_Lite_Background: 'var(--sapButton_Lite_Background)',
  sapButton_Lite_BorderColor: 'var(--sapButton_Lite_BorderColor)',
  sapButton_Lite_TextColor: 'var(--sapButton_Lite_TextColor)',
  sapButton_Lite_Hover_Background: 'var(--sapButton_Lite_Hover_Background)',
  sapButton_Lite_Hover_BorderColor: 'var(--sapButton_Lite_Hover_BorderColor)',
  sapButton_Lite_Hover_TextColor: 'var(--sapButton_Lite_Hover_TextColor)',
  sapButton_Lite_Active_Background: 'var(--sapButton_Lite_Active_Background)',
  sapButton_Lite_Active_BorderColor: 'var(--sapButton_Lite_Active_BorderColor)',
  sapButton_Selected_Background: 'var(--sapButton_Selected_Background)',
  sapButton_Selected_BorderColor: 'var(--sapButton_Selected_BorderColor)',
  sapButton_Selected_TextColor: 'var(--sapButton_Selected_TextColor)',
  sapButton_Selected_Hover_Background: 'var(--sapButton_Selected_Hover_Background)',
  sapButton_Selected_Hover_BorderColor: 'var(--sapButton_Selected_Hover_BorderColor)',
  sapButton_Attention_Background: 'var(--sapButton_Attention_Background)',
  sapButton_Attention_BorderColor: 'var(--sapButton_Attention_BorderColor)',
  sapButton_Attention_TextColor: 'var(--sapButton_Attention_TextColor)',
  sapButton_Attention_Hover_Background: 'var(--sapButton_Attention_Hover_Background)',
  sapButton_Attention_Hover_BorderColor: 'var(--sapButton_Attention_Hover_BorderColor)',
  sapButton_Attention_Hover_TextColor: 'var(--sapButton_Attention_Hover_TextColor)',
  sapButton_Attention_Active_Background: 'var(--sapButton_Attention_Active_Background)',
  sapButton_Attention_Active_BorderColor: 'var(--sapButton_Attention_Active_BorderColor)',
  sapButton_Attention_Selected_Background: 'var(--sapButton_Attention_Selected_Background)',
  sapButton_Attention_Selected_BorderColor: 'var(--sapButton_Attention_Selected_BorderColor)',
  sapButton_Attention_Selected_TextColor: 'var(--sapButton_Attention_Selected_TextColor)',
  sapButton_Attention_Selected_Hover_Background: 'var(--sapButton_Attention_Selected_Hover_Background)',
  sapButton_Attention_Selected_Hover_BorderColor: 'var(--sapButton_Attention_Selected_Hover_BorderColor)',
  sapButton_Negative_Background: 'var(--sapButton_Negative_Background)',
  sapButton_Negative_BorderColor: 'var(--sapButton_Negative_BorderColor)',
  sapButton_Negative_TextColor: 'var(--sapButton_Negative_TextColor)',
  sapButton_Negative_Hover_Background: 'var(--sapButton_Negative_Hover_Background)',
  sapButton_Negative_Hover_BorderColor: 'var(--sapButton_Negative_Hover_BorderColor)',
  sapButton_Negative_Hover_TextColor: 'var(--sapButton_Negative_Hover_TextColor)',
  sapButton_Negative_Active_Background: 'var(--sapButton_Negative_Active_Background)',
  sapButton_Negative_Active_BorderColor: 'var(--sapButton_Negative_Active_BorderColor)',
  sapButton_Critical_Background: 'var(--sapButton_Critical_Background)',
  sapButton_Critical_BorderColor: 'var(--sapButton_Critical_BorderColor)',
  sapButton_Critical_TextColor: 'var(--sapButton_Critical_TextColor)',
  sapButton_Critical_Hover_Background: 'var(--sapButton_Critical_Hover_Background)',
  sapButton_Critical_Hover_BorderColor: 'var(--sapButton_Critical_Hover_BorderColor)',
  sapButton_Critical_Hover_TextColor: 'var(--sapButton_Critical_Hover_TextColor)',
  sapButton_Critical_Active_Background: 'var(--sapButton_Critical_Active_Background)',
  sapButton_Critical_Active_BorderColor: 'var(--sapButton_Critical_Active_BorderColor)',
  sapButton_Success_Background: 'var(--sapButton_Success_Background)',
  sapButton_Success_BorderColor: 'var(--sapButton_Success_BorderColor)',
  sapButton_Success_TextColor: 'var(--sapButton_Success_TextColor)',
  sapButton_Success_Hover_Background: 'var(--sapButton_Success_Hover_Background)',
  sapButton_Success_Hover_BorderColor: 'var(--sapButton_Success_Hover_BorderColor)',
  sapButton_Success_Hover_TextColor: 'var(--sapButton_Success_Hover_TextColor)',
  sapButton_Success_Active_Background: 'var(--sapButton_Success_Active_Background)',
  sapButton_Success_Active_BorderColor: 'var(--sapButton_Success_Active_BorderColor)',
  sapButton_Neutral_Background: 'var(--sapButton_Neutral_Background)',
  sapButton_Neutral_BorderColor: 'var(--sapButton_Neutral_BorderColor)',
  sapButton_Neutral_TextColor: 'var(--sapButton_Neutral_TextColor)',
  sapButton_Neutral_Hover_Background: 'var(--sapButton_Neutral_Hover_Background)',
  sapButton_Neutral_Hover_BorderColor: 'var(--sapButton_Neutral_Hover_BorderColor)',
  sapButton_Neutral_Hover_TextColor: 'var(--sapButton_Neutral_Hover_TextColor)',
  sapButton_Neutral_Active_Background: 'var(--sapButton_Neutral_Active_Background)',
  sapButton_Neutral_Active_BorderColor: 'var(--sapButton_Neutral_Active_BorderColor)',
  sapButton_Track_Selected_Background: 'var(--sapButton_Track_Selected_Background)',
  sapButton_Track_Selected_TextColor: 'var(--sapButton_Track_Selected_TextColor)',
  sapButton_Track_Background: 'var(--sapButton_Track_Background)',
  sapButton_Track_TextColor: 'var(--sapButton_Track_TextColor)',
  sapButton_TokenBackground: 'var(--sapButton_TokenBackground)',
  sapButton_TokenBorderColor: 'var(--sapButton_TokenBorderColor)',
  sapField_Background: 'var(--sapField_Background)',
  sapField_TextColor: 'var(--sapField_TextColor)',
  sapField_PlaceholderTextColor: 'var(--sapField_PlaceholderTextColor)',
  sapField_BorderColor: 'var(--sapField_BorderColor)',
  sapField_HelpBackground: 'var(--sapField_HelpBackground)',
  sapField_BorderWidth: 'var(--sapField_BorderWidth)',
  sapField_BorderCornerRadius: 'var(--sapField_BorderCornerRadius)',
  sapField_Hover_Background: 'var(--sapField_Hover_Background)',
  sapField_Hover_BorderColor: 'var(--sapField_Hover_BorderColor)',
  sapField_Hover_HelpBackground: 'var(--sapField_Hover_HelpBackground)',
  sapField_Active_BorderColor: 'var(--sapField_Active_BorderColor)',
  sapField_Focus_Background: 'var(--sapField_Focus_Background)',
  sapField_Focus_BorderColor: 'var(--sapField_Focus_BorderColor)',
  sapField_Focus_HelpBackground: 'var(--sapField_Focus_HelpBackground)',
  sapField_ReadOnly_Background: 'var(--sapField_ReadOnly_Background)',
  sapField_ReadOnly_BorderColor: 'var(--sapField_ReadOnly_BorderColor)',
  sapField_ReadOnly_HelpBackground: 'var(--sapField_ReadOnly_HelpBackground)',
  sapField_RequiredColor: 'var(--sapField_RequiredColor)',
  sapField_InvalidColor: 'var(--sapField_InvalidColor)',
  sapField_InvalidBackground: 'var(--sapField_InvalidBackground)',
  sapField_WarningColor: 'var(--sapField_WarningColor)',
  sapField_WarningBackground: 'var(--sapField_WarningBackground)',
  sapField_SuccessColor: 'var(--sapField_SuccessColor)',
  sapField_SuccessBackground: 'var(--sapField_SuccessBackground)',
  sapField_InformationColor: 'var(--sapField_InformationColor)',
  sapField_InformationBackground: 'var(--sapField_InformationBackground)',
  sapGroup_TitleBackground: 'var(--sapGroup_TitleBackground)',
  sapGroup_TitleBorderColor: 'var(--sapGroup_TitleBorderColor)',
  sapGroup_TitleTextColor: 'var(--sapGroup_TitleTextColor)',
  sapGroup_ContentBackground: 'var(--sapGroup_ContentBackground)',
  sapGroup_ContentBorderColor: 'var(--sapGroup_ContentBorderColor)',
  sapGroup_BorderWidth: 'var(--sapGroup_BorderWidth)',
  sapGroup_BorderCornerRadius: 'var(--sapGroup_BorderCornerRadius)',
  sapGroup_FooterBackground: 'var(--sapGroup_FooterBackground)',
  sapToolbar_Background: 'var(--sapToolbar_Background)',
  sapToolbar_SeparatorColor: 'var(--sapToolbar_SeparatorColor)',
  sapList_HeaderBackground: 'var(--sapList_HeaderBackground)',
  sapList_HeaderBorderColor: 'var(--sapList_HeaderBorderColor)',
  sapList_HeaderTextColor: 'var(--sapList_HeaderTextColor)',
  sapList_BorderColor: 'var(--sapList_BorderColor)',
  sapList_TextColor: 'var(--sapList_TextColor)',
  sapList_Active_TextColor: 'var(--sapList_Active_TextColor)',
  sapList_BorderWidth: 'var(--sapList_BorderWidth)',
  sapList_Active_Background: 'var(--sapList_Active_Background)',
  sapList_SelectionBackgroundColor: 'var(--sapList_SelectionBackgroundColor)',
  sapList_SelectionBorderColor: 'var(--sapList_SelectionBorderColor)',
  sapList_Hover_SelectionBackground: 'var(--sapList_Hover_SelectionBackground)',
  sapList_Background: 'var(--sapList_Background)',
  sapList_Hover_Background: 'var(--sapList_Hover_Background)',
  sapList_AlternatingBackground: 'var(--sapList_AlternatingBackground)',
  sapList_GroupHeaderBackground: 'var(--sapList_GroupHeaderBackground)',
  sapList_GroupHeaderBorderColor: 'var(--sapList_GroupHeaderBorderColor)',
  sapList_GroupHeaderTextColor: 'var(--sapList_GroupHeaderTextColor)',
  sapList_FooterBackground: 'var(--sapList_FooterBackground)',
  sapList_FooterTextColor: 'var(--sapList_FooterTextColor)',
  sapList_TableGroupHeaderBackground: 'var(--sapList_TableGroupHeaderBackground)',
  sapList_TableGroupHeaderBorderColor: 'var(--sapList_TableGroupHeaderBorderColor)',
  sapList_TableGroupHeaderTextColor: 'var(--sapList_TableGroupHeaderTextColor)',
  sapList_TableFooterBorder: 'var(--sapList_TableFooterBorder)',
  sapList_TableFixedBorderColor: 'var(--sapList_TableFixedBorderColor)',
  sapScrollBar_FaceColor: 'var(--sapScrollBar_FaceColor)',
  sapScrollBar_TrackColor: 'var(--sapScrollBar_TrackColor)',
  sapScrollBar_BorderColor: 'var(--sapScrollBar_BorderColor)',
  sapScrollBar_SymbolColor: 'var(--sapScrollBar_SymbolColor)',
  sapScrollBar_Dimension: 'var(--sapScrollBar_Dimension)',
  sapScrollBar_Hover_FaceColor: 'var(--sapScrollBar_Hover_FaceColor)',
  sapPageHeader_Background: 'var(--sapPageHeader_Background)',
  sapPageHeader_BorderColor: 'var(--sapPageHeader_BorderColor)',
  sapPageHeader_TextColor: 'var(--sapPageHeader_TextColor)',
  sapPageFooter_Background: 'var(--sapPageFooter_Background)',
  sapPageFooter_BorderColor: 'var(--sapPageFooter_BorderColor)',
  sapPageFooter_TextColor: 'var(--sapPageFooter_TextColor)',
  sapInfobar_Background: 'var(--sapInfobar_Background)',
  sapInfobar_Hover_Background: 'var(--sapInfobar_Hover_Background)',
  sapInfobar_Active_Background: 'var(--sapInfobar_Active_Background)',
  sapObjectHeader_Background: 'var(--sapObjectHeader_Background)',
  sapObjectHeader_BorderColor: 'var(--sapObjectHeader_BorderColor)',
  sapBlockLayer_Background: 'var(--sapBlockLayer_Background)',
  sapTile_Background: 'var(--sapTile_Background)',
  sapTile_Hover_Background: 'var(--sapTile_Hover_Background)',
  sapTile_Active_Background: 'var(--sapTile_Active_Background)',
  sapTile_BorderColor: 'var(--sapTile_BorderColor)',
  sapTile_TitleTextColor: 'var(--sapTile_TitleTextColor)',
  sapTile_TextColor: 'var(--sapTile_TextColor)',
  sapTile_IconColor: 'var(--sapTile_IconColor)',
  sapTile_SeparatorColor: 'var(--sapTile_SeparatorColor)',
  sapAccentColor1: 'var(--sapAccentColor1)',
  sapAccentColor2: 'var(--sapAccentColor2)',
  sapAccentColor3: 'var(--sapAccentColor3)',
  sapAccentColor4: 'var(--sapAccentColor4)',
  sapAccentColor5: 'var(--sapAccentColor5)',
  sapAccentColor6: 'var(--sapAccentColor6)',
  sapAccentColor7: 'var(--sapAccentColor7)',
  sapAccentColor8: 'var(--sapAccentColor8)',
  sapAccentColor9: 'var(--sapAccentColor9)',
  sapAccentColor10: 'var(--sapAccentColor10)',
  sapLegend_WorkingBackground: 'var(--sapLegend_WorkingBackground)',
  sapLegend_NonWorkingBackground: 'var(--sapLegend_NonWorkingBackground)',
  sapLegend_CurrentDateTime: 'var(--sapLegend_CurrentDateTime)',
  sapLegendColor1: 'var(--sapLegendColor1)',
  sapLegendColor2: 'var(--sapLegendColor2)',
  sapLegendColor3: 'var(--sapLegendColor3)',
  sapLegendColor4: 'var(--sapLegendColor4)',
  sapLegendColor5: 'var(--sapLegendColor5)',
  sapLegendColor6: 'var(--sapLegendColor6)',
  sapLegendColor7: 'var(--sapLegendColor7)',
  sapLegendColor8: 'var(--sapLegendColor8)',
  sapLegendColor9: 'var(--sapLegendColor9)',
  sapLegendColor10: 'var(--sapLegendColor10)',
  sapLegendColor11: 'var(--sapLegendColor11)',
  sapLegendColor12: 'var(--sapLegendColor12)',
  sapLegendColor13: 'var(--sapLegendColor13)',
  sapLegendColor14: 'var(--sapLegendColor14)',
  sapLegendColor15: 'var(--sapLegendColor15)',
  sapLegendColor16: 'var(--sapLegendColor16)',
  sapLegendColor17: 'var(--sapLegendColor17)',
  sapLegendColor18: 'var(--sapLegendColor18)',
  sapLegendColor19: 'var(--sapLegendColor19)',
  sapLegendColor20: 'var(--sapLegendColor20)',
  sapLegendBackgroundColor1: 'var(--sapLegendBackgroundColor1)',
  sapLegendBackgroundColor2: 'var(--sapLegendBackgroundColor2)',
  sapLegendBackgroundColor3: 'var(--sapLegendBackgroundColor3)',
  sapLegendBackgroundColor4: 'var(--sapLegendBackgroundColor4)',
  sapLegendBackgroundColor5: 'var(--sapLegendBackgroundColor5)',
  sapLegendBackgroundColor6: 'var(--sapLegendBackgroundColor6)',
  sapLegendBackgroundColor7: 'var(--sapLegendBackgroundColor7)',
  sapLegendBackgroundColor8: 'var(--sapLegendBackgroundColor8)',
  sapLegendBackgroundColor9: 'var(--sapLegendBackgroundColor9)',
  sapLegendBackgroundColor10: 'var(--sapLegendBackgroundColor10)',
  sapLegendBackgroundColor11: 'var(--sapLegendBackgroundColor11)',
  sapLegendBackgroundColor12: 'var(--sapLegendBackgroundColor12)',
  sapLegendBackgroundColor13: 'var(--sapLegendBackgroundColor13)',
  sapLegendBackgroundColor14: 'var(--sapLegendBackgroundColor14)',
  sapLegendBackgroundColor15: 'var(--sapLegendBackgroundColor15)',
  sapLegendBackgroundColor16: 'var(--sapLegendBackgroundColor16)',
  sapLegendBackgroundColor17: 'var(--sapLegendBackgroundColor17)',
  sapLegendBackgroundColor18: 'var(--sapLegendBackgroundColor18)',
  sapLegendBackgroundColor19: 'var(--sapLegendBackgroundColor19)',
  sapLegendBackgroundColor20: 'var(--sapLegendBackgroundColor20)',
  sapChart_OrderedColor_1: 'var(--sapChart_OrderedColor_1)',
  sapChart_OrderedColor_2: 'var(--sapChart_OrderedColor_2)',
  sapChart_OrderedColor_3: 'var(--sapChart_OrderedColor_3)',
  sapChart_OrderedColor_4: 'var(--sapChart_OrderedColor_4)',
  sapChart_OrderedColor_5: 'var(--sapChart_OrderedColor_5)',
  sapChart_OrderedColor_6: 'var(--sapChart_OrderedColor_6)',
  sapChart_OrderedColor_7: 'var(--sapChart_OrderedColor_7)',
  sapChart_OrderedColor_8: 'var(--sapChart_OrderedColor_8)',
  sapChart_OrderedColor_9: 'var(--sapChart_OrderedColor_9)',
  sapChart_OrderedColor_10: 'var(--sapChart_OrderedColor_10)',
  sapChart_OrderedColor_11: 'var(--sapChart_OrderedColor_11)',
  sapChart_Bad: 'var(--sapChart_Bad)',
  sapChart_Critical: 'var(--sapChart_Critical)',
  sapChart_Good: 'var(--sapChart_Good)',
  sapChart_Neutral: 'var(--sapChart_Neutral)',
  sapChart_Sequence_1: 'var(--sapChart_Sequence_1)',
  sapChart_Sequence_2: 'var(--sapChart_Sequence_2)',
  sapChart_Sequence_3: 'var(--sapChart_Sequence_3)',
  sapChart_Sequence_4: 'var(--sapChart_Sequence_4)',
  sapChart_Sequence_5: 'var(--sapChart_Sequence_5)',
  sapChart_Sequence_6: 'var(--sapChart_Sequence_6)',
  sapChart_Sequence_7: 'var(--sapChart_Sequence_7)',
  sapChart_Sequence_8: 'var(--sapChart_Sequence_8)',
  sapChart_Sequence_9: 'var(--sapChart_Sequence_9)',
  sapChart_Sequence_10: 'var(--sapChart_Sequence_10)',
  sapChart_Sequence_11: 'var(--sapChart_Sequence_11)',
  sapChart_Sequence_Neutral: 'var(--sapChart_Sequence_Neutral)',
  'sapFontUrl_SAP-icons_ttf': 'var(--sapFontUrl_SAP-icons_ttf)',
  'sapFontUrl_SAP-icons_woff': 'var(--sapFontUrl_SAP-icons_woff)',
  'sapFontUrl_SAP-icons_woff2': 'var(--sapFontUrl_SAP-icons_woff2)',
  sapFontUrl_72_Regular_woff2: 'var(--sapFontUrl_72_Regular_woff2)',
  sapFontUrl_72_Regular_woff: 'var(--sapFontUrl_72_Regular_woff)',
  sapFontUrl_72_Bold_woff2: 'var(--sapFontUrl_72_Bold_woff2)',
  sapFontUrl_72_Bold_woff: 'var(--sapFontUrl_72_Bold_woff)',
  sapFontUrl_72_Light_woff2: 'var(--sapFontUrl_72_Light_woff2)',
  sapFontUrl_72_Light_woff: 'var(--sapFontUrl_72_Light_woff)',
  sapFontUrl_72_Regular_full_woff2: 'var(--sapFontUrl_72_Regular_full_woff2)',
  sapFontUrl_72_Regular_full_woff: 'var(--sapFontUrl_72_Regular_full_woff)',
  sapFontUrl_72_Bold_full_woff2: 'var(--sapFontUrl_72_Bold_full_woff2)',
  sapFontUrl_72_Bold_full_woff: 'var(--sapFontUrl_72_Bold_full_woff)',
  sapFontUrl_72_Light_full_woff2: 'var(--sapFontUrl_72_Light_full_woff2)',
  sapFontUrl_72_Light_full_woff: 'var(--sapFontUrl_72_Light_full_woff)'
};

var useConsolidatedRef = function useConsolidatedRef(ref) {
  var localRef = react.useRef(null);
  var consolidatedRef = react.useMemo(function () {
    if (!ref || typeof ref === 'function') {
      return localRef;
    }

    return ref;
  }, [ref]);
  react.useEffect(function () {
    if (typeof ref === 'function') {
      // @ts-ignore
      ref(consolidatedRef.current);
    }
  }, [consolidatedRef.current]);
  return consolidatedRef;
};

var PROP_WHITELIST = /^(aria-|data-|id$|on[A-Z])/;
var usePassThroughHtmlProps = function usePassThroughHtmlProps(props) {
  var propBlackList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var componentPropBlacklist = new Set(propBlackList);
  var returnVal = {};

  for (var name in props) {
    if (PROP_WHITELIST.test(name) && !componentPropBlacklist.has(name)) {
      returnVal[name] = props[name];
    }
  }

  return returnVal;
};

var deprecationNotice = function deprecationNotice(component, message) {
};
var getScrollBarWidth = function getScrollBarWidth() {
  var inner = document.createElement('p');
  inner.style.width = '100%';
  inner.style.height = '200px';
  var outer = document.createElement('div');
  outer.style.position = 'absolute';
  outer.style.top = '0px';
  outer.style.left = '0px';
  outer.style.visibility = 'hidden';
  outer.style.width = '200px';
  outer.style.height = '150px';
  outer.style.overflow = 'hidden';
  outer.appendChild(inner);
  document.body.appendChild(outer);
  var w1 = inner.offsetWidth;
  outer.style.overflow = 'scroll';
  var w2 = inner.offsetWidth;

  if (w1 === w2) {
    w2 = outer.clientWidth;
  }

  document.body.removeChild(outer);
  return w1 - w2;
};
var enrichEventWithDetails = function enrichEventWithDetails(event) {
  var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if (event.hasOwnProperty('persist')) {
    // if there is a persist method, it's an SyntheticEvent so we need to persist it
    event.persist();
  }

  var shouldCreateNewDetails = event.detail === null || event.detail === undefined || typeof event.detail !== 'object';
  Object.defineProperty(event, 'detail', {
    value: shouldCreateNewDetails ? {} : event.detail,
    writable: true,
    configurable: true
  });
  Object.assign(event.detail, payload);
  return event;
};

var resolveTranslations = function resolveTranslations(bundle, texts) {
  return texts.map(function (text) {
    if (Array.isArray(text)) {
      var _text = _toArray(text),
          key = _text[0],
          replacements = _text.slice(1);

      return bundle.getText(key, replacements);
    }

    return bundle.getText(text);
  });
};

var useI18nText = function useI18nText(bundleName) {
  for (var _len = arguments.length, texts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    texts[_key - 1] = arguments[_key];
  }

  var i18nBundle$1 = i18nBundle.getI18nBundle(bundleName);

  var _useState = react.useState(resolveTranslations(i18nBundle$1, texts)),
      _useState2 = _slicedToArray(_useState, 2),
      translations = _useState2[0],
      setTranslations = _useState2[1];

  react.useEffect(function () {
    var fetchAndLoadBundle = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return i18nBundle.fetchI18nBundle(bundleName);

              case 2:
                setTranslations(function (prev) {
                  var next = resolveTranslations(i18nBundle$1, texts);

                  if (prev.length === next.length && prev.every(function (translation, index) {
                    return next[index] === translation;
                  })) {
                    return prev;
                  }

                  return next;
                });

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function fetchAndLoadBundle() {
        return _ref.apply(this, arguments);
      };
    }();

    fetchAndLoadBundle();
  }, [i18nBundle.fetchI18nBundle, bundleName, texts]);
  return translations;
};

var useViewportRange = function useViewportRange(rangeSet) {
  var _useState = react.useState(Device$2.Device.media.getCurrentRange(rangeSet, window.innerWidth).name),
      _useState2 = _slicedToArray(_useState, 2),
      currentRange = _useState2[0],
      setCurrentRange = _useState2[1];

  var isMounted = react.useRef(true);
  react.useEffect(function () {
    var handler = function handler(_ref) {
      var range = _ref.name;

      if (isMounted.current === true) {
        setCurrentRange(range);
      }
    };

    Device$2.Device.media.attachHandler(handler, null, 'StdExt');
    return function () {
      isMounted.current = false;
      Device$2.Device.resize.detachHandler(handler, null);
    };
  }, [setCurrentRange, isMounted]);
  return currentRange;
};

var hooks = /*#__PURE__*/Object.freeze({
  __proto__: null,
  useConsolidatedRef: useConsolidatedRef,
  usePassThroughHtmlProps: usePassThroughHtmlProps,
  useViewportRange: useViewportRange,
  useI18nText: useI18nText
});

exports.CssSizeVariables = CssSizeVariables;
exports.Device = Device;
exports.Logger = Logger;
exports.StyleClassHelper = StyleClassHelper;
exports.ThemingParameters = ThemingParameters;
exports.createComponentStyles = createComponentStyles;
exports.cssVariablesStyles = cssVariablesStyles;
exports.deprecationNotice = deprecationNotice;
exports.enrichEventWithDetails = enrichEventWithDetails;
exports.getScrollBarWidth = getScrollBarWidth;
exports.hooks = hooks;
exports.spacing = spacing;
exports.useConsolidatedRef = useConsolidatedRef;
exports.usePassThroughHtmlProps = usePassThroughHtmlProps;
