
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover placement-type="Bottom" horizontal-align="Left" class="ui5-multi-combobox-all-items-responsive-popover" no-arrow _disable-initial-focus content-only-on-desktop @ui5-selection-change=${ifDefined(context._listSelectionChange)} @ui5-after-close=${ifDefined(context._toggleIcon)} @ui5-after-open=${ifDefined(context._toggleIcon)}><div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context.togglePopover}"></ui5-button></div><div class="row"><div slot="header" class="input-root-phone" value-state="${ifDefined(context.valueState)}"><input .value="${ifDefined(context.value)}" inner-input placeholder="${ifDefined(context.placeholder)}" ?required=${context.required} value-state="${ifDefined(context.valueState)}" @input="${context._inputLiveChange}" @change=${context._inputChange} aria-autocomplete="both" aria-labelledby="${ifDefined(context._id)}-hiddenText-nMore" aria-describedby="${ifDefined(context._id)}-valueStateDesc" /></div><ui5-togglebutton slot="header" class="ui5-multi-combobox-toggle-button" icon="multiselect-all" design="Transparent" ?pressed=${context.filterSelected} @click="${context.filterSelectedItems}"></ui5-togglebutton></div></div><ui5-list separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">${ repeat(context._filteredItems, (item, index) => item._id || index, (item, index) => block1(item, index, context)) }</ui5-list><div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Transparent" @click="${context.togglePopover}">OK</ui5-button></div></ui5-responsive-popover>`; };
const block1 = (item, index, context) => { return html`<ui5-li type="Active" ?selected=${item.selected} data-ui5-token-id="${ifDefined(item._id)}">${ifDefined(item.text)}</ui5-li>`; };

export default block0;