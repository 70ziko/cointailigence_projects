
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div class="${classMap(context.classes.root)}"><div role="region" class="${classMap(context.classes.columns.start)}" aria-labelledby="${ifDefined(context._id)}-startColumnText"><slot name="startColumn"></slot></div><div class="ui5-fcl-arrow-container" style="${styleMap(context.styles.arrowsContainer.start)}"><ui5-button class="ui5-fcl-arrow ui5-fcl-arrow--start" icon="slim-arrow-right" design="Transparent" @click="${context.startArrowClick}" style="${styleMap(context.styles.arrows.start)}" aria-label="${ifDefined(context.accStartArrowText)}" title="${ifDefined(context.accStartArrowText)}"></ui5-button></div><div role="region" class="${classMap(context.classes.columns.middle)}" aria-labelledby="${ifDefined(context._id)}-midColumnText"><slot name="midColumn"></slot></div><div class="ui5-fcl-arrow-container" style="${styleMap(context.styles.arrowsContainer.end)}"><ui5-button class="ui5-fcl-arrow ui5-fcl-arrow--end" style="${styleMap(context.styles.arrows.end)}" icon="slim-arrow-left" design="Transparent" @click="${context.endArrowClick}" aria-label="${ifDefined(context.accEndArrowText)}" title="${ifDefined(context.accEndArrowText)}"></ui5-button></div><div role="region" class="${classMap(context.classes.columns.end)}" aria-labelledby="${ifDefined(context._id)}-endColumnText"><slot name="endColumn"></slot></div><span id="${ifDefined(context._id)}-startColumnText" class="ui5-hidden-text">${ifDefined(context.accStartColumnText)}</span><span id="${ifDefined(context._id)}-midColumnText" class="ui5-hidden-text">${ifDefined(context.accMiddleColumnText)}</span><span id="${ifDefined(context._id)}-endColumnText" class="ui5-hidden-text">${ifDefined(context.accEndColumnText)}</span></div> `; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;