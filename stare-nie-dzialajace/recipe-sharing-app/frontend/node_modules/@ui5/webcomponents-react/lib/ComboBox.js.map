{"version":3,"file":"ComboBox.js","sources":["../src/webComponents/ComboBox/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/ComboBox';\nimport { FC, ReactNode } from 'react';\n\nexport interface ComboBoxPropTypes extends Omit<WithWebComponentPropTypes, 'onChange' | 'onInput'> {\n  /**\n   * Defines whether `ComboBox` is in disabled state.\n   *\n   * **Note:** A disabled `ComboBox` is completely uninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the filter type of the `ComboBox`. Available options are: `StartsWithPerTerm`, `StartsWith` and `Contains`.\n   */\n  filter?: string;\n  /**\n   * Defines the \"live\" value of the `ComboBox`.\n   *\n   * **Note:** The property is updated upon typing.\n   *\n   * **Note:** Initially the filter value is synced with value.\n   */\n  filterValue?: string;\n  /**\n   * Indicates whether a loading indicator should be shown in the picker.\n   */\n  loading?: boolean;\n  /**\n   * Defines a short hint intended to aid the user with data entry when the `ComboBox` has no value.\n   */\n  placeholder?: string;\n  /**\n   * Defines whether the `ComboBox` is readonly.\n   *\n   * **Note:** A read-only `ComboBox` is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the `ComboBox` is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the value of the `ComboBox`.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the `ComboBox`.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the `ComboBox` items.\n   *\n   * Example:\n   *\n   * <pre>\n   *   <code>\n   *    &lt;ComboBox><br />\n   *    &nbsp;&nbsp;&lt;StandardListItem>Item #1&lt;/StandardListItem><br />\n   *    &nbsp;&nbsp;&lt;StandardListItem>Item #2&lt;/StandardListItem><br />\n   *    &lt;/ComboBox>\n   *  </code>\n   * </pre>\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the icon to be displayed in the input field.\n   */\n  icon?: ReactNode | ReactNode[];\n  /**\n   * Defines the value state message that will be displayed as pop up under the `ComboBox`.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the `Select` is in `Information`, `Warning` or `Error` value state.\n   */\n  valueStateMessage?: ReactNode | ReactNode[];\n  /**\n   * Fired when the input operation has finished by pressing Enter, focusout or an item is selected.\n   */\n  onChange?: (event: CustomEvent) => void;\n  /**\n   * Fired when typing in input.\n   *\n   * **Note:** filterValue property is updated, input is changed.\n   */\n  onInput?: (event: CustomEvent) => void;\n}\n\n/**\n * The `ComboBox` component represents a drop-down menu with a list of the available options and a text input field to narrow down the options. It is commonly used to enable users to select one or more options from a predefined list.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/ComboBox\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst ComboBox: FC<ComboBoxPropTypes> = withWebComponent<ComboBoxPropTypes>(\n  'ui5-combobox',\n  ['filter', 'filterValue', 'placeholder', 'value', 'valueState'],\n  ['disabled', 'loading', 'readonly', 'required'],\n  ['icon', 'valueStateMessage'],\n  ['change', 'input']\n);\n\nComboBox.displayName = 'ComboBox';\n\nComboBox.defaultProps = {\n  disabled: false,\n  filter: 'StartsWithPerTerm',\n  loading: false,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\n\nexport { ComboBox };\n"],"names":["ComboBox","withWebComponent","displayName","defaultProps","disabled","filter","loading","readonly","required","valueState","ValueState","None"],"mappings":";;;;AAgGA;AACA;AACA;AACA;AACA;IACMA,QAA+B,GAAGC,gBAAgB,CACtD,cADsD,EAEtD,CAAC,QAAD,EAAW,aAAX,EAA0B,aAA1B,EAAyC,OAAzC,EAAkD,YAAlD,CAFsD,EAGtD,CAAC,UAAD,EAAa,SAAb,EAAwB,UAAxB,EAAoC,UAApC,CAHsD,EAItD,CAAC,MAAD,EAAS,mBAAT,CAJsD,EAKtD,CAAC,QAAD,EAAW,OAAX,CALsD;AAQxDD,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AAEAF,QAAQ,CAACG,YAAT,GAAwB;AACtBC,EAAAA,QAAQ,EAAE,KADY;AAEtBC,EAAAA,MAAM,EAAE,mBAFc;AAGtBC,EAAAA,OAAO,EAAE,KAHa;AAItBC,EAAAA,QAAQ,EAAE,KAJY;AAKtBC,EAAAA,QAAQ,EAAE,KALY;AAMtBC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AAND,CAAxB;;;;"}