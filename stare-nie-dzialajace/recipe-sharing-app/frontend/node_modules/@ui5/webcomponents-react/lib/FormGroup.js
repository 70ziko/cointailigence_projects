import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';
import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';
import React from 'react';
import { createUseStyles } from 'react-jss';

var useStyles = createUseStyles({
  title: {
    gridColumn: 'span 12',
    display: 'flex',
    alignItems: 'center',
    height: CssSizeVariables.sapWcrFormGroupTitleHeight,
    lineHeight: CssSizeVariables.sapWcrFormGroupTitleHeight,
    fontFamily: ThemingParameters.sapFontFamily,
    color: ThemingParameters.sapTextColor,
    fontSize: ThemingParameters.sapFontSize,
    fontWeight: 'bold',
    backgroundColor: ThemingParameters.sapGroup_TitleBackground,
    margin: 0,
    paddingTop: '1rem'
  },
  spacer: {
    height: '1rem',
    gridColumn: 'span 12'
  }
}, {
  name: 'FormGroup'
});
/**
 * The `FormGroup` encapsulates `FormItems` into groups.
 * __Note:__ `FormGroup` is only used for calculating the final layout of the `Form`, thus it doesn't accept any other props than `title` and `children`, especially no `className`, `style` or `ref`.
 */

var FormGroup = function FormGroup(props) {
  var title = props.title,
      children = props.children;
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("h6", {
    className: classes.title,
    title: title,
    "aria-label": title
  }, title), children, /*#__PURE__*/React.createElement("span", {
    className: classes.spacer
  }));
};

FormGroup.displayName = 'FormGroup';

export { FormGroup };
//# sourceMappingURL=FormGroup.js.map
