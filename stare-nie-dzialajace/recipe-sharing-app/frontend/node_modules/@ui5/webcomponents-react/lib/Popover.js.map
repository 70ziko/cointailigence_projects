{"version":3,"file":"Popover.js","sources":["../src/webComponents/Popover/index.tsx"],"sourcesContent":["import { PlacementType } from '@ui5/webcomponents-react/lib/PlacementType';\nimport { PopoverHorizontalAlign } from '@ui5/webcomponents-react/lib/PopoverHorizontalAlign';\nimport { PopoverVerticalAlign } from '@ui5/webcomponents-react/lib/PopoverVerticalAlign';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/Popover';\nimport { FC, ReactNode } from 'react';\n\nexport interface PopoverPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Determines if there is no enough space, the `Popover` can be placed over the target.\n   */\n  allowTargetOverlap?: boolean;\n  /**\n   * Defines the header text.\n   *\n   * **Note:** If `header` slot is provided, the `headerText` is ignored.\n   */\n  headerText?: string;\n  /**\n   * Defines whether the block layer will be shown if modal property is set to true.\n   */\n  hideBackdrop?: boolean;\n  /**\n   * Determines the horizontal alignment of the `Popover`.\n   *\n   * Available options are:\n   *\n   * *   `Center`\n   * *   `Left`\n   * *   `Right`\n   * *   `Stretch`\n   */\n  horizontalAlign?: PopoverHorizontalAlign;\n  /**\n   * Defines whether the `Popover` should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n   */\n  modal?: boolean;\n  /**\n   * Determines whether the `Popover` arrow is hidden.\n   */\n  noArrow?: boolean;\n  /**\n   * Determines on which side the `Popover` is placed at.\n   *\n   * Available options are:\n   *\n   * *   `Left`\n   * *   `Right`\n   * *   `Top`\n   * *   `Bottom`\n   */\n  placementType?: PlacementType;\n  /**\n   * Determines the vertical alignment of the `Popover`.\n   *\n   * Available options are:\n   *\n   * *   `Center`\n   * *   `Top`\n   * *   `Bottom`\n   * *   `Stretch`\n   */\n  verticalAlign?: PopoverVerticalAlign;\n  /**\n   * Defines the ID of the HTML Element, which will get the initial focus.\n   */\n  initialFocus?: string;\n  /**\n   * Defines if the focus should be returned to the previously focused element, when the popup closes.\n   */\n  preventFocusRestore?: boolean;\n  /**\n   * Defines the footer HTML Element.\n   */\n  footer?: ReactNode | ReactNode[];\n  /**\n   * Defines the header HTML Element.\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Defines the content of the Popup.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired after the component is closed. This event does not bubble.\n   */\n  onAfterClose?: (event: CustomEvent) => void;\n  /**\n   * Fired after the component is opened. This event does not bubble.\n   */\n  onAfterOpen?: (event: CustomEvent) => void;\n  /**\n   * Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. This event does not bubble.\n   */\n  onBeforeClose?: (event: CustomEvent<{ escPressed: boolean }>) => void;\n  /**\n   * Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. This event does not bubble.\n   */\n  onBeforeOpen?: (event: CustomEvent) => void;\n}\n\n/**\n * The `Popover` component displays additional information for an object in a compact way and without leaving the page. The Popover can contain various UI elements, such as fields, tables, images, and charts. It can also include actions in the footer.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/Popover\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst Popover: FC<PopoverPropTypes> = withWebComponent<PopoverPropTypes>(\n  'ui5-popover',\n  ['headerText', 'horizontalAlign', 'placementType', 'verticalAlign', 'initialFocus'],\n  ['allowTargetOverlap', 'hideBackdrop', 'modal', 'noArrow', 'preventFocusRestore'],\n  ['footer', 'header'],\n  ['after-close', 'after-open', 'before-close', 'before-open']\n);\n\nPopover.displayName = 'Popover';\n\nPopover.defaultProps = {\n  allowTargetOverlap: false,\n  hideBackdrop: false,\n  horizontalAlign: PopoverHorizontalAlign.Center,\n  modal: false,\n  noArrow: false,\n  placementType: PlacementType.Right,\n  verticalAlign: PopoverVerticalAlign.Center,\n  preventFocusRestore: false\n};\n\nexport { Popover };\n"],"names":["Popover","withWebComponent","displayName","defaultProps","allowTargetOverlap","hideBackdrop","horizontalAlign","PopoverHorizontalAlign","Center","modal","noArrow","placementType","PlacementType","Right","verticalAlign","PopoverVerticalAlign","preventFocusRestore"],"mappings":";;;;;;AAqGA;AACA;AACA;AACA;AACA;IACMA,OAA6B,GAAGC,gBAAgB,CACpD,aADoD,EAEpD,CAAC,YAAD,EAAe,iBAAf,EAAkC,eAAlC,EAAmD,eAAnD,EAAoE,cAApE,CAFoD,EAGpD,CAAC,oBAAD,EAAuB,cAAvB,EAAuC,OAAvC,EAAgD,SAAhD,EAA2D,qBAA3D,CAHoD,EAIpD,CAAC,QAAD,EAAW,QAAX,CAJoD,EAKpD,CAAC,aAAD,EAAgB,YAAhB,EAA8B,cAA9B,EAA8C,aAA9C,CALoD;AAQtDD,OAAO,CAACE,WAAR,GAAsB,SAAtB;AAEAF,OAAO,CAACG,YAAR,GAAuB;AACrBC,EAAAA,kBAAkB,EAAE,KADC;AAErBC,EAAAA,YAAY,EAAE,KAFO;AAGrBC,EAAAA,eAAe,EAAEC,sBAAsB,CAACC,MAHnB;AAIrBC,EAAAA,KAAK,EAAE,KAJc;AAKrBC,EAAAA,OAAO,EAAE,KALY;AAMrBC,EAAAA,aAAa,EAAEC,aAAa,CAACC,KANR;AAOrBC,EAAAA,aAAa,EAAEC,oBAAoB,CAACP,MAPf;AAQrBQ,EAAAA,mBAAmB,EAAE;AARA,CAAvB;;;;"}