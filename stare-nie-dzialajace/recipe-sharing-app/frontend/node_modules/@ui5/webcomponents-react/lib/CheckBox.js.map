{"version":3,"file":"CheckBox.js","sources":["../src/webComponents/CheckBox/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/CheckBox';\nimport { FC } from 'react';\n\nexport interface CheckBoxPropTypes extends Omit<WithWebComponentPropTypes, 'onChange'> {\n  /**\n   * Defines if the `CheckBox` is checked.\n   *\n   * **Note:** The property can be changed with user interaction, either by cliking/tapping on the `CheckBox`, or by pressing the Enter or Space key.\n   */\n  checked?: boolean;\n  /**\n   * Defines whether the `CheckBox` is disabled.\n   *\n   * **Note:** A disabled `CheckBox` is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Determines the name with which the `CheckBox` will be submitted in an HTML form.\n   *\n   * **Important:** For the `name` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the `CheckBox` so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines whether the `CheckBox` is read-only.\n   *\n   * **Note:** A red-only `CheckBox` is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines the text of the `CheckBox`.\n   */\n  text?: string;\n  /**\n   * Defines the value state of the `CheckBox`.\n   *\n   * **Note:** Available options are `Warning`, `Error`, and `None` (default).\n   */\n  valueState?: ValueState;\n  /**\n   * Defines whether the `CheckBox` text wraps when there is not enough space.\n   *\n   * **Note:** By default, the text truncates when there is not enough space.\n   */\n  wrap?: boolean;\n  /**\n   * Fired when the `CheckBox` checked state changes.\n   */\n  onChange?: (event: CustomEvent) => void;\n}\n\n/**\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n *\n * The `CheckBox` component consists of a box and a label that describes its purpose. If it's checked, an indicator is displayed inside the box. To check/uncheck the `CheckBox`, the user has to click or tap the square box or its label.\n *\n * The `CheckBox` component only has 2 states - checked and unchecked. Clicking or tapping toggles the `CheckBox` between checked and unchecked state.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/CheckBox\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst CheckBox: FC<CheckBoxPropTypes> = withWebComponent<CheckBoxPropTypes>(\n  'ui5-checkbox',\n  ['name', 'text', 'valueState'],\n  ['checked', 'disabled', 'readonly', 'wrap'],\n  [],\n  ['change']\n);\n\nCheckBox.displayName = 'CheckBox';\n\nCheckBox.defaultProps = {\n  checked: false,\n  disabled: false,\n  readonly: false,\n  valueState: ValueState.None,\n  wrap: false\n};\n\nexport { CheckBox };\n"],"names":["CheckBox","withWebComponent","displayName","defaultProps","checked","disabled","readonly","valueState","ValueState","None","wrap"],"mappings":";;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,QAA+B,GAAGC,gBAAgB,CACtD,cADsD,EAEtD,CAAC,MAAD,EAAS,MAAT,EAAiB,YAAjB,CAFsD,EAGtD,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,MAApC,CAHsD,EAItD,EAJsD,EAKtD,CAAC,QAAD,CALsD;AAQxDD,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AAEAF,QAAQ,CAACG,YAAT,GAAwB;AACtBC,EAAAA,OAAO,EAAE,KADa;AAEtBC,EAAAA,QAAQ,EAAE,KAFY;AAGtBC,EAAAA,QAAQ,EAAE,KAHY;AAItBC,EAAAA,UAAU,EAAEC,UAAU,CAACC,IAJD;AAKtBC,EAAAA,IAAI,EAAE;AALgB,CAAxB;;;;"}