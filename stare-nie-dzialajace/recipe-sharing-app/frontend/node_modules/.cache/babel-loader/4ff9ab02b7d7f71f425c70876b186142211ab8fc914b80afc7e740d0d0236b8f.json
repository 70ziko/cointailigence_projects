{"ast":null,"code":"import { getFeature } from \"../FeaturesRegistry.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { attachLanguageChange } from \"../locale/languageChange.js\";\nimport { fetchTextOnce } from \"../util/FetchHelper.js\";\nimport normalizeLocale from \"../locale/normalizeLocale.js\";\nimport nextFallbackLocale from \"../locale/nextFallbackLocale.js\";\nimport { DEFAULT_LANGUAGE } from \"../generated/AssetParameters.js\";\nimport { getEffectiveAssetPath } from \"../util/EffectiveAssetPath.js\";\nimport { getUseDefaultLanguage } from \"../config/Language.js\";\nconst bundleData = new Map();\nconst bundleURLs = new Map();\n\n/**\n * Sets a map with texts and ID the are related to.\n * @param {string} packageName package ID that the i18n bundle will be related to\n * @param {Object} data an object with string locales as keys and text translataions as values\n * @public\n */\nconst setI18nBundleData = (packageName, data) => {\n  bundleData.set(packageName, data);\n};\nconst getI18nBundleData = packageName => {\n  return bundleData.get(packageName);\n};\n\n/**\n * Registers a map of locale/url information, to be used by the <code>fetchI18nBundle</code> method.\n * Note: In order to be able to register \".properties\" files, you must import the following module:\n * import \"@ui5/webcomponents-base/dist/features/PropertiesFormatSupport.js\";\n *\n * @param {string} packageName package ID that the i18n bundle will be related to\n * @param {Object} bundle an object with string locales as keys and the URLs (in .json or .properties format - see the note above) where the corresponding locale can be fetched from, f.e {\"en\": \"path/en.json\", ...}\n *\n * @public\n */\nconst registerI18nBundle = (packageName, bundle) => {\n  const oldBundle = bundleURLs.get(packageName) || {};\n  bundleURLs.set(packageName, Object.assign({}, oldBundle, bundle));\n};\n\n/**\n * This method preforms the asynchronous task of fetching the actual text resources. It will fetch\n * each text resource over the network once (even for multiple calls to the same method).\n * It should be fully finished before the i18nBundle class is created in the webcomponents.\n * This method uses the bundle URLs that are populated by the <code>registerI18nBundle</code> method.\n * To simplify the usage, the synchronization of both methods happens internally for the same <code>bundleId</code>\n * @param {packageName} packageName the NPM package name\n * @public\n */\nconst fetchI18nBundle = async packageName => {\n  const bundlesForPackage = bundleURLs.get(packageName);\n  if (!bundlesForPackage) {\n    console.warn(`Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */\n    ` You need to import ${packageName}/dist/Assets.js with a build tool that supports JSON imports.`); /* eslint-disable-line */\n    return;\n  }\n  const language = getLocale().getLanguage();\n  const region = getLocale().getRegion();\n  const useDefaultLanguage = getUseDefaultLanguage();\n  let localeId = normalizeLocale(language + (region ? `-${region}` : ``));\n  while (localeId !== DEFAULT_LANGUAGE && !bundlesForPackage[localeId]) {\n    localeId = nextFallbackLocale(localeId);\n  }\n  if (useDefaultLanguage && localeId === DEFAULT_LANGUAGE) {\n    setI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)\n    return;\n  }\n  const bundleURL = bundlesForPackage[localeId];\n  if (typeof bundleURL === \"object\") {\n    // inlined from build\n    setI18nBundleData(packageName, bundleURL);\n    return;\n  }\n  const content = await fetchTextOnce(getEffectiveAssetPath(bundleURL));\n  let parser;\n  if (content.startsWith(\"{\")) {\n    parser = JSON.parse;\n  } else {\n    const PropertiesFormatSupport = getFeature(\"PropertiesFormatSupport\");\n    if (!PropertiesFormatSupport) {\n      throw new Error(`In order to support .properties files, please: import \"@ui5/webcomponents-base/dist/features/PropertiesFormatSupport.js\";`);\n    }\n    parser = PropertiesFormatSupport.parser;\n  }\n  const data = parser(content);\n  setI18nBundleData(packageName, data);\n};\n\n// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles\nattachLanguageChange(() => {\n  const allPackages = [...bundleData.keys()];\n  return Promise.all(allPackages.map(fetchI18nBundle));\n});\nexport { fetchI18nBundle, registerI18nBundle, setI18nBundleData, getI18nBundleData };","map":{"version":3,"names":["getFeature","getLocale","attachLanguageChange","fetchTextOnce","normalizeLocale","nextFallbackLocale","DEFAULT_LANGUAGE","getEffectiveAssetPath","getUseDefaultLanguage","bundleData","Map","bundleURLs","setI18nBundleData","packageName","data","set","getI18nBundleData","get","registerI18nBundle","bundle","oldBundle","Object","assign","fetchI18nBundle","bundlesForPackage","console","warn","language","getLanguage","region","getRegion","useDefaultLanguage","localeId","bundleURL","content","parser","startsWith","JSON","parse","PropertiesFormatSupport","Error","allPackages","keys","Promise","all","map"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-base/dist/asset-registries/i18n.js"],"sourcesContent":["import { getFeature } from \"../FeaturesRegistry.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { attachLanguageChange } from \"../locale/languageChange.js\";\nimport { fetchTextOnce } from \"../util/FetchHelper.js\";\nimport normalizeLocale from \"../locale/normalizeLocale.js\";\nimport nextFallbackLocale from \"../locale/nextFallbackLocale.js\";\nimport { DEFAULT_LANGUAGE } from \"../generated/AssetParameters.js\";\nimport { getEffectiveAssetPath } from \"../util/EffectiveAssetPath.js\";\nimport { getUseDefaultLanguage } from \"../config/Language.js\";\n\nconst bundleData = new Map();\nconst bundleURLs = new Map();\n\n/**\n * Sets a map with texts and ID the are related to.\n * @param {string} packageName package ID that the i18n bundle will be related to\n * @param {Object} data an object with string locales as keys and text translataions as values\n * @public\n */\nconst setI18nBundleData = (packageName, data) => {\n\tbundleData.set(packageName, data);\n};\n\nconst getI18nBundleData = packageName => {\n\treturn bundleData.get(packageName);\n};\n\n/**\n * Registers a map of locale/url information, to be used by the <code>fetchI18nBundle</code> method.\n * Note: In order to be able to register \".properties\" files, you must import the following module:\n * import \"@ui5/webcomponents-base/dist/features/PropertiesFormatSupport.js\";\n *\n * @param {string} packageName package ID that the i18n bundle will be related to\n * @param {Object} bundle an object with string locales as keys and the URLs (in .json or .properties format - see the note above) where the corresponding locale can be fetched from, f.e {\"en\": \"path/en.json\", ...}\n *\n * @public\n */\nconst registerI18nBundle = (packageName, bundle) => {\n\tconst oldBundle = bundleURLs.get(packageName) || {};\n\tbundleURLs.set(packageName, Object.assign({}, oldBundle, bundle));\n};\n\n/**\n * This method preforms the asynchronous task of fetching the actual text resources. It will fetch\n * each text resource over the network once (even for multiple calls to the same method).\n * It should be fully finished before the i18nBundle class is created in the webcomponents.\n * This method uses the bundle URLs that are populated by the <code>registerI18nBundle</code> method.\n * To simplify the usage, the synchronization of both methods happens internally for the same <code>bundleId</code>\n * @param {packageName} packageName the NPM package name\n * @public\n */\nconst fetchI18nBundle = async packageName => {\n\tconst bundlesForPackage = bundleURLs.get(packageName);\n\n\tif (!bundlesForPackage) {\n\t\tconsole.warn(`Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */\n\t\t` You need to import ${packageName}/dist/Assets.js with a build tool that supports JSON imports.`); /* eslint-disable-line */\n\t\treturn;\n\t}\n\n\tconst language = getLocale().getLanguage();\n\tconst region = getLocale().getRegion();\n\tconst useDefaultLanguage = getUseDefaultLanguage();\n\tlet localeId = normalizeLocale(language + (region ? `-${region}` : ``));\n\n\twhile (localeId !== DEFAULT_LANGUAGE && !bundlesForPackage[localeId]) {\n\t\tlocaleId = nextFallbackLocale(localeId);\n\t}\n\n\tif (useDefaultLanguage && localeId === DEFAULT_LANGUAGE) {\n\t\tsetI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)\n\t\treturn;\n\t}\n\n\tconst bundleURL = bundlesForPackage[localeId];\n\n\tif (typeof bundleURL === \"object\") { // inlined from build\n\t\tsetI18nBundleData(packageName, bundleURL);\n\t\treturn;\n\t}\n\n\tconst content = await fetchTextOnce(getEffectiveAssetPath(bundleURL));\n\tlet parser;\n\tif (content.startsWith(\"{\")) {\n\t\tparser = JSON.parse;\n\t} else {\n\t\tconst PropertiesFormatSupport = getFeature(\"PropertiesFormatSupport\");\n\t\tif (!PropertiesFormatSupport) {\n\t\t\tthrow new Error(`In order to support .properties files, please: import \"@ui5/webcomponents-base/dist/features/PropertiesFormatSupport.js\";`);\n\t\t}\n\t\tparser = PropertiesFormatSupport.parser;\n\t}\n\n\tconst data = parser(content);\n\n\tsetI18nBundleData(packageName, data);\n};\n\n// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles\nattachLanguageChange(() => {\n\tconst allPackages = [...bundleData.keys()];\n\treturn Promise.all(allPackages.map(fetchI18nBundle));\n});\n\nexport {\n\tfetchI18nBundle,\n\tregisterI18nBundle,\n\tsetI18nBundleData,\n\tgetI18nBundleData,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}