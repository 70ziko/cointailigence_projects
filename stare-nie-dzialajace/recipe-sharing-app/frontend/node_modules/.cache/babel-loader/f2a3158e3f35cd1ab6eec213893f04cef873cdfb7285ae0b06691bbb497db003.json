{"ast":null,"code":"class RadioButtonGroup {\n  static hasGroup(groupName) {\n    return this.groups.has(groupName);\n  }\n  static getGroup(groupName) {\n    return this.groups.get(groupName);\n  }\n  static getSelectedRadioFromGroup(groupName) {\n    return this.selectedRadios.get(groupName);\n  }\n  static removeGroup(groupName) {\n    this.selectedRadios.delete(groupName);\n    return this.groups.delete(groupName);\n  }\n  static addToGroup(radioBtn, groupName) {\n    if (this.hasGroup(groupName)) {\n      this.enforceSingleSelection(radioBtn, groupName);\n      this.getGroup(groupName).push(radioBtn);\n    } else {\n      this.createGroup(radioBtn, groupName);\n    }\n  }\n  static removeFromGroup(radioBtn, groupName) {\n    if (!this.hasGroup(groupName)) {\n      return;\n    }\n    const group = this.getGroup(groupName);\n    const selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n    // Remove the radio button from the given group\n    group.forEach((_radioBtn, idx, arr) => {\n      if (radioBtn._id === _radioBtn._id) {\n        return arr.splice(idx, 1);\n      }\n    });\n    if (selectedRadio === radioBtn) {\n      this.selectedRadios.set(groupName, null);\n    }\n\n    // Remove the group if it is empty\n    if (!group.length) {\n      this.removeGroup(groupName);\n    }\n  }\n  static createGroup(radioBtn, groupName) {\n    if (radioBtn.selected) {\n      this.selectedRadios.set(groupName, radioBtn);\n    }\n    this.groups.set(groupName, [radioBtn]);\n  }\n  static selectNextItem(item, groupName) {\n    const group = this.getGroup(groupName),\n      groupLength = group.length,\n      currentItemPosition = group.indexOf(item);\n    if (groupLength <= 1) {\n      return;\n    }\n    const nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n    this.updateSelectionInGroup(nextItemToSelect, groupName);\n  }\n  static selectPreviousItem(item, groupName) {\n    const group = this.getGroup(groupName),\n      groupLength = group.length,\n      currentItemPosition = group.indexOf(item);\n    if (groupLength <= 1) {\n      return;\n    }\n    const previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n    this.updateSelectionInGroup(previousItemToSelect, groupName);\n  }\n  static selectItem(item, groupName) {\n    this.updateSelectionInGroup(item, groupName);\n  }\n  static updateSelectionInGroup(radioBtnToSelect, groupName) {\n    const selectedRadio = this.getSelectedRadioFromGroup(groupName);\n    this._deselectRadio(selectedRadio);\n    this._selectRadio(radioBtnToSelect);\n    this.selectedRadios.set(groupName, radioBtnToSelect);\n  }\n  static _deselectRadio(radioBtn) {\n    if (radioBtn) {\n      radioBtn.selected = false;\n    }\n  }\n  static _selectRadio(radioBtn) {\n    if (radioBtn) {\n      radioBtn.focus();\n      radioBtn.selected = true;\n      radioBtn._selected = true;\n      radioBtn.fireEvent(\"select\");\n    }\n  }\n  static _nextSelectable(pos, group) {\n    const groupLength = group.length;\n    let nextRadioToSelect = null;\n    if (pos === groupLength - 1) {\n      if (group[0].disabled || group[0].readonly) {\n        return this._nextSelectable(1, group);\n      }\n      nextRadioToSelect = group[0];\n    } else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n      return this._nextSelectable(pos + 1, group);\n    } else {\n      nextRadioToSelect = group[pos + 1];\n    }\n    return nextRadioToSelect;\n  }\n  static _previousSelectable(pos, group) {\n    const groupLength = group.length;\n    let previousRadioToSelect = null;\n    if (pos === 0) {\n      if (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n        return this._previousSelectable(groupLength - 1, group);\n      }\n      previousRadioToSelect = group[groupLength - 1];\n    } else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n      return this._previousSelectable(pos - 1, group);\n    } else {\n      previousRadioToSelect = group[pos - 1];\n    }\n    return previousRadioToSelect;\n  }\n  static enforceSingleSelection(radioBtn, groupName) {\n    const selectedRadio = this.getSelectedRadioFromGroup(groupName);\n    if (radioBtn.selected) {\n      if (!selectedRadio) {\n        this.selectedRadios.set(groupName, radioBtn);\n      } else if (radioBtn !== selectedRadio) {\n        this._deselectRadio(selectedRadio);\n        this.selectedRadios.set(groupName, radioBtn);\n      }\n    } else if (radioBtn === selectedRadio) {\n      this.selectedRadios.set(groupName, null);\n    }\n  }\n  static get groups() {\n    if (!this._groups) {\n      this._groups = new Map();\n    }\n    return this._groups;\n  }\n  static get selectedRadios() {\n    if (!this._selectedRadios) {\n      this._selectedRadios = new Map();\n    }\n    return this._selectedRadios;\n  }\n}\nexport default RadioButtonGroup;","map":{"version":3,"names":["RadioButtonGroup","hasGroup","groupName","groups","has","getGroup","get","getSelectedRadioFromGroup","selectedRadios","removeGroup","delete","addToGroup","radioBtn","enforceSingleSelection","push","createGroup","removeFromGroup","group","selectedRadio","forEach","_radioBtn","idx","arr","_id","splice","set","length","selected","selectNextItem","item","groupLength","currentItemPosition","indexOf","nextItemToSelect","_nextSelectable","updateSelectionInGroup","selectPreviousItem","previousItemToSelect","_previousSelectable","selectItem","radioBtnToSelect","_deselectRadio","_selectRadio","focus","_selected","fireEvent","pos","nextRadioToSelect","disabled","readonly","previousRadioToSelect","_groups","Map","_selectedRadios"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/RadioButtonGroup.js"],"sourcesContent":["class RadioButtonGroup {\n\tstatic hasGroup(groupName) {\n\t\treturn this.groups.has(groupName);\n\t}\n\n\tstatic getGroup(groupName) {\n\t\treturn this.groups.get(groupName);\n\t}\n\n\tstatic getSelectedRadioFromGroup(groupName) {\n\t\treturn this.selectedRadios.get(groupName);\n\t}\n\n\tstatic removeGroup(groupName) {\n\t\tthis.selectedRadios.delete(groupName);\n\t\treturn this.groups.delete(groupName);\n\t}\n\n\tstatic addToGroup(radioBtn, groupName) {\n\t\tif (this.hasGroup(groupName)) {\n\t\t\tthis.enforceSingleSelection(radioBtn, groupName);\n\t\t\tthis.getGroup(groupName).push(radioBtn);\n\t\t} else {\n\t\t\tthis.createGroup(radioBtn, groupName);\n\t\t}\n\t}\n\n\tstatic removeFromGroup(radioBtn, groupName) {\n\t\tif (!this.hasGroup(groupName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this.getGroup(groupName);\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\t// Remove the radio button from the given group\n\t\tgroup.forEach((_radioBtn, idx, arr) => {\n\t\t\tif (radioBtn._id === _radioBtn._id) {\n\t\t\t\treturn arr.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tif (selectedRadio === radioBtn) {\n\t\t\tthis.selectedRadios.set(groupName, null);\n\t\t}\n\n\t\t// Remove the group if it is empty\n\t\tif (!group.length) {\n\t\t\tthis.removeGroup(groupName);\n\t\t}\n\t}\n\n\tstatic createGroup(radioBtn, groupName) {\n\t\tif (radioBtn.selected) {\n\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t}\n\n\t\tthis.groups.set(groupName, [radioBtn]);\n\t}\n\n\tstatic selectNextItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(nextItemToSelect, groupName);\n\t}\n\n\tstatic selectPreviousItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(previousItemToSelect, groupName);\n\t}\n\n\tstatic selectItem(item, groupName) {\n\t\tthis.updateSelectionInGroup(item, groupName);\n\t}\n\n\tstatic updateSelectionInGroup(radioBtnToSelect, groupName) {\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\tthis._deselectRadio(selectedRadio);\n\t\tthis._selectRadio(radioBtnToSelect);\n\t\tthis.selectedRadios.set(groupName, radioBtnToSelect);\n\t}\n\n\tstatic _deselectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.selected = false;\n\t\t}\n\t}\n\n\tstatic _selectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.focus();\n\t\t\tradioBtn.selected = true;\n\t\t\tradioBtn._selected = true;\n\t\t\tradioBtn.fireEvent(\"select\");\n\t\t}\n\t}\n\n\tstatic _nextSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet nextRadioToSelect = null;\n\n\t\tif (pos === groupLength - 1) {\n\t\t\tif (group[0].disabled || group[0].readonly) {\n\t\t\t\treturn this._nextSelectable(1, group);\n\t\t\t}\n\t\t\tnextRadioToSelect = group[0];\n\t\t} else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n\t\t\treturn this._nextSelectable(pos + 1, group);\n\t\t} else {\n\t\t\tnextRadioToSelect = group[pos + 1];\n\t\t}\n\n\t\treturn nextRadioToSelect;\n\t}\n\n\tstatic _previousSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet previousRadioToSelect = null;\n\t\tif (pos === 0) {\n\t\t\tif (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n\t\t\t\treturn this._previousSelectable(groupLength - 1, group);\n\t\t\t}\n\t\t\tpreviousRadioToSelect = group[groupLength - 1];\n\t\t} else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n\t\t\treturn this._previousSelectable(pos - 1, group);\n\t\t} else {\n\t\t\tpreviousRadioToSelect = group[pos - 1];\n\t\t}\n\n\t\treturn previousRadioToSelect;\n\t}\n\n\tstatic enforceSingleSelection(radioBtn, groupName) {\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\tif (radioBtn.selected) {\n\t\t\tif (!selectedRadio) {\n\t\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t\t} else if (radioBtn !== selectedRadio) {\n\t\t\t\tthis._deselectRadio(selectedRadio);\n\t\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t\t}\n\t\t} else if (radioBtn === selectedRadio) {\n\t\t\tthis.selectedRadios.set(groupName, null);\n\t\t}\n\t}\n\n\tstatic get groups() {\n\t\tif (!this._groups) {\n\t\t\tthis._groups = new Map();\n\t\t}\n\t\treturn this._groups;\n\t}\n\n\tstatic get selectedRadios() {\n\t\tif (!this._selectedRadios) {\n\t\t\tthis._selectedRadios = new Map();\n\t\t}\n\t\treturn this._selectedRadios;\n\t}\n}\n\nexport default RadioButtonGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}