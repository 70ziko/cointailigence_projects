{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { createUseStyles } from 'react-jss';\nimport { getCurrentRange } from '@ui5/webcomponents-react-base/lib/Device';\nimport { useConsolidatedRef, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport React, { forwardRef, useState, useRef, useEffect, useMemo, Children, cloneElement } from 'react';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nvar labelSpanClasses = function labelSpanClasses() {\n  var styleClasses = {};\n  for (var i = 1; i <= 11; i++) {\n    styleClasses[\"labelSpan\".concat(i)] = {\n      '--ui5wcr_form_content_span': 12 - i,\n      '--ui5wcr_form_label_span': i\n    };\n  }\n  return styleClasses;\n};\nvar styles = _objectSpread(_objectSpread({\n  form: {\n    display: 'grid',\n    alignItems: 'baseline',\n    rowGap: '0.25rem',\n    columnGap: '0.5rem',\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    '--ui5wcr_form_full_span': 'span 12',\n    '--ui5wcr_form_label_text_align': 'end',\n    '&[data-columns=\"1\"]': {},\n    '&[data-columns=\"2\"]': {\n      gridTemplateColumns: \"repeat(24, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 24'\n    },\n    '&[data-columns=\"3\"]': {\n      gridTemplateColumns: \"repeat(36, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 36'\n    },\n    '&[data-columns=\"4\"]': {\n      gridTemplateColumns: \"repeat(48, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 48'\n    },\n    '&[data-columns=\"5\"]': {\n      gridTemplateColumns: \"repeat(60, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 60'\n    },\n    '&[data-columns=\"6\"]': {\n      gridTemplateColumns: \"repeat(72, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 72'\n    },\n    '&[data-columns=\"7\"]': {\n      gridTemplateColumns: \"repeat(84, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 84'\n    },\n    '&[data-columns=\"8\"]': {\n      gridTemplateColumns: \"repeat(96, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 96'\n    },\n    '&[data-columns=\"9\"]': {\n      gridTemplateColumns: \"repeat(108, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 108'\n    },\n    '&[data-columns=\"10\"]': {\n      gridTemplateColumns: \"repeat(120, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 120'\n    },\n    '&[data-columns=\"11\"]': {\n      gridTemplateColumns: \"repeat(132, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 132'\n    },\n    '&[data-columns=\"12\"]': {\n      gridTemplateColumns: \"repeat(144, 1fr)\",\n      '--ui5wcr_form_full_span': 'span 144'\n    }\n  },\n  formTitle: {\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapGroup_TitleBorderColor),\n    marginBottom: '1.75rem',\n    gridColumn: 'var(--ui5wcr_form_full_span)'\n  }\n}, labelSpanClasses()), {}, {\n  labelSpan12: {\n    '--ui5wcr_form_content_span': 12,\n    '--ui5wcr_form_label_text_align': 'start'\n  }\n});\nvar useStyles = createUseStyles(styles, {\n  name: 'Form'\n});\n/**\n * The `Form` component arranges labels and fields into groups and rows. There are different ways to visualize forms for different screen sizes.\n */\n\nvar Form = /*#__PURE__*/forwardRef(function (props, ref) {\n  var title = props.title,\n    children = props.children,\n    className = props.className,\n    slot = props.slot,\n    style = props.style,\n    tooltip = props.tooltip,\n    columnsS = props.columnsS,\n    columnsM = props.columnsM,\n    columnsL = props.columnsL,\n    columnsXL = props.columnsXL,\n    labelSpanS = props.labelSpanS,\n    labelSpanM = props.labelSpanM,\n    labelSpanL = props.labelSpanL,\n    labelSpanXL = props.labelSpanXL;\n  var columnsMap = new Map();\n  columnsMap.set('Phone', columnsS);\n  columnsMap.set('Tablet', columnsM);\n  columnsMap.set('Desktop', columnsL);\n  columnsMap.set('LargeDesktop', columnsXL);\n  var labelSpanMap = new Map();\n  labelSpanMap.set('Phone', labelSpanS);\n  labelSpanMap.set('Tablet', labelSpanM);\n  labelSpanMap.set('Desktop', labelSpanL);\n  labelSpanMap.set('LargeDesktop', labelSpanXL);\n  var formRef = useConsolidatedRef(ref); // use the window range set as first best guess\n\n  var _useState = useState(getCurrentRange('StdExt', window.innerWidth).name),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRange = _useState2[0],\n    setCurrentRange = _useState2[1];\n  var lastRange = useRef(currentRange);\n  useEffect(function () {\n    var observer = new ResizeObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        form = _ref2[0];\n      var newRange = getCurrentRange('StdExt', form.contentRect.width).name;\n      if (lastRange.current !== newRange) {\n        lastRange.current = newRange;\n        setCurrentRange(newRange);\n      }\n    });\n    if (formRef.current) {\n      observer.observe(formRef.current);\n    }\n    return function () {\n      observer.disconnect();\n    };\n  }, [formRef, setCurrentRange, lastRange]);\n  var classes = useStyles();\n  var currentNumberOfColumns = columnsMap.get(currentRange);\n  var currentLabelSpan = labelSpanMap.get(currentRange);\n  var _useMemo = useMemo(function () {\n      var _props$title;\n      var computedFormGroups = [];\n      if (Children.count(children) === 1 && !title && ((_props$title = children.props.title) === null || _props$title === void 0 ? void 0 : _props$title.length) > 0) {\n        return [/*#__PURE__*/cloneElement(children, {\n          title: null\n        }), children.props.title];\n      }\n      var currentColumnCount = currentNumberOfColumns;\n      if (currentColumnCount === 1) {\n        return [children, title];\n      }\n      var rows = [];\n      var childrenArray = Children.toArray(children);\n      var estimatedNumberOfGroupRows = childrenArray.length / currentColumnCount;\n      for (var i = 0; i < estimatedNumberOfGroupRows; i++) {\n        rows[i] = childrenArray.slice(i * currentColumnCount, i * currentColumnCount + currentColumnCount);\n      }\n      var maxRowsPerRow = [];\n      rows.forEach(function (rowGroup, rowIndex) {\n        var numberOfRowsOfEachForm = rowGroup.map(function (row) {\n          if (row.type.displayName === 'FormItem') {\n            return 1;\n          }\n          return Children.count(row.props.children) + 1;\n        });\n        maxRowsPerRow[rowIndex] = Math.max.apply(Math, _toConsumableArray(numberOfRowsOfEachForm));\n      });\n      var totalRowCount = 2;\n      rows.forEach(function (column, rowIndex) {\n        var rowsForThisRow = maxRowsPerRow[rowIndex];\n        column.forEach(function (cell, columnIndex) {\n          var _cell$props;\n          var titleStyles = {\n            gridColumnEnd: 'span 12',\n            gridColumnStart: columnIndex * 12 + 1,\n            gridRowStart: totalRowCount,\n            display: 'flex',\n            alignItems: 'center',\n            fontFamily: ThemingParameters.sapFontFamily,\n            height: CssSizeVariables.sapWcrFormGroupTitleHeight,\n            lineHeight: CssSizeVariables.sapWcrFormGroupTitleHeight,\n            color: ThemingParameters.sapTextColor,\n            fontSize: ThemingParameters.sapFontSize,\n            fontWeight: 'bold',\n            backgroundColor: ThemingParameters.sapGroup_TitleBackground,\n            margin: 0,\n            paddingTop: '1rem'\n          };\n          if (cell !== null && cell !== void 0 && (_cell$props = cell.props) !== null && _cell$props !== void 0 && _cell$props.title) {\n            computedFormGroups.push( /*#__PURE__*/React.createElement(\"h6\", {\n              style: titleStyles,\n              title: cell.props.title,\n              \"aria-label\": cell.props.title,\n              key: \"title-col-\".concat(columnIndex, \"-row-\").concat(totalRowCount)\n            }, cell.props.title));\n          }\n          for (var _i = 0; _i < rowsForThisRow; _i++) {\n            var itemToRender = cell.type.displayName === 'FormGroup' ? Children.toArray(cell.props.children)[_i] : cell.type.displayName === 'FormItem' && _i === 0 ? cell : null;\n            if (itemToRender) {\n              computedFormGroups.push( /*#__PURE__*/cloneElement(itemToRender, {\n                key: \"col-\".concat(columnIndex, \"-row-\").concat(totalRowCount + _i),\n                columnIndex: columnIndex,\n                lastGroupItem: cell.type.displayName === 'FormGroup' && rowsForThisRow - 2 === _i,\n                rowIndex: totalRowCount + _i + 1,\n                labelSpan: currentLabelSpan\n              }));\n            }\n          }\n        });\n        totalRowCount += rowsForThisRow;\n        if (rowsForThisRow === 1) {\n          totalRowCount += 1;\n        }\n      });\n      return [computedFormGroups, title];\n    }, [children, currentRange, title, currentNumberOfColumns, currentLabelSpan]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    formGroups = _useMemo2[0],\n    updatedTitle = _useMemo2[1];\n  var passThroughProps = usePassThroughHtmlProps(props);\n  var formClassNames = StyleClassHelper.of(classes.form).put(classes[\"labelSpan\".concat((currentLabelSpan - 1) % 12 + 1)]).putIfPresent(className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: formRef,\n    slot: slot,\n    className: formClassNames.valueOf(),\n    title: tooltip,\n    style: style,\n    \"data-columns\": currentNumberOfColumns\n  }, passThroughProps), updatedTitle && /*#__PURE__*/React.createElement(Title, {\n    level: TitleLevel.H3,\n    className: classes.formTitle\n  }, updatedTitle), formGroups);\n});\nForm.displayName = 'Form';\nForm.defaultProps = {\n  columnsS: 1,\n  columnsM: 1,\n  columnsL: 1,\n  columnsXL: 2,\n  labelSpanS: 12,\n  labelSpanM: 2,\n  labelSpanL: 4,\n  labelSpanXL: 4\n};\nexport { Form };","map":{"version":3,"names":["labelSpanClasses","styleClasses","i","concat","styles","_objectSpread","form","display","alignItems","rowGap","columnGap","gridTemplateColumns","formTitle","borderBottom","ThemingParameters","sapGroup_TitleBorderColor","marginBottom","gridColumn","labelSpan12","useStyles","createUseStyles","name","Form","forwardRef","props","ref","title","children","className","slot","style","tooltip","columnsS","columnsM","columnsL","columnsXL","labelSpanS","labelSpanM","labelSpanL","labelSpanXL","columnsMap","Map","set","labelSpanMap","formRef","useConsolidatedRef","_useState","useState","getCurrentRange","window","innerWidth","_useState2","_slicedToArray","currentRange","setCurrentRange","lastRange","useRef","useEffect","observer","ResizeObserver","_ref","_ref2","newRange","contentRect","width","current","observe","disconnect","classes","currentNumberOfColumns","get","currentLabelSpan","_useMemo","useMemo","_props$title","computedFormGroups","Children","count","length","cloneElement","currentColumnCount","rows","childrenArray","toArray","estimatedNumberOfGroupRows","slice","maxRowsPerRow","forEach","rowGroup","rowIndex","numberOfRowsOfEachForm","map","row","type","displayName","Math","max","apply","_toConsumableArray","totalRowCount","column","rowsForThisRow","cell","columnIndex","_cell$props","titleStyles","gridColumnEnd","gridColumnStart","gridRowStart","fontFamily","sapFontFamily","height","CssSizeVariables","sapWcrFormGroupTitleHeight","lineHeight","color","sapTextColor","fontSize","sapFontSize","fontWeight","backgroundColor","sapGroup_TitleBackground","margin","paddingTop","push","React","createElement","key","_i","itemToRender","lastGroupItem","labelSpan","_useMemo2","formGroups","updatedTitle","passThroughProps","usePassThroughHtmlProps","formClassNames","StyleClassHelper","of","put","putIfPresent","_extends","valueOf","Title","level","TitleLevel","H3","defaultProps"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Form/Form.jss.ts","/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Form/index.tsx"],"sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nconst labelSpanClasses = () => {\n  let styleClasses = {};\n  for (let i = 1; i <= 11; i++) {\n    styleClasses[`labelSpan${i}`] = {\n      '--ui5wcr_form_content_span': 12 - i,\n      '--ui5wcr_form_label_span': i\n    };\n  }\n  return styleClasses;\n};\n\nconst styles = {\n  form: {\n    display: 'grid',\n    alignItems: 'baseline',\n    rowGap: '0.25rem',\n    columnGap: '0.5rem',\n    gridTemplateColumns: `repeat(12, 1fr)`,\n    '--ui5wcr_form_full_span': 'span 12',\n    '--ui5wcr_form_label_text_align': 'end',\n    '&[data-columns=\"1\"]': {},\n    '&[data-columns=\"2\"]': {\n      gridTemplateColumns: `repeat(24, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 24'\n    },\n    '&[data-columns=\"3\"]': {\n      gridTemplateColumns: `repeat(36, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 36'\n    },\n    '&[data-columns=\"4\"]': {\n      gridTemplateColumns: `repeat(48, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 48'\n    },\n    '&[data-columns=\"5\"]': {\n      gridTemplateColumns: `repeat(60, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 60'\n    },\n    '&[data-columns=\"6\"]': {\n      gridTemplateColumns: `repeat(72, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 72'\n    },\n    '&[data-columns=\"7\"]': {\n      gridTemplateColumns: `repeat(84, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 84'\n    },\n    '&[data-columns=\"8\"]': {\n      gridTemplateColumns: `repeat(96, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 96'\n    },\n    '&[data-columns=\"9\"]': {\n      gridTemplateColumns: `repeat(108, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 108'\n    },\n    '&[data-columns=\"10\"]': {\n      gridTemplateColumns: `repeat(120, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 120'\n    },\n    '&[data-columns=\"11\"]': {\n      gridTemplateColumns: `repeat(132, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 132'\n    },\n    '&[data-columns=\"12\"]': {\n      gridTemplateColumns: `repeat(144, 1fr)`,\n      '--ui5wcr_form_full_span': 'span 144'\n    }\n  },\n  formTitle: {\n    borderBottom: `1px solid ${ThemingParameters.sapGroup_TitleBorderColor}`,\n    marginBottom: '1.75rem',\n    gridColumn: 'var(--ui5wcr_form_full_span)'\n  },\n  ...labelSpanClasses(),\n  labelSpan12: {\n    '--ui5wcr_form_content_span': 12,\n    '--ui5wcr_form_label_text_align': 'start'\n  }\n};\n\nexport { styles };\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { createUseStyles } from 'react-jss';\nimport { getCurrentRange } from '@ui5/webcomponents-react-base/lib/Device';\nimport { useConsolidatedRef, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport React, {\n  Children,\n  cloneElement,\n  CSSProperties,\n  FC,\n  forwardRef,\n  ReactElement,\n  Ref,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { styles } from './Form.jss';\n\nexport interface FormPropTypes extends CommonProps {\n  /**\n   * Components that are placed into Form. Please use only `FormGroup` and `FormItem` in order to preserve the\n   * intended design.\n   */\n  children: ReactElement | ReactElement[];\n  /**\n   * Form title\n   */\n  title?: string;\n  /**\n   * Form columns for small size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 1\n   */\n  columnsS?: number;\n  /**\n   * Form columns for medium size. The number of columns for medium size must not be smaller than the number of columns for small size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 1\n   */\n  columnsM?: number;\n  /**\n   * Form columns for large size. The number of columns for large size must not be smaller than the number of columns for medium size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 1\n   */\n  columnsL?: number;\n  /**\n   * Form columns for extra large size. The number of columns for extra large size must not be smaller than the number of columns for large size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 2\n   */\n  columnsXL?: number;\n\n  /**\n   * Default span for labels in small size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 12\n   */\n  labelSpanS?: number;\n  /**\n   * Default span for labels in medium size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 2\n   */\n  labelSpanM?: number;\n  /**\n   * Default span for labels in large size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 4\n   */\n  labelSpanL?: number;\n  /**\n   * Default span for labels in extra large size.\n   * Must be a number between 1 and 12.<br />\n   * Default Value: 4\n   */\n  labelSpanXL?: number;\n}\n\nconst useStyles = createUseStyles(styles, { name: 'Form' });\n/**\n * The `Form` component arranges labels and fields into groups and rows. There are different ways to visualize forms for different screen sizes.\n */\nconst Form: FC<FormPropTypes> = forwardRef((props: FormPropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    title,\n    children,\n    className,\n    slot,\n    style,\n    tooltip,\n    columnsS,\n    columnsM,\n    columnsL,\n    columnsXL,\n    labelSpanS,\n    labelSpanM,\n    labelSpanL,\n    labelSpanXL\n  } = props;\n\n  const columnsMap = new Map();\n  columnsMap.set('Phone', columnsS);\n  columnsMap.set('Tablet', columnsM);\n  columnsMap.set('Desktop', columnsL);\n  columnsMap.set('LargeDesktop', columnsXL);\n\n  const labelSpanMap = new Map();\n  labelSpanMap.set('Phone', labelSpanS);\n  labelSpanMap.set('Tablet', labelSpanM);\n  labelSpanMap.set('Desktop', labelSpanL);\n  labelSpanMap.set('LargeDesktop', labelSpanXL);\n\n  const formRef = useConsolidatedRef<HTMLDivElement>(ref);\n  // use the window range set as first best guess\n  const [currentRange, setCurrentRange] = useState(getCurrentRange('StdExt', window.innerWidth).name);\n  const lastRange = useRef(currentRange);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(([form]) => {\n      const newRange = getCurrentRange('StdExt', form.contentRect.width).name;\n      if (lastRange.current !== newRange) {\n        lastRange.current = newRange;\n        setCurrentRange(newRange);\n      }\n    });\n\n    if (formRef.current) {\n      observer.observe(formRef.current);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [formRef, setCurrentRange, lastRange]);\n\n  const classes = useStyles();\n\n  const currentNumberOfColumns = columnsMap.get(currentRange);\n  const currentLabelSpan = labelSpanMap.get(currentRange);\n\n  const [formGroups, updatedTitle] = useMemo(() => {\n    const computedFormGroups: any[] = [];\n\n    if (Children.count(children) === 1 && !title && (children as ReactElement).props.title?.length > 0) {\n      return [cloneElement(children as ReactElement, { title: null }), (children as ReactElement).props.title];\n    }\n\n    const currentColumnCount = currentNumberOfColumns;\n    if (currentColumnCount === 1) {\n      return [children, title];\n    }\n\n    const rows = [];\n    const childrenArray = Children.toArray(children);\n    const estimatedNumberOfGroupRows = childrenArray.length / currentColumnCount;\n    for (let i = 0; i < estimatedNumberOfGroupRows; i++) {\n      rows[i] = childrenArray.slice(i * currentColumnCount, i * currentColumnCount + currentColumnCount);\n    }\n\n    const maxRowsPerRow: number[] = [];\n    rows.forEach((rowGroup: ReactElement[], rowIndex) => {\n      const numberOfRowsOfEachForm = rowGroup.map((row) => {\n        if ((row.type as any).displayName === 'FormItem') {\n          return 1;\n        }\n        return Children.count(row.props.children) + 1;\n      });\n\n      maxRowsPerRow[rowIndex] = Math.max(...numberOfRowsOfEachForm);\n    });\n\n    let totalRowCount = 2;\n\n    rows.forEach((column: ReactElement[], rowIndex) => {\n      const rowsForThisRow = maxRowsPerRow[rowIndex];\n      column.forEach((cell, columnIndex) => {\n        const titleStyles: CSSProperties = {\n          gridColumnEnd: 'span 12',\n          gridColumnStart: columnIndex * 12 + 1,\n          gridRowStart: totalRowCount,\n          display: 'flex',\n          alignItems: 'center',\n          fontFamily: ThemingParameters.sapFontFamily,\n          height: CssSizeVariables.sapWcrFormGroupTitleHeight,\n          lineHeight: CssSizeVariables.sapWcrFormGroupTitleHeight,\n          color: ThemingParameters.sapTextColor,\n          fontSize: ThemingParameters.sapFontSize,\n          fontWeight: 'bold',\n          backgroundColor: ThemingParameters.sapGroup_TitleBackground,\n          margin: 0,\n          paddingTop: '1rem'\n        };\n\n        if (cell?.props?.title) {\n          computedFormGroups.push(\n            <h6\n              style={titleStyles}\n              title={cell.props.title}\n              aria-label={cell.props.title}\n              key={`title-col-${columnIndex}-row-${totalRowCount}`}\n            >\n              {cell.props.title}\n            </h6>\n          );\n        }\n\n        for (let i = 0; i < rowsForThisRow; i++) {\n          const itemToRender =\n            (cell.type as any).displayName === 'FormGroup'\n              ? Children.toArray(cell.props.children)[i]\n              : (cell.type as any).displayName === 'FormItem' && i === 0\n              ? cell\n              : null;\n\n          if (itemToRender) {\n            computedFormGroups.push(\n              cloneElement(itemToRender as ReactElement, {\n                key: `col-${columnIndex}-row-${totalRowCount + i}`,\n                columnIndex,\n                lastGroupItem: (cell.type as any).displayName === 'FormGroup' && rowsForThisRow - 2 === i,\n                rowIndex: totalRowCount + i + 1,\n                labelSpan: currentLabelSpan\n              })\n            );\n          }\n        }\n      });\n      totalRowCount += rowsForThisRow;\n      if (rowsForThisRow === 1) {\n        totalRowCount += 1;\n      }\n    });\n\n    return [computedFormGroups, title];\n  }, [children, currentRange, title, currentNumberOfColumns, currentLabelSpan]);\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  const formClassNames = StyleClassHelper.of(classes.form)\n    .put(classes[`labelSpan${((currentLabelSpan - 1) % 12) + 1}`])\n    .putIfPresent(className);\n\n  return (\n    <div\n      ref={formRef}\n      slot={slot}\n      className={formClassNames.valueOf()}\n      title={tooltip}\n      style={style}\n      data-columns={currentNumberOfColumns}\n      {...passThroughProps}\n    >\n      {updatedTitle && (\n        <Title level={TitleLevel.H3} className={classes.formTitle}>\n          {updatedTitle}\n        </Title>\n      )}\n      {formGroups}\n    </div>\n  );\n});\n\nForm.displayName = 'Form';\n\nForm.defaultProps = {\n  columnsS: 1,\n  columnsM: 1,\n  columnsL: 1,\n  columnsXL: 2,\n  labelSpanS: 12,\n  labelSpanM: 2,\n  labelSpanL: 4,\n  labelSpanXL: 4\n};\n\nexport { Form };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}