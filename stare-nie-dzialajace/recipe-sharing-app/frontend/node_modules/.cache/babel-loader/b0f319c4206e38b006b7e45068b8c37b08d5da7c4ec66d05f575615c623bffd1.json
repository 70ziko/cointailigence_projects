{"ast":null,"code":"import { ListMode } from '@ui5/webcomponents-react/lib/ListMode';\nimport { ListSeparators } from '@ui5/webcomponents-react/lib/ListSeparators';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/List';\n\n/**\n * The `List` component allows displaying a list of items, advanced keyboard handling support for navigating between items, and predefined modes to improve the development efficiency.\n *\n * The `List` is а container for the available list items:\n *\n * *   `StandardListItem`\n * *   `CustomListItem`\n * *   `GroupHeaderListItem`\n *\n *\n *\n * To benefit from the built-in selection mechanism, you can use the available selection modes, such as `SingleSelect`, `MultiSelect` and `Delete`.\n *\n * Additionally, the `List` provides header, footer, and customization for the list item separators.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/List\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nvar List = withWebComponent('ui5-list', ['footerText', 'headerText', 'mode', 'noDataText', 'separators'], ['busy', 'infiniteScroll', 'inset'], ['header'], ['item-click', 'item-close', 'item-delete', 'item-toggle', 'load-more', 'selection-change']);\nList.displayName = 'List';\nList.defaultProps = {\n  busy: false,\n  infiniteScroll: false,\n  inset: false,\n  mode: ListMode.None,\n  separators: ListSeparators.All\n};\nexport { List };","map":{"version":3,"names":["List","withWebComponent","displayName","defaultProps","busy","infiniteScroll","inset","mode","ListMode","None","separators","ListSeparators","All"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/webComponents/List/index.tsx"],"sourcesContent":["import { ListMode } from '@ui5/webcomponents-react/lib/ListMode';\nimport { ListSeparators } from '@ui5/webcomponents-react/lib/ListSeparators';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/List';\nimport { FC, ReactNode } from 'react';\n\nexport interface ListPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Defines if the component would display a loading indicator at the bottom of the list. It's especially useful, when combined with `infiniteScroll`.\n   */\n  busy?: boolean;\n  /**\n   * Defines the footer text.\n   */\n  footerText?: string;\n  /**\n   * Defines the `List` header text.\n   *\n   * **Note:** If `header` is set this property is ignored.\n   */\n  headerText?: string;\n  /**\n   * Defines if the component would fire the `onLoadMore` event when the user scrolls to the bottom of the list, and helps achieving an \"infinite scroll\" effect by adding new items each time.\n   */\n  infiniteScroll?: boolean;\n  /**\n   * Determines whether the list items are indented.\n   */\n  inset?: boolean;\n  /**\n   * Defines the mode of the `List`.\n   *\n   * **Note:** Available options are `None`, `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd`, `MultiSelect`, and `Delete`.\n   */\n  mode?: ListMode;\n  /**\n   * Defines the text that is displayed when the `List` contains no items.\n   */\n  noDataText?: string;\n  /**\n   * Defines the item separator style that is used.\n   *\n   * **Notes:**\n   *\n   * *   Avalaible options are `All`, `Inner`, and `None`.\n   * *   When set to `None`, none of the items are separated by horizontal lines.\n   * *   When set to `Inner`, the first item doesn't have a top separator and the last item doesn't have a bottom separator.\n   */\n  separators?: ListSeparators;\n  /**\n   * Defines the items of the `List`.\n   *\n   * **Note:** Use `StandardListItem`, `CustomListItem`, and `GroupHeaderListItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the `List` header.\n   *\n   * **Note:** When `header` is set, the `headerText` property is ignored.\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Fired when an item is activated, unless the item's `type` property is set to `Inactive`.\n   */\n  onItemClick?: (event: CustomEvent<{ item: ReactNode }>) => void;\n  /**\n   * Fired when the `Close` button of any item is clicked\n   *\n   * **Note:** This event is applicable to `NotificationListItem` items only, not to be confused with `item-delete`.\n   */\n  onItemClose?: (event: CustomEvent<{ item: ReactNode }>) => void;\n  /**\n   * Fired when the Delete button of any item is pressed.\n   *\n   * **Note:** A Delete button is displayed on each item, when the `List` `mode` property is set to `Delete`.\n   */\n  onItemDelete?: (event: CustomEvent<{ item: ReactNode }>) => void;\n  /**\n   * Fired when the `Toggle` button of any item is clicked.\n   *\n   * **Note:** This event is applicable to `NotificationListItemBase` items only.\n   */\n  onItemToggle?: (event: CustomEvent<{ item: ReactNode }>) => void;\n  /**\n   * Fired when the user scrolls to the bottom of the list.\n   *\n   * **Note:** The event is fired when the `infiniteScroll` property is enabled.\n   */\n  onLoadMore?: (event: CustomEvent) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect`, `SingleSelectBegin`, `SingleSelectEnd` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (event: CustomEvent<{ selectedItems: unknown[]; previouslySelectedItems: unknown[] }>) => void;\n}\n\n/**\n * The `List` component allows displaying a list of items, advanced keyboard handling support for navigating between items, and predefined modes to improve the development efficiency.\n *\n * The `List` is а container for the available list items:\n *\n * *   `StandardListItem`\n * *   `CustomListItem`\n * *   `GroupHeaderListItem`\n *\n *\n *\n * To benefit from the built-in selection mechanism, you can use the available selection modes, such as `SingleSelect`, `MultiSelect` and `Delete`.\n *\n * Additionally, the `List` provides header, footer, and customization for the list item separators.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/List\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst List: FC<ListPropTypes> = withWebComponent<ListPropTypes>(\n  'ui5-list',\n  ['footerText', 'headerText', 'mode', 'noDataText', 'separators'],\n  ['busy', 'infiniteScroll', 'inset'],\n  ['header'],\n  ['item-click', 'item-close', 'item-delete', 'item-toggle', 'load-more', 'selection-change']\n);\n\nList.displayName = 'List';\n\nList.defaultProps = {\n  busy: false,\n  infiniteScroll: false,\n  inset: false,\n  mode: ListMode.None,\n  separators: ListSeparators.All\n};\n\nexport { List };\n"],"mappings":";;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,IAAuB,GAAGC,gBAAgB,CAC9C,UAD8C,EAE9C,CAAC,YAAD,EAAe,YAAf,EAA6B,MAA7B,EAAqC,YAArC,EAAmD,YAAnD,CAF8C,EAG9C,CAAC,MAAD,EAAS,gBAAT,EAA2B,OAA3B,CAH8C,EAI9C,CAAC,QAAD,CAJ8C,EAK9C,CAAC,YAAD,EAAe,YAAf,EAA6B,aAA7B,EAA4C,aAA5C,EAA2D,WAA3D,EAAwE,kBAAxE,CAL8C;AAQhDD,IAAI,CAACE,WAAL,GAAmB,MAAnB;AAEAF,IAAI,CAACG,YAAL,GAAoB;EAClBC,IAAI,EAAE,KADY;EAElBC,cAAc,EAAE,KAFE;EAGlBC,KAAK,EAAE,KAHW;EAIlBC,IAAI,EAAEC,QAAQ,CAACC,IAJG;EAKlBC,UAAU,EAAEC,cAAc,CAACC;AALT,CAApB"},"metadata":{},"sourceType":"module","externalDependencies":[]}