{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/MultiComboBox';\n\n/**\n * The `MultiComboBox` component provides a list box with items and a text field allowing the user to either type a value directly into the control, or choose from the list of existing items. It is a drop-down list for selecting and filtering values, commonly used to enable users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow of available options. The select options in the list have checkboxes that permit multi-selection. Entered values are displayed as tokens.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/MultiComboBox\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nvar MultiComboBox = withWebComponent('ui5-multi-combobox', ['filter', 'placeholder', 'value', 'valueState'], ['allowCustomValues', 'disabled', 'open', 'readonly', 'required'], ['icon', 'valueStateMessage'], ['change', 'input', 'open-change', 'selection-change']);\nMultiComboBox.displayName = 'MultiComboBox';\nMultiComboBox.defaultProps = {\n  allowCustomValues: false,\n  disabled: false,\n  filter: 'StartsWithPerTerm',\n  open: false,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\nexport { MultiComboBox };","map":{"version":3,"names":["MultiComboBox","withWebComponent","displayName","defaultProps","allowCustomValues","disabled","filter","open","readonly","required","valueState","ValueState","None"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/webComponents/MultiComboBox/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/MultiComboBox';\nimport { FC, ReactNode } from 'react';\n\nexport interface MultiComboBoxPropTypes extends Omit<WithWebComponentPropTypes, 'onChange' | 'onInput'> {\n  /**\n   * Defines if the user input will be prevented, if no matching item has been found\n   */\n  allowCustomValues?: boolean;\n  /**\n   * Defines whether `MultiComboBox` is in disabled state.\n   *\n   * **Note:** A disabled `MultiComboBox` is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the filter type of the `MultiComboBox`. Available options are: `StartsWithPerTerm`, `None`.\n   */\n  filter?: string;\n  /**\n   * Indicates whether the dropdown is open. True if the dropdown is open, false otherwise.\n   */\n  open?: boolean;\n  /**\n   * Defines a short hint intended to aid the user with data entry when the `MultiComboBox` has no value.\n   */\n  placeholder?: string;\n  /**\n   * Defines whether the `MultiComboBox` is read-only.\n   *\n   * **Note:** A read-only `MultiComboBox` is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the `MultiComboBox` is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the value of the `MultiComboBox`.\n   *\n   * **Note:** The property is updated upon typing.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the `MultiComboBox`.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the `MultiComboBox` items.\n   *\n   * Example:\n   *\n   * <pre>\n   *   <code>\n   *    &lt;MultiComboBox><br />\n   *    &nbsp;&nbsp;&lt;StandardListItem>Item #1&lt;/StandardListItem><br />\n   *    &nbsp;&nbsp;&lt;StandardListItem>Item #2&lt;/StandardListItem><br />\n   *    &lt;/MultiComboBox>\n   *  </code>\n   * </pre>\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the icon to be displayed in the `MultiComboBox`.\n   */\n  icon?: ReactNode | ReactNode[];\n  /**\n   * Defines the value state message that will be displayed as pop up under the `MultiComboBox`.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the `MultiComboBox` is in `Information`, `Warning` or `Error` value state.\n   */\n  valueStateMessage?: ReactNode | ReactNode[];\n  /**\n   * Fired when the input operation has finished by pressing Enter or on focusout.\n   */\n  onChange?: (event: CustomEvent) => void;\n  /**\n   * Fired when the value of the `MultiComboBox` changes at each keystroke.\n   */\n  onInput?: (event: CustomEvent) => void;\n  /**\n   * Fired when the dropdown is opened or closed.\n   */\n  onOpenChange?: (event: CustomEvent) => void;\n  /**\n   * Fired when selection is changed by user interaction in `SingleSelect` and `MultiSelect` modes.\n   */\n  onSelectionChange?: (event: CustomEvent<{ items: unknown[] }>) => void;\n}\n\n/**\n * The `MultiComboBox` component provides a list box with items and a text field allowing the user to either type a value directly into the control, or choose from the list of existing items. It is a drop-down list for selecting and filtering values, commonly used to enable users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow of available options. The select options in the list have checkboxes that permit multi-selection. Entered values are displayed as tokens.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/MultiComboBox\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst MultiComboBox: FC<MultiComboBoxPropTypes> = withWebComponent<MultiComboBoxPropTypes>(\n  'ui5-multi-combobox',\n  ['filter', 'placeholder', 'value', 'valueState'],\n  ['allowCustomValues', 'disabled', 'open', 'readonly', 'required'],\n  ['icon', 'valueStateMessage'],\n  ['change', 'input', 'open-change', 'selection-change']\n);\n\nMultiComboBox.displayName = 'MultiComboBox';\n\nMultiComboBox.defaultProps = {\n  allowCustomValues: false,\n  disabled: false,\n  filter: 'StartsWithPerTerm',\n  open: false,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\n\nexport { MultiComboBox };\n"],"mappings":";;;;AAoGA;AACA;AACA;AACA;AACA;IACMA,aAAyC,GAAGC,gBAAgB,CAChE,oBADgE,EAEhE,CAAC,QAAD,EAAW,aAAX,EAA0B,OAA1B,EAAmC,YAAnC,CAFgE,EAGhE,CAAC,mBAAD,EAAsB,UAAtB,EAAkC,MAAlC,EAA0C,UAA1C,EAAsD,UAAtD,CAHgE,EAIhE,CAAC,MAAD,EAAS,mBAAT,CAJgE,EAKhE,CAAC,QAAD,EAAW,OAAX,EAAoB,aAApB,EAAmC,kBAAnC,CALgE;AAQlED,aAAa,CAACE,WAAd,GAA4B,eAA5B;AAEAF,aAAa,CAACG,YAAd,GAA6B;EAC3BC,iBAAiB,EAAE,KADQ;EAE3BC,QAAQ,EAAE,KAFiB;EAG3BC,MAAM,EAAE,mBAHmB;EAI3BC,IAAI,EAAE,KAJqB;EAK3BC,QAAQ,EAAE,KALiB;EAM3BC,QAAQ,EAAE,KANiB;EAO3BC,UAAU,EAAEC,UAAU,CAACC;AAPI,CAA7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}