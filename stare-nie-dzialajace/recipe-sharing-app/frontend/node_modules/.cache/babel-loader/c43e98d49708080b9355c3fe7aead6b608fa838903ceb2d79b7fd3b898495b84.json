{"ast":null,"code":"import Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport SliderBase from \"./SliderBase.js\";\n\n// Template\nimport SliderTemplate from \"./generated/templates/SliderTemplate.lit.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-slider\",\n  languageAware: true,\n  managedSlots: true,\n  properties: /** @lends sap.ui.webcomponents.main.Slider.prototype */{\n    /**\n     * Current value of the slider\n     *\n     * @type {Float}\n     * @defaultvalue 0\n     * @public\n     */\n    value: {\n      type: Float,\n      defaultValue: 0\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The Slider component represents a numerical range and a handle (grip).\n * The purpose of the component is to enable visual selection of a value in\n * a continuous numerical range by moving an adjustable handle.\n *\n * <h3>Structure</h3>\n * The most important properties of the Slider are:\n * <ul>\n * <li>min - The minimum value of the slider range</li>\n * <li>max - The maximum value of the slider range</li>\n * <li>value - The current value of the slider</li>\n * <li>step - Determines the increments in which the slider will move</li>\n * <li>showTooltip - Determines if a tooltip should be displayed above the handle</li>\n * <li>showTickmarks - Displays a visual divider between the step values</li>\n * <li>labelInterval - Labels some or all of the tickmarks with their values.</li>\n * </ul>\n *\n * <h3>Usage</h3>\n * The most common usecase is to select values on a continuous numerical scale (e.g. temperature, volume, etc. ).\n *\n * <h3>Responsive Behavior</h3>\n * The <code>ui5-slider</code> component adjusts to the size of its parent container by recalculating and\n * resizing the width of the control. You can move the slider handle in several different ways:\n * <ul>\n * <li>Drag and drop to the desired value</li>\n * <li>Click/tap on the range bar to move the handle to that location</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Slider\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Slider\n * @extends SliderBase\n * @tagname ui5-slider\n * @since 1.0.0-rc.11\n * @public\n */\nclass Slider extends SliderBase {\n  static get metadata() {\n    return metadata;\n  }\n  static get template() {\n    return SliderTemplate;\n  }\n  constructor() {\n    super();\n    this._stateStorage.value = null;\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  /**\n   *\n   * Check if the previously saved state is outdated. That would mean\n   * either it is the initial rendering or that a property has been changed\n   * programatically - because the previous state is always updated in\n   * the interaction handlers.\n   *\n   * Normalize current properties, update the previously stored state.\n   * Update the visual UI representation of the Slider\n   *\n   */\n  onBeforeRendering() {\n    if (!this.isCurrentStateOutdated()) {\n      return;\n    }\n    this.notResized = true;\n    this.syncUIAndState(\"value\");\n    this._updateHandleAndProgress(this.value);\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   *\n   * @private\n   */\n  _onmousedown(event) {\n    // If step is 0 no interaction is available because there is no constant\n    // (equal for all user environments) quantitative representation of the value\n    if (this.disabled || this.step === 0) {\n      return;\n    }\n    const newValue = this.handleDownBase(event);\n    this._valueOnInteractionStart = this.value;\n\n    // Do not yet update the Slider if press is over a handle. It will be updated if the user drags the mouse.\n    if (!this._isHandlePressed(this.constructor.getPageXValueFromEvent(event))) {\n      this._updateHandleAndProgress(newValue);\n      this.updateValue(\"value\", newValue);\n    }\n  }\n\n  /**\n   * Called when the user moves the slider\n   *\n   * @private\n   */\n  _handleMove(event) {\n    event.preventDefault();\n\n    // If step is 0 no interaction is available because there is no constant\n    // (equal for all user environments) quantitative representation of the value\n    if (this.disabled || this._effectiveStep === 0) {\n      return;\n    }\n    const newValue = this.constructor.getValueFromInteraction(event, this._effectiveStep, this._effectiveMin, this._effectiveMax, this.getBoundingClientRect(), this.directionStart);\n    this._updateHandleAndProgress(newValue);\n    this.updateValue(\"value\", newValue);\n  }\n\n  /** Called when the user finish interacting with the slider\n   *\n   * @private\n   */\n  _handleUp(event) {\n    if (this._valueOnInteractionStart !== this.value) {\n      this.fireEvent(\"change\");\n    }\n    this.handleUpBase();\n    this._valueOnInteractionStart = null;\n  }\n\n  /** Determines if the press is over the handle\n   *\n   * @private\n   */\n  _isHandlePressed(clientX) {\n    const sliderHandle = this.shadowRoot.querySelector(\".ui5-slider-handle\");\n    const sliderHandleDomRect = sliderHandle.getBoundingClientRect();\n    return clientX >= sliderHandleDomRect.left && clientX <= sliderHandleDomRect.right;\n  }\n\n  /** Updates the UI representation of the progress bar and handle position\n   *\n   * @private\n   */\n  _updateHandleAndProgress(newValue) {\n    const max = this._effectiveMax;\n    const min = this._effectiveMin;\n\n    // The progress (completed) percentage of the slider.\n    this._progressPercentage = (newValue - min) / (max - min);\n    // How many pixels from the left end of the slider will be the placed the affected  by the user action handle\n    this._handlePositionFromStart = this._progressPercentage * 100;\n  }\n  get styles() {\n    return {\n      progress: {\n        \"transform\": `scaleX(${this._progressPercentage})`,\n        \"transform-origin\": `${this.directionStart} top`\n      },\n      handle: {\n        [this.directionStart]: `${this._handlePositionFromStart}%`\n      },\n      tickmarks: {\n        \"background\": `${this._tickmarks}`\n      },\n      label: {\n        \"width\": `${this._labelWidth}%`\n      },\n      labelContainer: {\n        \"width\": `100%`,\n        [this.directionStart]: `-${this._labelWidth / 2}%`\n      },\n      tooltip: {\n        \"visibility\": `${this._tooltipVisibility}`\n      }\n    };\n  }\n  get labelItems() {\n    return this._labelItems;\n  }\n  get tooltipValue() {\n    const stepPrecision = this.constructor._getDecimalPrecisionOfNumber(this._effectiveStep);\n    return this.value.toFixed(stepPrecision);\n  }\n  static async onDefine() {\n    await fetchI18nBundle(\"@ui5/webcomponents\");\n  }\n}\nSlider.define();\nexport default Slider;","map":{"version":3,"names":["Float","fetchI18nBundle","getI18nBundle","SliderBase","SliderTemplate","metadata","tag","languageAware","managedSlots","properties","value","type","defaultValue","Slider","template","constructor","_stateStorage","i18nBundle","onBeforeRendering","isCurrentStateOutdated","notResized","syncUIAndState","_updateHandleAndProgress","_onmousedown","event","disabled","step","newValue","handleDownBase","_valueOnInteractionStart","_isHandlePressed","getPageXValueFromEvent","updateValue","_handleMove","preventDefault","_effectiveStep","getValueFromInteraction","_effectiveMin","_effectiveMax","getBoundingClientRect","directionStart","_handleUp","fireEvent","handleUpBase","clientX","sliderHandle","shadowRoot","querySelector","sliderHandleDomRect","left","right","max","min","_progressPercentage","_handlePositionFromStart","styles","progress","handle","tickmarks","_tickmarks","label","_labelWidth","labelContainer","tooltip","_tooltipVisibility","labelItems","_labelItems","tooltipValue","stepPrecision","_getDecimalPrecisionOfNumber","toFixed","onDefine","define"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/Slider.js"],"sourcesContent":["import Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport SliderBase from \"./SliderBase.js\";\n\n// Template\nimport SliderTemplate from \"./generated/templates/SliderTemplate.lit.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-slider\",\n\tlanguageAware: true,\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.Slider.prototype */  {\n\t\t/**\n\t\t * Current value of the slider\n\t\t *\n\t\t * @type {Float}\n\t\t * @defaultvalue 0\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: Float,\n\t\t\tdefaultValue: 0,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The Slider component represents a numerical range and a handle (grip).\n * The purpose of the component is to enable visual selection of a value in\n * a continuous numerical range by moving an adjustable handle.\n *\n * <h3>Structure</h3>\n * The most important properties of the Slider are:\n * <ul>\n * <li>min - The minimum value of the slider range</li>\n * <li>max - The maximum value of the slider range</li>\n * <li>value - The current value of the slider</li>\n * <li>step - Determines the increments in which the slider will move</li>\n * <li>showTooltip - Determines if a tooltip should be displayed above the handle</li>\n * <li>showTickmarks - Displays a visual divider between the step values</li>\n * <li>labelInterval - Labels some or all of the tickmarks with their values.</li>\n * </ul>\n *\n * <h3>Usage</h3>\n * The most common usecase is to select values on a continuous numerical scale (e.g. temperature, volume, etc. ).\n *\n * <h3>Responsive Behavior</h3>\n * The <code>ui5-slider</code> component adjusts to the size of its parent container by recalculating and\n * resizing the width of the control. You can move the slider handle in several different ways:\n * <ul>\n * <li>Drag and drop to the desired value</li>\n * <li>Click/tap on the range bar to move the handle to that location</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Slider\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Slider\n * @extends SliderBase\n * @tagname ui5-slider\n * @since 1.0.0-rc.11\n * @public\n */\nclass Slider extends SliderBase {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get template() {\n\t\treturn SliderTemplate;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._stateStorage.value = null;\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\t/**\n\t *\n\t * Check if the previously saved state is outdated. That would mean\n\t * either it is the initial rendering or that a property has been changed\n\t * programatically - because the previous state is always updated in\n\t * the interaction handlers.\n\t *\n\t * Normalize current properties, update the previously stored state.\n\t * Update the visual UI representation of the Slider\n\t *\n\t */\n\tonBeforeRendering() {\n\t\tif (!this.isCurrentStateOutdated()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notResized = true;\n\t\tthis.syncUIAndState(\"value\");\n\t\tthis._updateHandleAndProgress(this.value);\n\t}\n\n\t/**\n\t * Called when the user starts interacting with the slider\n\t *\n\t * @private\n\t */\n\t_onmousedown(event) {\n\t\t// If step is 0 no interaction is available because there is no constant\n\t\t// (equal for all user environments) quantitative representation of the value\n\t\tif (this.disabled || this.step === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = this.handleDownBase(event);\n\t\tthis._valueOnInteractionStart = this.value;\n\n\t\t// Do not yet update the Slider if press is over a handle. It will be updated if the user drags the mouse.\n\t\tif (!this._isHandlePressed(this.constructor.getPageXValueFromEvent(event))) {\n\t\t\tthis._updateHandleAndProgress(newValue);\n\t\t\tthis.updateValue(\"value\", newValue);\n\t\t}\n\t}\n\n\t/**\n\t * Called when the user moves the slider\n\t *\n\t * @private\n\t */\n\t_handleMove(event) {\n\t\tevent.preventDefault();\n\n\t\t// If step is 0 no interaction is available because there is no constant\n\t\t// (equal for all user environments) quantitative representation of the value\n\t\tif (this.disabled || this._effectiveStep === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = this.constructor.getValueFromInteraction(event, this._effectiveStep, this._effectiveMin, this._effectiveMax, this.getBoundingClientRect(), this.directionStart);\n\n\t\tthis._updateHandleAndProgress(newValue);\n\t\tthis.updateValue(\"value\", newValue);\n\t}\n\n\t/** Called when the user finish interacting with the slider\n\t *\n\t * @private\n\t */\n\t_handleUp(event) {\n\t\tif (this._valueOnInteractionStart !== this.value) {\n\t\t\tthis.fireEvent(\"change\");\n\t\t}\n\n\t\tthis.handleUpBase();\n\t\tthis._valueOnInteractionStart = null;\n\t}\n\n\t/** Determines if the press is over the handle\n\t *\n\t * @private\n\t */\n\t_isHandlePressed(clientX) {\n\t\tconst sliderHandle = this.shadowRoot.querySelector(\".ui5-slider-handle\");\n\t\tconst sliderHandleDomRect = sliderHandle.getBoundingClientRect();\n\n\t\treturn clientX >= sliderHandleDomRect.left && clientX <= sliderHandleDomRect.right;\n\t}\n\n\n\t/** Updates the UI representation of the progress bar and handle position\n\t *\n\t * @private\n\t */\n\t_updateHandleAndProgress(newValue) {\n\t\tconst max = this._effectiveMax;\n\t\tconst min = this._effectiveMin;\n\n\t\t// The progress (completed) percentage of the slider.\n\t\tthis._progressPercentage = (newValue - min) / (max - min);\n\t\t// How many pixels from the left end of the slider will be the placed the affected  by the user action handle\n\t\tthis._handlePositionFromStart = this._progressPercentage * 100;\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tprogress: {\n\t\t\t\t\"transform\": `scaleX(${this._progressPercentage})`,\n\t\t\t\t\"transform-origin\": `${this.directionStart} top`,\n\t\t\t},\n\t\t\thandle: {\n\t\t\t\t[this.directionStart]: `${this._handlePositionFromStart}%`,\n\t\t\t},\n\t\t\ttickmarks: {\n\t\t\t\t\"background\": `${this._tickmarks}`,\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\t\"width\": `${this._labelWidth}%`,\n\t\t\t},\n\t\t\tlabelContainer: {\n\t\t\t\t\"width\": `100%`,\n\t\t\t\t[this.directionStart]: `-${this._labelWidth / 2}%`,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\t\"visibility\": `${this._tooltipVisibility}`,\n\t\t\t},\n\t\t};\n\t}\n\n\tget labelItems() {\n\t\treturn this._labelItems;\n\t}\n\n\tget tooltipValue() {\n\t\tconst stepPrecision = this.constructor._getDecimalPrecisionOfNumber(this._effectiveStep);\n\t\treturn this.value.toFixed(stepPrecision);\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents\");\n\t}\n}\n\nSlider.define();\n\nexport default Slider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}