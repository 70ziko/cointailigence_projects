{"ast":null,"code":"import { registerI18nBundle, fetchI18nBundle, getI18nBundleData } from \"./asset-registries/i18n.js\";\nimport formatMessage from \"./util/formatMessage.js\";\nconst I18nBundleInstances = new Map();\n\n/**\n * @class\n * @public\n */\nclass I18nBundle {\n  constructor(packageName) {\n    this.packageName = packageName;\n  }\n\n  /**\n   * Returns a text in the currently loaded language\n   *\n   * @param {Object|String} textObj key/defaultText pair or just the key\n   * @param params Values for the placeholders\n   * @returns {*}\n   */\n  getText(textObj, ...params) {\n    if (typeof textObj === \"string\") {\n      textObj = {\n        key: textObj,\n        defaultText: textObj\n      };\n    }\n    if (!textObj || !textObj.key) {\n      return \"\";\n    }\n    const bundle = getI18nBundleData(this.packageName);\n    const messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : textObj.defaultText || textObj.key;\n    return formatMessage(messageText, params);\n  }\n}\nconst getI18nBundle = packageName => {\n  if (I18nBundleInstances.has(packageName)) {\n    return I18nBundleInstances.get(packageName);\n  }\n  const i18nBundle = new I18nBundle(packageName);\n  I18nBundleInstances.set(packageName, i18nBundle);\n  return i18nBundle;\n};\nexport { registerI18nBundle, fetchI18nBundle, getI18nBundle };","map":{"version":3,"names":["registerI18nBundle","fetchI18nBundle","getI18nBundleData","formatMessage","I18nBundleInstances","Map","I18nBundle","constructor","packageName","getText","textObj","params","key","defaultText","bundle","messageText","getI18nBundle","has","get","i18nBundle","set"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-base/dist/i18nBundle.js"],"sourcesContent":["import { registerI18nBundle, fetchI18nBundle, getI18nBundleData } from \"./asset-registries/i18n.js\";\nimport formatMessage from \"./util/formatMessage.js\";\n\nconst I18nBundleInstances = new Map();\n\n/**\n * @class\n * @public\n */\nclass I18nBundle {\n\tconstructor(packageName) {\n\t\tthis.packageName = packageName;\n\t}\n\n\t/**\n\t * Returns a text in the currently loaded language\n\t *\n\t * @param {Object|String} textObj key/defaultText pair or just the key\n\t * @param params Values for the placeholders\n\t * @returns {*}\n\t */\n\tgetText(textObj, ...params) {\n\t\tif (typeof textObj === \"string\") {\n\t\t\ttextObj = { key: textObj, defaultText: textObj };\n\t\t}\n\n\t\tif (!textObj || !textObj.key) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst bundle = getI18nBundleData(this.packageName);\n\t\tconst messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : (textObj.defaultText || textObj.key);\n\n\t\treturn formatMessage(messageText, params);\n\t}\n}\n\nconst getI18nBundle = packageName => {\n\tif (I18nBundleInstances.has(packageName)) {\n\t\treturn I18nBundleInstances.get(packageName);\n\t}\n\n\tconst i18nBundle = new I18nBundle(packageName);\n\tI18nBundleInstances.set(packageName, i18nBundle);\n\treturn i18nBundle;\n};\n\nexport {\n\tregisterI18nBundle,\n\tfetchI18nBundle,\n\tgetI18nBundle,\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,4BAA4B;AACnG,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,MAAMC,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAErC;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EAChBC,WAAWA,CAACC,WAAW,EAAE;IACxB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAC/B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,OAAOA,CAACC,OAAO,EAAE,GAAGC,MAAM,EAAE;IAC3B,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;MAChCA,OAAO,GAAG;QAAEE,GAAG,EAAEF,OAAO;QAAEG,WAAW,EAAEH;MAAQ,CAAC;IACjD;IAEA,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACE,GAAG,EAAE;MAC7B,OAAO,EAAE;IACV;IAEA,MAAME,MAAM,GAAGZ,iBAAiB,CAAC,IAAI,CAACM,WAAW,CAAC;IAClD,MAAMO,WAAW,GAAGD,MAAM,IAAIA,MAAM,CAACJ,OAAO,CAACE,GAAG,CAAC,GAAGE,MAAM,CAACJ,OAAO,CAACE,GAAG,CAAC,GAAIF,OAAO,CAACG,WAAW,IAAIH,OAAO,CAACE,GAAI;IAE9G,OAAOT,aAAa,CAACY,WAAW,EAAEJ,MAAM,CAAC;EAC1C;AACD;AAEA,MAAMK,aAAa,GAAGR,WAAW,IAAI;EACpC,IAAIJ,mBAAmB,CAACa,GAAG,CAACT,WAAW,CAAC,EAAE;IACzC,OAAOJ,mBAAmB,CAACc,GAAG,CAACV,WAAW,CAAC;EAC5C;EAEA,MAAMW,UAAU,GAAG,IAAIb,UAAU,CAACE,WAAW,CAAC;EAC9CJ,mBAAmB,CAACgB,GAAG,CAACZ,WAAW,EAAEW,UAAU,CAAC;EAChD,OAAOA,UAAU;AAClB,CAAC;AAED,SACCnB,kBAAkB,EAClBC,eAAe,EACfe,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}