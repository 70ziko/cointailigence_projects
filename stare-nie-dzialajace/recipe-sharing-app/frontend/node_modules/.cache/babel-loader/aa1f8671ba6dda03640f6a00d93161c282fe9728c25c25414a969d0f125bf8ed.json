{"ast":null,"code":"import { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/Card';\n\n/**\n * The `Card` is a component that represents information in the form of a tile with separate header and content areas. The content area of a `Card` can be arbitrary HTML content. The header can be used through several properties, such as: `heading`, `subheading`, `status` and two slots: `avatar` and `action`.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/Card\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nvar Card = withWebComponent('ui5-card', ['heading', 'status', 'subheading'], ['headerInteractive'], ['action', 'avatar'], ['header-click']);\nCard.displayName = 'Card';\nCard.defaultProps = {\n  headerInteractive: false\n};\nexport { Card };","map":{"version":3,"names":["Card","withWebComponent","displayName","defaultProps","headerInteractive"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/webComponents/Card/index.tsx"],"sourcesContent":["import { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/Card';\nimport { FC, ReactNode } from 'react';\n\nexport interface CardPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Defines if the `Card` header would be interactive, e.g gets hover effect, gets focused and `headerPress` event is fired, when it is pressed.\n   */\n  headerInteractive?: boolean;\n  /**\n   * Defines the title displayed in the `Card` header.\n   */\n  heading?: string;\n  /**\n   * Defines the status displayed in the `Card` header.\n   *\n   * **Note:** If the `action` slot is set, the `status` will not be displayed, you can either have `action`, or `status`.\n   */\n  status?: string;\n  /**\n   * Defines the subheading displayed in the `Card` header.\n   */\n  subheading?: string;\n  /**\n   * Defines an action, displayed in the right most part of the header.\n   *\n   * **Note:** If set, the `status` text will not be displayed, you can either have `action`, or `status`.\n   */\n  action?: ReactNode | ReactNode[];\n  /**\n   * Defines the visual representation in the header of the card. Supports images and icons.\n   *\n   * **Note:** SAP-icons font provides numerous options. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  avatar?: ReactNode | ReactNode[];\n  /**\n   * Defines the content of the `Card`.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the `Card` header is activated by mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event would be fired only if the `headerInteractive` property is set to true.\n   */\n  onHeaderClick?: (event: CustomEvent) => void;\n}\n\n/**\n * The `Card` is a component that represents information in the form of a tile with separate header and content areas. The content area of a `Card` can be arbitrary HTML content. The header can be used through several properties, such as: `heading`, `subheading`, `status` and two slots: `avatar` and `action`.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/Card\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst Card: FC<CardPropTypes> = withWebComponent<CardPropTypes>(\n  'ui5-card',\n  ['heading', 'status', 'subheading'],\n  ['headerInteractive'],\n  ['action', 'avatar'],\n  ['header-click']\n);\n\nCard.displayName = 'Card';\n\nCard.defaultProps = {\n  headerInteractive: false\n};\n\nexport { Card };\n"],"mappings":";;;AA+CA;AACA;AACA;AACA;AACA;IACMA,IAAuB,GAAGC,gBAAgB,CAC9C,UAD8C,EAE9C,CAAC,SAAD,EAAY,QAAZ,EAAsB,YAAtB,CAF8C,EAG9C,CAAC,mBAAD,CAH8C,EAI9C,CAAC,QAAD,EAAW,QAAX,CAJ8C,EAK9C,CAAC,cAAD,CAL8C;AAQhDD,IAAI,CAACE,WAAL,GAAmB,MAAnB;AAEAF,IAAI,CAACG,YAAL,GAAoB;EAClBC,iBAAiB,EAAE;AADD,CAApB"},"metadata":{},"sourceType":"module","externalDependencies":[]}