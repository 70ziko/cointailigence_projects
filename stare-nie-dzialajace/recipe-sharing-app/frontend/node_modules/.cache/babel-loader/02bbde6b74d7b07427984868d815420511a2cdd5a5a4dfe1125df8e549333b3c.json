{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\n\n// Texts\nimport { WIZARD_NAV_STEP_DEFAULT_HEADING, WIZARD_NAV_ARIA_ROLE_DESCRIPTION } from \"./generated/i18n/i18n-defaults.js\";\n\n// Step in header and content\nimport WizardTab from \"./WizardTab.js\";\nimport WizardStep from \"./WizardStep.js\";\n\n// Template and Styles\nimport WizardTemplate from \"./generated/templates/WizardTemplate.lit.js\";\nimport WizardCss from \"./generated/themes/Wizard.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-wizard\",\n  managedSlots: true,\n  properties: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */{\n    /**\n     * Defines the aria-label text of the <code>ui5-wizard</code>.\n     *\n     * @type {String}\n     * @defaultvalue undefined\n     * @private\n     */\n    ariaLabel: {\n      type: String,\n      defaultValue: undefined\n    },\n    /**\n     * Defines the width of the <code>ui5-wizard</code>.\n     * @private\n     */\n    width: {\n      type: Float\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */{\n    /**\n     * Defines the steps.\n     * <br><br>\n     * <b>Note:</b> Use the available <code>ui5-wizard-step</code> component.\n     *\n     * @type {HTMLElement[]}\n     * @public\n     * @slot\n     */\n    \"default\": {\n      propertyName: \"steps\",\n      type: HTMLElement,\n      \"individualSlots\": true,\n      invalidateOnChildChange: true\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */{\n    /**\n     * Fired when the step selection is changed by user interaction - either with scrolling,\n     * or by clicking on the steps within the component header.\n     *\n     * @event sap.ui.webcomponents.fiori.Wizard#selection-change\n     * @param {HTMLElement} selectedStep the newly selected step\n     * @param {HTMLElement} previouslySelectedStep the previously selected step\n     * @public\n     */\n    \"selection-change\": {\n      detail: {\n        selectedStep: {\n          type: HTMLElement\n        },\n        previouslySelectedStep: {\n          type: HTMLElement\n        }\n      }\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-wizard</code> helps users complete a complex task by dividing it into sections and guiding the user through it.\n * It has two main areas - a navigation area at the top showing the step sequence and a content area below it.\n *\n * <h3>Structure</h3>\n * <h4>Navigation area</h4>\n * The top most area of the <code>ui5-wizard</code> is occupied by the navigation area.\n * It shows the sequence of steps, where the recommended number of steps is between 3 and 8 steps.\n * <ul>\n * <li> Steps can have different visual representations - numbers or icons.\n * <li> Steps might have labels for better readability - heading and subheding.</li>\n * <li> Steps are defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code></li>\n * </ul>\n *\n * <b>Note:</b> If no selected step is defined, the first step will be auto selected.\n * <br>\n * <b>Note:</b> If multiple selected steps are defined, the last step will be selected.\n *\n * <h4>Content</h4>\n * The content occupies the main part of the page. It can hold any type of HTML elements.\n * It's defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code>.\n *\n * <h3>Scrolling</h3>\n * The component handles user scrolling by selecting the closest step, based on the current scroll position\n * and scrolls to particular place, when the user clicks on the step within the navigation area.\n * <br><br>\n *\n * <b>Important:</b> In order the component's scrolling behaviour to work, it has to be limited from the outside parent element in terms of height.\n * The component or its parent has to be given percentage or absolute height. Otherwise, the component will be scrolled out with the entire page.\n * <br><br>\n * <b>For example:</b>\n * <br><br>\n * <code>&lt;ui5-dialog style=\"height: 80%\"&gt;<br></code>\n * <code>&#9;&lt;ui5-wizard&gt;&lt;/ui5-wizard&gt;<br></code>\n * <code>&lt;/ui5-dialog&gt;</code>\n *\n * <h4>Moving to next step</h4>\n * The <code>ui5-wizard-step</code> provides the necessary API and it's up to the user of the component to use it to move to the next step.\n * You have to set its <code>selected</code> property (and remove the <code>disabled</code> one if set) to <code>true</code>.\n * And, the <code>ui5-wizard</code> will automatically scroll to the content of the newly selected step.\n * <br><br>\n *\n * The Fiori 3 guidelines recommends having a \"nextStep\" button in the content area.\n * You can place a button, or any other type of element to trigger step change, inside the <code>ui5-wizard-step</code>,\n * and show/hide it when certain fields are filled or user defined criteria is met.\n *\n * <h3>Usage</h3>\n * <h4>When to use:</h4>\n * When the user has to accomplish a long set of tasks.\n * <h4>When not to use:</h4>\n * When the task has less than 3 steps.\n *\n * <h3>Responsive Behavior</h3>\n * On small widths the step's heading, subheading and separators in the navigation area\n * will start truncate and shrink and from particular point they will hide to free as much space as possible.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import @ui5/webcomponents-fiori/dist/Wizard.js\";</code> (includes <ui5-wizard-step>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.Wizard\n * @extends UI5Element\n * @tagname ui5-wizard\n * @since 1.0.0-rc.10\n * @appenddocs WizardStep\n * @public\n */\nclass Wizard extends UI5Element {\n  constructor() {\n    super();\n\n    // Stores the scroll offsets of the steps,\n    // e.g. the steps' starting point.\n    this.stepScrollOffsets = [];\n\n    // Keeps track of the selected step index.\n    this.selectedStepIndex = 0;\n\n    // Indicates that selection will be changed\n    // due to user click.\n    this.selectionRequestedByClick = false;\n\n    // Indicates that selection will be changed\n    // due to user scroll.\n    this.selectionRequestedByScroll = false;\n    this._itemNavigation = new ItemNavigation(this, {\n      navigationMode: NavigationMode.Horizontal,\n      getItemsCallback: () => this.enabledStepsInHeaderDOM\n    });\n    this._onResize = this.onResize.bind(this);\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n  }\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get styles() {\n    return WizardCss;\n  }\n  static get template() {\n    return WizardTemplate;\n  }\n  static get dependencies() {\n    return [WizardTab, WizardStep];\n  }\n  static async onDefine() {\n    await fetchI18nBundle(\"@ui5/webcomponents-fiori\");\n  }\n  static get PHONE_BREAKPOINT() {\n    return 599;\n  }\n  static get SCROLL_DEBOUNCE_RATE() {\n    return 25;\n  }\n  static get CONTENT_TOP_OFFSET() {\n    return 80;\n  }\n  onEnterDOM() {\n    ResizeHandler.register(this, this._onResize);\n  }\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._onResize);\n  }\n  onBeforeRendering() {\n    this.syncSelection();\n  }\n  onAfterRendering() {\n    this.storeStepScrollOffsets();\n    this.scrollToSelectedStep();\n  }\n\n  /**\n   * Normalizes the step selection as follows:\n   * (1) If there is no selected step - the first step is going to be selected.\n   * (2) If the selected steps are more than one - the last step is going to be selected.\n   * (3) If the selected step is also disabled - log a warning.\n   * @private\n   */\n  syncSelection() {\n    if (this.stepsCount === 0) {\n      return;\n    }\n\n    // If no selected steps -> select the first step.\n    if (this.selectedStepsCount === 0) {\n      this.selectFirstStep();\n      console.warn(\"Selecting the first step: no selected step is defined.\"); // eslint-disable-line\n    }\n\n    // If there are multiple selected steps -> keep the last selected one.\n    if (this.selectedStepsCount > 1) {\n      this.selectLastSelectedStep();\n      console.warn(`Selecting the last step defined as selected: multiple selected steps are defined.`); // eslint-disable-line\n    }\n\n    // If the selected step is defined as disabled - log warning.\n    if (this.selectedStep && this.selectedStep.disabled) {\n      console.warn(\"The selected step is disabled: you need to enable it in order to interact with the step.\"); // eslint-disable-line\n    }\n\n    // Place for improvement: If the selected step is not the first, enable all the prior steps\n    this.selectedStepIndex = this.getSelectedStepIndex();\n  }\n\n  /**\n   * Selects the first step.\n   * @private\n   */\n  selectFirstStep() {\n    this.deselectAll();\n    this.slottedSteps[0].selected = true;\n    this.slottedSteps[0].disabled = false;\n  }\n\n  /**\n   * Selects the last step from multiple selected ones.\n   * @private\n   */\n  selectLastSelectedStep() {\n    const lastSelectedStep = this.lastSelectedStep;\n    if (lastSelectedStep) {\n      this.deselectAll();\n      lastSelectedStep.selected = true;\n      lastSelectedStep.disabled = false;\n    }\n  }\n\n  /**\n   * Deselects all steps.\n   * @private\n   */\n  deselectAll() {\n    this.slottedSteps.forEach(step => {\n      step.selected = false;\n    });\n  }\n\n  /**\n   * Stores the scroll offsets of the steps,\n   * e.g. the steps' starting point.\n   *\n   * <b>Note:</b> the disabled ones has negative offsets.\n   * @private\n   */\n  storeStepScrollOffsets() {\n    this.stepScrollOffsets = this.slottedSteps.map(step => {\n      const contentItem = this.getStepWrapperByRefId(step._id);\n      return contentItem.offsetTop + contentItem.offsetHeight - Wizard.CONTENT_TOP_OFFSET;\n    });\n  }\n\n  /**\n   * Handles user click on steps' tabs within the header.\n   * <b>Note:</b> the handler is bound in the template.\n   * @param {Event} event\n   * @private\n   */\n  onSelectionChangeRequested(event) {\n    this.selectionRequestedByClick = true;\n    this.changeSelectionByStepClick(event.target);\n  }\n\n  /**\n   * Handles user scrolling with debouncing.\n   * <b>Note:</b> the handler is bound in the template.\n   * @param {Event} event\n   * @private\n   */\n  onScroll(event) {\n    if (this.selectionRequestedByClick) {\n      this.selectionRequestedByClick = false;\n      return;\n    }\n    this.debounce(this.changeSelectionByScroll.bind(this, event.target.scrollTop), Wizard.SCROLL_DEBOUNCE_RATE);\n  }\n\n  /**\n   * Handles when a step in the header is focused in order to update the <code>ItemNavigation</code>.\n   * <b>Note:</b> the handler is bound in the template.\n   * @param {Event} event\n   * @private\n   */\n  onStepInHeaderFocused(event) {\n    this._itemNavigation.update(event.target);\n  }\n\n  /**\n   * Handles component resize  to:\n   * (1) trigger scroll scrollOffset reCalculation and syncSelection\n   * (2) hide steps' separators and texts to free more space on small sizes\n   * @private\n   */\n  onResize() {\n    this.width = this.getBoundingClientRect().width;\n  }\n\n  /**\n   * Called upon <code>onScroll</code>.\n   * Selects the closest step, based on the user scroll position.\n   * @param {Integer} scrollPos the current scroll position\n   * @private\n   */\n  changeSelectionByScroll(scrollPos) {\n    const newlySelectedIndex = this.getClosestStepIndexByScrollPos(scrollPos);\n\n    // Skip if already selected - stop.\n    if (this.selectedStepIndex === newlySelectedIndex) {\n      return;\n    }\n\n    // If the calculated index is in range,\n    // change selection and fire \"selection-change\".\n    if (newlySelectedIndex >= 0 && newlySelectedIndex <= this.stepsCount - 1) {\n      const stepToSelect = this.slottedSteps[newlySelectedIndex];\n      this.switchSelectionFromOldToNewStep(this.selectedStep, stepToSelect, newlySelectedIndex);\n      this.selectionRequestedByScroll = true;\n    }\n  }\n\n  /**\n   * Called upon <code>onSelectionChangeRequested</code>.\n   * Selects the external step (ui5-wizard-step),\n   * based on the clicked step in the header (ui5-wizard-tab).\n   * @param {HTMLElement} stepInHeader the step equivalent in the header\n   * @private\n   */\n  changeSelectionByStepClick(stepInHeader) {\n    const stepRefId = stepInHeader.getAttribute(\"data-ui5-content-ref-id\");\n    const selectedStep = this.selectedStep;\n    const stepToSelect = this.getStepByRefId(stepRefId);\n\n    // If the currently selected (active) step is clicked,\n    // just scroll to its starting point and stop.\n    if (selectedStep === stepToSelect) {\n      this.scrollToContentItem(this.selectedStepIndex);\n      return;\n    }\n\n    // Change selection and fire \"selection-change\".\n    const newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);\n    this.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex);\n  }\n  get _stepsInHeader() {\n    return this.getStepsInfo();\n  }\n  get _steps() {\n    const lastEnabledStepIndex = this.getLastEnabledStepIndex();\n    return this.steps.map((step, idx) => {\n      step.stretch = idx === lastEnabledStepIndex;\n      return step;\n    });\n  }\n  get stepsCount() {\n    return this.slottedSteps.length;\n  }\n  get selectedStep() {\n    if (this.selectedStepsCount) {\n      return this.selectedSteps[0];\n    }\n    return null;\n  }\n  get lastSelectedStep() {\n    if (this.selectedStepsCount) {\n      return this.selectedSteps[this.selectedStepsCount - 1];\n    }\n    return null;\n  }\n  get selectedSteps() {\n    return this.slottedSteps.filter(step => step.selected);\n  }\n  get enabledSteps() {\n    return this.slottedSteps.filter(step => !step.disabled);\n  }\n  get selectedStepsCount() {\n    return this.selectedSteps.length;\n  }\n  get slottedSteps() {\n    return this.getSlottedNodes(\"steps\");\n  }\n  get contentDOM() {\n    return this.shadowRoot.querySelector(`.ui5-wiz-content`);\n  }\n  get stepsInHeaderDOM() {\n    return Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n  }\n  get enabledStepsInHeaderDOM() {\n    return this.stepsInHeaderDOM.filter(step => !step.disabled);\n  }\n  get phoneMode() {\n    if (isPhone()) {\n      return true;\n    }\n    return this.width <= Wizard.PHONE_BREAKPOINT;\n  }\n  get navAriaRoleDescription() {\n    return this.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n  }\n  get navStepDefaultHeading() {\n    return this.i18nBundle.getText(WIZARD_NAV_STEP_DEFAULT_HEADING);\n  }\n  get ariaLabelText() {\n    return this.ariaLabel || this.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n  }\n\n  /**\n   * Returns an array of data objects, based on the user defined steps\n   * to later build the steps (tabs) within the header.\n   * @returns {Array<Object>}\n   * @private\n   */\n  getStepsInfo() {\n    const lastEnabledStepIndex = this.getLastEnabledStepIndex();\n    const stepsCount = this.stepsCount;\n    return this.steps.map((step, idx) => {\n      const pos = idx + 1;\n\n      // Hide separator if:\n      // (1) its size is under the phone breakpoint\n      // (2) it's the last step and it's not a branching one\n      const hideSeparator = this.phoneMode || idx === stepsCount - 1 && !step.branching;\n\n      // Calculate the step's aria-roledectioption: \"1. heading\" or \"Step 1\".\n      const roleDescription = step.heading ? `${pos}. ${step.heading}` : `${this.navStepDefaultHeading} ${pos}`;\n      return {\n        icon: step.icon,\n        heading: this.phoneMode ? \"\" : step.heading,\n        subheading: this.phoneMode ? \"\" : step.subheading,\n        number: pos,\n        selected: step.selected,\n        disabled: step.disabled,\n        hideSeparator,\n        activeSeparator: idx < lastEnabledStepIndex && !step.disabled,\n        branchingSeparator: step.branching,\n        pos,\n        size: stepsCount,\n        roleDescription,\n        ariaLabel: getEffectiveAriaLabelText(step),\n        refStepId: step._id,\n        tabIndex: this.selectedStepIndex === idx ? \"0\" : \"-1\"\n      };\n    });\n  }\n\n  /**\n   * Returns the index of the selected step.\n   * @returns {Integer}\n   * @private\n   */\n  getSelectedStepIndex() {\n    if (this.selectedStep) {\n      return this.slottedSteps.indexOf(this.selectedStep);\n    }\n    return 0;\n  }\n\n  /**\n   * Returns the index of the last enabled step.\n   * @returns {Integer}\n   * @private\n   */\n  getLastEnabledStepIndex() {\n    let lastEnabledStepIndex = 0;\n    this.slottedSteps.forEach((step, idx) => {\n      if (!step.disabled) {\n        lastEnabledStepIndex = idx;\n      }\n    });\n    return lastEnabledStepIndex;\n  }\n  getStepByRefId(refId) {\n    return this.slottedSteps.find(step => step._id === refId);\n  }\n  getStepWrapperByRefId(refId) {\n    return this.shadowRoot.querySelector(`[data-ui5-content-item-ref-id=${refId}]`);\n  }\n\n  /**\n   * Scrolls to the content of the selected step\n   * and it is used in <code>onAfteRendering</cod>.\n   * @private\n   */\n  scrollToSelectedStep() {\n    if (!this.selectionRequestedByScroll) {\n      this.scrollToContentItem(this.selectedStepIndex);\n    }\n    this.selectionRequestedByScroll = false;\n  }\n\n  /**\n   * Scrolls to the content item within the <code>ui5-wizard</code> shadowDOM\n   * by given step index.\n   *\n   * @private\n   * @param {Integer} stepIndex the index of a step\n   */\n  scrollToContentItem(stepIndex) {\n    this.contentDOM.scrollTop = this.getClosestScrollPosByStepIndex(stepIndex);\n  }\n\n  /**\n   * Returns to closest scroll position for the given step index.\n   * by given step index.\n   *\n   * @private\n   * @param {Integer} stepIndex the index of a step\n   */\n  getClosestScrollPosByStepIndex(stepIndex) {\n    if (stepIndex === 0) {\n      return 0;\n    }\n\n    // It's possible to have [enabled - 0, disabled - 1, enabled - 2, disabled - 3] step definition and similar.\n    // Consider selection of the third step at index 2, the wizard should scroll where the previous step ends,\n    // but in this case the 2nd step is disabled, so we have to fallback to the first possible step.\n    for (let closestStepIndex = stepIndex - 1; closestStepIndex >= 0; closestStepIndex--) {\n      if (this.stepScrollOffsets[closestStepIndex] > 0) {\n        return this.stepScrollOffsets[closestStepIndex];\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Returns the closest step index by given scroll position.\n   *\n   * @param {Integer} scrollPos scroll position\n   * @returns {Integer} closestStepIndex the closest step index\n   * @private\n   */\n  getClosestStepIndexByScrollPos(scrollPos) {\n    for (let closestStepIndex = 0; closestStepIndex <= this.stepScrollOffsets.length - 1; closestStepIndex++) {\n      const stepOffset = this.stepScrollOffsets[closestStepIndex];\n      if (stepOffset > 0 && scrollPos < stepOffset) {\n        return closestStepIndex;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Switches the selection from the old step to the newly selected step.\n   *\n   * @param {HTMLElement} selectedStep the old step\n   * @param {HTMLElement} stepToSelect the step to be selected\n   * @param {Integer} selectedStepIndex the index of the newly selected step\n   * @private\n   */\n  switchSelectionFromOldToNewStep(selectedStep, stepToSelect, selectedStepIndex) {\n    if (selectedStep && stepToSelect) {\n      selectedStep.selected = false;\n      stepToSelect.selected = true;\n      this.fireEvent(\"selection-change\", {\n        selectedStep: stepToSelect,\n        previouslySelectedStep: selectedStep\n      });\n      this.selectedStepIndex = selectedStepIndex;\n    }\n  }\n\n  /**\n   * Delays function execution by given threshold - used to delay the scroll event handling.\n   * @private\n   */\n  debounce(fn, delay) {\n    clearTimeout(this.debounceInterval);\n    this.debounceInterval = setTimeout(() => {\n      this.debounceInterval = null;\n      fn();\n    }, delay);\n  }\n\n  /**\n   * Sorter method for sorting an array in ascending order.\n   * @private\n   */\n  sortAscending(a, b) {\n    if (a < b) {\n      return -1;\n    }\n    if (a > b) {\n      return 1;\n    }\n    return 0;\n  }\n}\nWizard.define();\nexport default Wizard;","map":{"version":3,"names":["UI5Element","litRender","fetchI18nBundle","getI18nBundle","getEffectiveAriaLabelText","ItemNavigation","NavigationMode","Float","ResizeHandler","isPhone","WIZARD_NAV_STEP_DEFAULT_HEADING","WIZARD_NAV_ARIA_ROLE_DESCRIPTION","WizardTab","WizardStep","WizardTemplate","WizardCss","metadata","tag","managedSlots","properties","ariaLabel","type","String","defaultValue","undefined","width","slots","propertyName","HTMLElement","invalidateOnChildChange","events","detail","selectedStep","previouslySelectedStep","Wizard","constructor","stepScrollOffsets","selectedStepIndex","selectionRequestedByClick","selectionRequestedByScroll","_itemNavigation","navigationMode","Horizontal","getItemsCallback","enabledStepsInHeaderDOM","_onResize","onResize","bind","i18nBundle","render","styles","template","dependencies","onDefine","PHONE_BREAKPOINT","SCROLL_DEBOUNCE_RATE","CONTENT_TOP_OFFSET","onEnterDOM","register","onExitDOM","deregister","onBeforeRendering","syncSelection","onAfterRendering","storeStepScrollOffsets","scrollToSelectedStep","stepsCount","selectedStepsCount","selectFirstStep","console","warn","selectLastSelectedStep","disabled","getSelectedStepIndex","deselectAll","slottedSteps","selected","lastSelectedStep","forEach","step","map","contentItem","getStepWrapperByRefId","_id","offsetTop","offsetHeight","onSelectionChangeRequested","event","changeSelectionByStepClick","target","onScroll","debounce","changeSelectionByScroll","scrollTop","onStepInHeaderFocused","update","getBoundingClientRect","scrollPos","newlySelectedIndex","getClosestStepIndexByScrollPos","stepToSelect","switchSelectionFromOldToNewStep","stepInHeader","stepRefId","getAttribute","getStepByRefId","scrollToContentItem","indexOf","_stepsInHeader","getStepsInfo","_steps","lastEnabledStepIndex","getLastEnabledStepIndex","steps","idx","stretch","length","selectedSteps","filter","enabledSteps","getSlottedNodes","contentDOM","shadowRoot","querySelector","stepsInHeaderDOM","Array","from","querySelectorAll","phoneMode","navAriaRoleDescription","getText","navStepDefaultHeading","ariaLabelText","pos","hideSeparator","branching","roleDescription","heading","icon","subheading","number","activeSeparator","branchingSeparator","size","refStepId","tabIndex","refId","find","stepIndex","getClosestScrollPosByStepIndex","closestStepIndex","stepOffset","fireEvent","fn","delay","clearTimeout","debounceInterval","setTimeout","sortAscending","a","b","define"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-fiori/dist/Wizard.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getEffectiveAriaLabelText } from \"@ui5/webcomponents-base/dist/util/AriaLabelHelper.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport NavigationMode from \"@ui5/webcomponents-base/dist/types/NavigationMode.js\";\nimport Float from \"@ui5/webcomponents-base/dist/types/Float.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\n\n// Texts\nimport {\n\tWIZARD_NAV_STEP_DEFAULT_HEADING,\n\tWIZARD_NAV_ARIA_ROLE_DESCRIPTION,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Step in header and content\nimport WizardTab from \"./WizardTab.js\";\nimport WizardStep from \"./WizardStep.js\";\n\n// Template and Styles\nimport WizardTemplate from \"./generated/templates/WizardTemplate.lit.js\";\nimport WizardCss from \"./generated/themes/Wizard.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-wizard\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */ {\n\t\t/**\n\t\t * Defines the aria-label text of the <code>ui5-wizard</code>.\n\t\t *\n\t\t * @type {String}\n\t\t * @defaultvalue undefined\n\t\t * @private\n\t\t */\n\t\tariaLabel: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: undefined,\n\t\t},\n\n\t\t/**\n\t\t * Defines the width of the <code>ui5-wizard</code>.\n\t\t * @private\n\t\t */\n\t\twidth: {\n\t\t\ttype: Float,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */ {\n\t\t/**\n\t\t * Defines the steps.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use the available <code>ui5-wizard-step</code> component.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @public\n\t\t * @slot\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"steps\",\n\t\t\ttype: HTMLElement,\n\t\t\t\"individualSlots\": true,\n\t\t\tinvalidateOnChildChange: true,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.fiori.Wizard.prototype */ {\n\t\t/**\n\t\t * Fired when the step selection is changed by user interaction - either with scrolling,\n\t\t * or by clicking on the steps within the component header.\n\t\t *\n\t\t * @event sap.ui.webcomponents.fiori.Wizard#selection-change\n\t\t * @param {HTMLElement} selectedStep the newly selected step\n\t\t * @param {HTMLElement} previouslySelectedStep the previously selected step\n\t\t * @public\n\t\t */\n\t\t\"selection-change\": {\n\t\t\tdetail: {\n\t\t\t\tselectedStep: { type: HTMLElement },\n\t\t\t\tpreviouslySelectedStep: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-wizard</code> helps users complete a complex task by dividing it into sections and guiding the user through it.\n * It has two main areas - a navigation area at the top showing the step sequence and a content area below it.\n *\n * <h3>Structure</h3>\n * <h4>Navigation area</h4>\n * The top most area of the <code>ui5-wizard</code> is occupied by the navigation area.\n * It shows the sequence of steps, where the recommended number of steps is between 3 and 8 steps.\n * <ul>\n * <li> Steps can have different visual representations - numbers or icons.\n * <li> Steps might have labels for better readability - heading and subheding.</li>\n * <li> Steps are defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code></li>\n * </ul>\n *\n * <b>Note:</b> If no selected step is defined, the first step will be auto selected.\n * <br>\n * <b>Note:</b> If multiple selected steps are defined, the last step will be selected.\n *\n * <h4>Content</h4>\n * The content occupies the main part of the page. It can hold any type of HTML elements.\n * It's defined by using the <code>ui5-wizard-step</code> as slotted element within the <code>ui5-wizard</code>.\n *\n * <h3>Scrolling</h3>\n * The component handles user scrolling by selecting the closest step, based on the current scroll position\n * and scrolls to particular place, when the user clicks on the step within the navigation area.\n * <br><br>\n *\n * <b>Important:</b> In order the component's scrolling behaviour to work, it has to be limited from the outside parent element in terms of height.\n * The component or its parent has to be given percentage or absolute height. Otherwise, the component will be scrolled out with the entire page.\n * <br><br>\n * <b>For example:</b>\n * <br><br>\n * <code>&lt;ui5-dialog style=\"height: 80%\"&gt;<br></code>\n * <code>&#9;&lt;ui5-wizard&gt;&lt;/ui5-wizard&gt;<br></code>\n * <code>&lt;/ui5-dialog&gt;</code>\n *\n * <h4>Moving to next step</h4>\n * The <code>ui5-wizard-step</code> provides the necessary API and it's up to the user of the component to use it to move to the next step.\n * You have to set its <code>selected</code> property (and remove the <code>disabled</code> one if set) to <code>true</code>.\n * And, the <code>ui5-wizard</code> will automatically scroll to the content of the newly selected step.\n * <br><br>\n *\n * The Fiori 3 guidelines recommends having a \"nextStep\" button in the content area.\n * You can place a button, or any other type of element to trigger step change, inside the <code>ui5-wizard-step</code>,\n * and show/hide it when certain fields are filled or user defined criteria is met.\n *\n * <h3>Usage</h3>\n * <h4>When to use:</h4>\n * When the user has to accomplish a long set of tasks.\n * <h4>When not to use:</h4>\n * When the task has less than 3 steps.\n *\n * <h3>Responsive Behavior</h3>\n * On small widths the step's heading, subheading and separators in the navigation area\n * will start truncate and shrink and from particular point they will hide to free as much space as possible.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import @ui5/webcomponents-fiori/dist/Wizard.js\";</code> (includes <ui5-wizard-step>)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.fiori.Wizard\n * @extends UI5Element\n * @tagname ui5-wizard\n * @since 1.0.0-rc.10\n * @appenddocs WizardStep\n * @public\n */\nclass Wizard extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Stores the scroll offsets of the steps,\n\t\t// e.g. the steps' starting point.\n\t\tthis.stepScrollOffsets = [];\n\n\t\t// Keeps track of the selected step index.\n\t\tthis.selectedStepIndex = 0;\n\n\t\t// Indicates that selection will be changed\n\t\t// due to user click.\n\t\tthis.selectionRequestedByClick = false;\n\n\t\t// Indicates that selection will be changed\n\t\t// due to user scroll.\n\t\tthis.selectionRequestedByScroll = false;\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tnavigationMode: NavigationMode.Horizontal,\n\t\t\tgetItemsCallback: () => this.enabledStepsInHeaderDOM,\n\t\t});\n\n\t\tthis._onResize = this.onResize.bind(this);\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn WizardCss;\n\t}\n\n\tstatic get template() {\n\t\treturn WizardTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [WizardTab, WizardStep];\n\t}\n\n\tstatic async onDefine() {\n\t\tawait fetchI18nBundle(\"@ui5/webcomponents-fiori\");\n\t}\n\n\tstatic get PHONE_BREAKPOINT() {\n\t\treturn 599;\n\t}\n\n\tstatic get SCROLL_DEBOUNCE_RATE() {\n\t\treturn 25;\n\t}\n\n\tstatic get CONTENT_TOP_OFFSET() {\n\t\treturn 80;\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._onResize);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResize);\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.syncSelection();\n\t}\n\n\tonAfterRendering() {\n\t\tthis.storeStepScrollOffsets();\n\t\tthis.scrollToSelectedStep();\n\t}\n\n\t/**\n\t * Normalizes the step selection as follows:\n\t * (1) If there is no selected step - the first step is going to be selected.\n\t * (2) If the selected steps are more than one - the last step is going to be selected.\n\t * (3) If the selected step is also disabled - log a warning.\n\t * @private\n\t */\n\tsyncSelection() {\n\t\tif (this.stepsCount === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If no selected steps -> select the first step.\n\t\tif (this.selectedStepsCount === 0) {\n\t\t\tthis.selectFirstStep();\n\t\t\tconsole.warn(\"Selecting the first step: no selected step is defined.\"); // eslint-disable-line\n\t\t}\n\n\t\t// If there are multiple selected steps -> keep the last selected one.\n\t\tif (this.selectedStepsCount > 1) {\n\t\t\tthis.selectLastSelectedStep();\n\t\t\tconsole.warn(`Selecting the last step defined as selected: multiple selected steps are defined.`); // eslint-disable-line\n\t\t}\n\n\t\t// If the selected step is defined as disabled - log warning.\n\t\tif (this.selectedStep && this.selectedStep.disabled) {\n\t\t\tconsole.warn(\"The selected step is disabled: you need to enable it in order to interact with the step.\"); // eslint-disable-line\n\t\t}\n\n\t\t// Place for improvement: If the selected step is not the first, enable all the prior steps\n\t\tthis.selectedStepIndex = this.getSelectedStepIndex();\n\t}\n\n\t/**\n\t * Selects the first step.\n\t * @private\n\t */\n\tselectFirstStep() {\n\t\tthis.deselectAll();\n\t\tthis.slottedSteps[0].selected = true;\n\t\tthis.slottedSteps[0].disabled = false;\n\t}\n\n\t/**\n\t * Selects the last step from multiple selected ones.\n\t * @private\n\t */\n\tselectLastSelectedStep() {\n\t\tconst lastSelectedStep = this.lastSelectedStep;\n\n\t\tif (lastSelectedStep) {\n\t\t\tthis.deselectAll();\n\t\t\tlastSelectedStep.selected = true;\n\t\t\tlastSelectedStep.disabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Deselects all steps.\n\t * @private\n\t */\n\tdeselectAll() {\n\t\tthis.slottedSteps.forEach(step => {\n\t\t\tstep.selected = false;\n\t\t});\n\t}\n\n\t/**\n\t * Stores the scroll offsets of the steps,\n\t * e.g. the steps' starting point.\n\t *\n\t * <b>Note:</b> the disabled ones has negative offsets.\n\t * @private\n\t */\n\tstoreStepScrollOffsets() {\n\t\tthis.stepScrollOffsets = this.slottedSteps.map(step => {\n\t\t\tconst contentItem = this.getStepWrapperByRefId(step._id);\n\t\t\treturn contentItem.offsetTop + contentItem.offsetHeight - Wizard.CONTENT_TOP_OFFSET;\n\t\t});\n\t}\n\n\t/**\n\t * Handles user click on steps' tabs within the header.\n\t * <b>Note:</b> the handler is bound in the template.\n\t * @param {Event} event\n\t * @private\n\t */\n\tonSelectionChangeRequested(event) {\n\t\tthis.selectionRequestedByClick = true;\n\t\tthis.changeSelectionByStepClick(event.target);\n\t}\n\n\t/**\n\t * Handles user scrolling with debouncing.\n\t * <b>Note:</b> the handler is bound in the template.\n\t * @param {Event} event\n\t * @private\n\t */\n\tonScroll(event) {\n\t\tif (this.selectionRequestedByClick) {\n\t\t\tthis.selectionRequestedByClick = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.debounce(this.changeSelectionByScroll.bind(this, event.target.scrollTop), Wizard.SCROLL_DEBOUNCE_RATE);\n\t}\n\n\t/**\n\t * Handles when a step in the header is focused in order to update the <code>ItemNavigation</code>.\n\t * <b>Note:</b> the handler is bound in the template.\n\t * @param {Event} event\n\t * @private\n\t */\n\tonStepInHeaderFocused(event) {\n\t\tthis._itemNavigation.update(event.target);\n\t}\n\n\t/**\n\t * Handles component resize  to:\n\t * (1) trigger scroll scrollOffset reCalculation and syncSelection\n\t * (2) hide steps' separators and texts to free more space on small sizes\n\t * @private\n\t */\n\tonResize() {\n\t\tthis.width = this.getBoundingClientRect().width;\n\t}\n\n\t/**\n\t * Called upon <code>onScroll</code>.\n\t * Selects the closest step, based on the user scroll position.\n\t * @param {Integer} scrollPos the current scroll position\n\t * @private\n\t */\n\tchangeSelectionByScroll(scrollPos) {\n\t\tconst newlySelectedIndex = this.getClosestStepIndexByScrollPos(scrollPos);\n\n\t\t// Skip if already selected - stop.\n\t\tif (this.selectedStepIndex === newlySelectedIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the calculated index is in range,\n\t\t// change selection and fire \"selection-change\".\n\t\tif (newlySelectedIndex >= 0 && newlySelectedIndex <= this.stepsCount - 1) {\n\t\t\tconst stepToSelect = this.slottedSteps[newlySelectedIndex];\n\t\t\tthis.switchSelectionFromOldToNewStep(this.selectedStep, stepToSelect, newlySelectedIndex);\n\t\t\tthis.selectionRequestedByScroll = true;\n\t\t}\n\t}\n\n\t/**\n\t * Called upon <code>onSelectionChangeRequested</code>.\n\t * Selects the external step (ui5-wizard-step),\n\t * based on the clicked step in the header (ui5-wizard-tab).\n\t * @param {HTMLElement} stepInHeader the step equivalent in the header\n\t * @private\n\t */\n\tchangeSelectionByStepClick(stepInHeader) {\n\t\tconst stepRefId = stepInHeader.getAttribute(\"data-ui5-content-ref-id\");\n\t\tconst selectedStep = this.selectedStep;\n\t\tconst stepToSelect = this.getStepByRefId(stepRefId);\n\n\t\t// If the currently selected (active) step is clicked,\n\t\t// just scroll to its starting point and stop.\n\t\tif (selectedStep === stepToSelect) {\n\t\t\tthis.scrollToContentItem(this.selectedStepIndex);\n\t\t\treturn;\n\t\t}\n\n\t\t// Change selection and fire \"selection-change\".\n\t\tconst newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);\n\t\tthis.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex);\n\t}\n\n\tget _stepsInHeader() {\n\t\treturn this.getStepsInfo();\n\t}\n\n\tget _steps() {\n\t\tconst lastEnabledStepIndex = this.getLastEnabledStepIndex();\n\n\t\treturn this.steps.map((step, idx) => {\n\t\t\tstep.stretch = idx === lastEnabledStepIndex;\n\t\t\treturn step;\n\t\t});\n\t}\n\n\tget stepsCount() {\n\t\treturn this.slottedSteps.length;\n\t}\n\n\tget selectedStep() {\n\t\tif (this.selectedStepsCount) {\n\t\t\treturn this.selectedSteps[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget lastSelectedStep() {\n\t\tif (this.selectedStepsCount) {\n\t\t\treturn this.selectedSteps[this.selectedStepsCount - 1];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget selectedSteps() {\n\t\treturn this.slottedSteps.filter(step => step.selected);\n\t}\n\n\tget enabledSteps() {\n\t\treturn this.slottedSteps.filter(step => !step.disabled);\n\t}\n\n\tget selectedStepsCount() {\n\t\treturn this.selectedSteps.length;\n\t}\n\n\tget slottedSteps() {\n\t\treturn this.getSlottedNodes(\"steps\");\n\t}\n\n\tget contentDOM() {\n\t\treturn this.shadowRoot.querySelector(`.ui5-wiz-content`);\n\t}\n\n\tget stepsInHeaderDOM() {\n\t\treturn Array.from(this.shadowRoot.querySelectorAll(\"[ui5-wizard-tab]\"));\n\t}\n\n\tget enabledStepsInHeaderDOM() {\n\t\treturn this.stepsInHeaderDOM.filter(step => !step.disabled);\n\t}\n\n\tget phoneMode() {\n\t\tif (isPhone()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.width <= Wizard.PHONE_BREAKPOINT;\n\t}\n\n\tget navAriaRoleDescription() {\n\t\treturn this.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n\t}\n\n\tget navStepDefaultHeading() {\n\t\treturn this.i18nBundle.getText(WIZARD_NAV_STEP_DEFAULT_HEADING);\n\t}\n\n\tget ariaLabelText() {\n\t\treturn this.ariaLabel || this.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);\n\t}\n\n\t/**\n\t * Returns an array of data objects, based on the user defined steps\n\t * to later build the steps (tabs) within the header.\n\t * @returns {Array<Object>}\n\t * @private\n\t */\n\tgetStepsInfo() {\n\t\tconst lastEnabledStepIndex = this.getLastEnabledStepIndex();\n\t\tconst stepsCount = this.stepsCount;\n\n\t\treturn this.steps.map((step, idx) => {\n\t\t\tconst pos = idx + 1;\n\n\t\t\t// Hide separator if:\n\t\t\t// (1) its size is under the phone breakpoint\n\t\t\t// (2) it's the last step and it's not a branching one\n\t\t\tconst hideSeparator = this.phoneMode || ((idx === stepsCount - 1) && !step.branching);\n\n\t\t\t// Calculate the step's aria-roledectioption: \"1. heading\" or \"Step 1\".\n\t\t\tconst roleDescription = step.heading ? `${pos}. ${step.heading}` : `${this.navStepDefaultHeading} ${pos}`;\n\n\t\t\treturn {\n\t\t\t\ticon: step.icon,\n\t\t\t\theading: this.phoneMode ? \"\" : step.heading,\n\t\t\t\tsubheading: this.phoneMode ? \"\" : step.subheading,\n\t\t\t\tnumber: pos,\n\t\t\t\tselected: step.selected,\n\t\t\t\tdisabled: step.disabled,\n\t\t\t\thideSeparator,\n\t\t\t\tactiveSeparator: (idx < lastEnabledStepIndex) && !step.disabled,\n\t\t\t\tbranchingSeparator: step.branching,\n\t\t\t\tpos,\n\t\t\t\tsize: stepsCount,\n\t\t\t\troleDescription,\n\t\t\t\tariaLabel: getEffectiveAriaLabelText(step),\n\t\t\t\trefStepId: step._id,\n\t\t\t\ttabIndex: this.selectedStepIndex === idx ? \"0\" : \"-1\",\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Returns the index of the selected step.\n\t * @returns {Integer}\n\t * @private\n\t */\n\tgetSelectedStepIndex() {\n\t\tif (this.selectedStep) {\n\t\t\treturn this.slottedSteps.indexOf(this.selectedStep);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns the index of the last enabled step.\n\t * @returns {Integer}\n\t * @private\n\t */\n\tgetLastEnabledStepIndex() {\n\t\tlet lastEnabledStepIndex = 0;\n\n\t\tthis.slottedSteps.forEach((step, idx) => {\n\t\t\tif (!step.disabled) {\n\t\t\t\tlastEnabledStepIndex = idx;\n\t\t\t}\n\t\t});\n\n\t\treturn lastEnabledStepIndex;\n\t}\n\n\tgetStepByRefId(refId) {\n\t\treturn this.slottedSteps.find(step => step._id === refId);\n\t}\n\n\tgetStepWrapperByRefId(refId) {\n\t\treturn this.shadowRoot.querySelector(`[data-ui5-content-item-ref-id=${refId}]`);\n\t}\n\n\t/**\n\t * Scrolls to the content of the selected step\n\t * and it is used in <code>onAfteRendering</cod>.\n\t * @private\n\t */\n\tscrollToSelectedStep() {\n\t\tif (!this.selectionRequestedByScroll) {\n\t\t\tthis.scrollToContentItem(this.selectedStepIndex);\n\t\t}\n\t\tthis.selectionRequestedByScroll = false;\n\t}\n\n\t/**\n\t * Scrolls to the content item within the <code>ui5-wizard</code> shadowDOM\n\t * by given step index.\n\t *\n\t * @private\n\t * @param {Integer} stepIndex the index of a step\n\t */\n\tscrollToContentItem(stepIndex) {\n\t\tthis.contentDOM.scrollTop = this.getClosestScrollPosByStepIndex(stepIndex);\n\t}\n\n\t/**\n\t * Returns to closest scroll position for the given step index.\n\t * by given step index.\n\t *\n\t * @private\n\t * @param {Integer} stepIndex the index of a step\n\t */\n\tgetClosestScrollPosByStepIndex(stepIndex) {\n\t\tif (stepIndex === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// It's possible to have [enabled - 0, disabled - 1, enabled - 2, disabled - 3] step definition and similar.\n\t\t// Consider selection of the third step at index 2, the wizard should scroll where the previous step ends,\n\t\t// but in this case the 2nd step is disabled, so we have to fallback to the first possible step.\n\t\tfor (let closestStepIndex = stepIndex - 1; closestStepIndex >= 0; closestStepIndex--) {\n\t\t\tif (this.stepScrollOffsets[closestStepIndex] > 0) {\n\t\t\t\treturn this.stepScrollOffsets[closestStepIndex];\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns the closest step index by given scroll position.\n\t *\n\t * @param {Integer} scrollPos scroll position\n\t * @returns {Integer} closestStepIndex the closest step index\n\t * @private\n\t */\n\tgetClosestStepIndexByScrollPos(scrollPos) {\n\t\tfor (let closestStepIndex = 0; closestStepIndex <= this.stepScrollOffsets.length - 1; closestStepIndex++) {\n\t\t\tconst stepOffset = this.stepScrollOffsets[closestStepIndex];\n\n\t\t\tif (stepOffset > 0 && scrollPos < stepOffset) {\n\t\t\t\treturn closestStepIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Switches the selection from the old step to the newly selected step.\n\t *\n\t * @param {HTMLElement} selectedStep the old step\n\t * @param {HTMLElement} stepToSelect the step to be selected\n\t * @param {Integer} selectedStepIndex the index of the newly selected step\n\t * @private\n\t */\n\tswitchSelectionFromOldToNewStep(selectedStep, stepToSelect, selectedStepIndex) {\n\t\tif (selectedStep && stepToSelect) {\n\t\t\tselectedStep.selected = false;\n\t\t\tstepToSelect.selected = true;\n\n\t\t\tthis.fireEvent(\"selection-change\", {\n\t\t\t\tselectedStep: stepToSelect,\n\t\t\t\tpreviouslySelectedStep: selectedStep,\n\t\t\t});\n\n\t\t\tthis.selectedStepIndex = selectedStepIndex;\n\t\t}\n\t}\n\n\t/**\n\t * Delays function execution by given threshold - used to delay the scroll event handling.\n\t * @private\n\t */\n\tdebounce(fn, delay) {\n\t\tclearTimeout(this.debounceInterval);\n\t\tthis.debounceInterval = setTimeout(() => {\n\t\t\tthis.debounceInterval = null;\n\t\t\tfn();\n\t\t}, delay);\n\t}\n\n\t/**\n\t * Sorter method for sorting an array in ascending order.\n\t * @private\n\t */\n\tsortAscending(a, b) {\n\t\tif (a < b) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a > b) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nWizard.define();\n\nexport default Wizard;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,SAASC,eAAe,EAAEC,aAAa,QAAQ,4CAA4C;AAC3F,SAASC,yBAAyB,QAAQ,sDAAsD;AAChG,OAAOC,cAAc,MAAM,yDAAyD;AACpF,OAAOC,cAAc,MAAM,sDAAsD;AACjF,OAAOC,KAAK,MAAM,6CAA6C;AAC/D,OAAOC,aAAa,MAAM,wDAAwD;AAClF,SAASC,OAAO,QAAQ,wCAAwC;;AAEhE;AACA,SACCC,+BAA+B,EAC/BC,gCAAgC,QAC1B,mCAAmC;;AAE1C;AACA,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,UAAU,MAAM,iBAAiB;;AAExC;AACA,OAAOC,cAAc,MAAM,6CAA6C;AACxE,OAAOC,SAAS,MAAM,kCAAkC;;AAExD;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,YAAY;EACjBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,yDAA0D;IACrE;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,SAAS,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,YAAY,EAAEC;IACf,CAAC;IAED;AACF;AACA;AACA;IACEC,KAAK,EAAE;MACNJ,IAAI,EAAEd;IACP;EACD,CAAC;EACDmB,KAAK,EAAE,yDAA0D;IAChE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVC,YAAY,EAAE,OAAO;MACrBN,IAAI,EAAEO,WAAW;MACjB,iBAAiB,EAAE,IAAI;MACvBC,uBAAuB,EAAE;IAC1B;EACD,CAAC;EACDC,MAAM,EAAE,yDAA0D;IACjE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,kBAAkB,EAAE;MACnBC,MAAM,EAAE;QACPC,YAAY,EAAE;UAAEX,IAAI,EAAEO;QAAY,CAAC;QACnCK,sBAAsB,EAAE;UAAEZ,IAAI,EAAEO;QAAY;MAC7C;IACD;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,MAAM,SAASlC,UAAU,CAAC;EAC/BmC,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;;IAEP;IACA;IACA,IAAI,CAACC,iBAAiB,GAAG,EAAE;;IAE3B;IACA,IAAI,CAACC,iBAAiB,GAAG,CAAC;;IAE1B;IACA;IACA,IAAI,CAACC,yBAAyB,GAAG,KAAK;;IAEtC;IACA;IACA,IAAI,CAACC,0BAA0B,GAAG,KAAK;IAEvC,IAAI,CAACC,eAAe,GAAG,IAAInC,cAAc,CAAC,IAAI,EAAE;MAC/CoC,cAAc,EAAEnC,cAAc,CAACoC,UAAU;MACzCC,gBAAgB,EAAEA,CAAA,KAAM,IAAI,CAACC;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;IAEzC,IAAI,CAACC,UAAU,GAAG7C,aAAa,CAAC,oBAAoB,CAAC;EACtD;EAEA,WAAWa,QAAQA,CAAA,EAAG;IACrB,OAAOA,QAAQ;EAChB;EAEA,WAAWiC,MAAMA,CAAA,EAAG;IACnB,OAAOhD,SAAS;EACjB;EAEA,WAAWiD,MAAMA,CAAA,EAAG;IACnB,OAAOnC,SAAS;EACjB;EAEA,WAAWoC,QAAQA,CAAA,EAAG;IACrB,OAAOrC,cAAc;EACtB;EAEA,WAAWsC,YAAYA,CAAA,EAAG;IACzB,OAAO,CAACxC,SAAS,EAAEC,UAAU,CAAC;EAC/B;EAEA,aAAawC,QAAQA,CAAA,EAAG;IACvB,MAAMnD,eAAe,CAAC,0BAA0B,CAAC;EAClD;EAEA,WAAWoD,gBAAgBA,CAAA,EAAG;IAC7B,OAAO,GAAG;EACX;EAEA,WAAWC,oBAAoBA,CAAA,EAAG;IACjC,OAAO,EAAE;EACV;EAEA,WAAWC,kBAAkBA,CAAA,EAAG;IAC/B,OAAO,EAAE;EACV;EAEAC,UAAUA,CAAA,EAAG;IACZjD,aAAa,CAACkD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAACb,SAAS,CAAC;EAC7C;EAEAc,SAASA,CAAA,EAAG;IACXnD,aAAa,CAACoD,UAAU,CAAC,IAAI,EAAE,IAAI,CAACf,SAAS,CAAC;EAC/C;EAEAgB,iBAAiBA,CAAA,EAAG;IACnB,IAAI,CAACC,aAAa,CAAC,CAAC;EACrB;EAEAC,gBAAgBA,CAAA,EAAG;IAClB,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC5B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCH,aAAaA,CAAA,EAAG;IACf,IAAI,IAAI,CAACI,UAAU,KAAK,CAAC,EAAE;MAC1B;IACD;;IAEA;IACA,IAAI,IAAI,CAACC,kBAAkB,KAAK,CAAC,EAAE;MAClC,IAAI,CAACC,eAAe,CAAC,CAAC;MACtBC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC,CAAC,CAAC;IACzE;;IAEA;IACA,IAAI,IAAI,CAACH,kBAAkB,GAAG,CAAC,EAAE;MAChC,IAAI,CAACI,sBAAsB,CAAC,CAAC;MAC7BF,OAAO,CAACC,IAAI,CAAE,mFAAkF,CAAC,CAAC,CAAC;IACpG;;IAEA;IACA,IAAI,IAAI,CAACtC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACwC,QAAQ,EAAE;MACpDH,OAAO,CAACC,IAAI,CAAC,0FAA0F,CAAC,CAAC,CAAC;IAC3G;;IAEA;IACA,IAAI,CAACjC,iBAAiB,GAAG,IAAI,CAACoC,oBAAoB,CAAC,CAAC;EACrD;;EAEA;AACD;AACA;AACA;EACCL,eAAeA,CAAA,EAAG;IACjB,IAAI,CAACM,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAACC,QAAQ,GAAG,IAAI;IACpC,IAAI,CAACD,YAAY,CAAC,CAAC,CAAC,CAACH,QAAQ,GAAG,KAAK;EACtC;;EAEA;AACD;AACA;AACA;EACCD,sBAAsBA,CAAA,EAAG;IACxB,MAAMM,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;IAE9C,IAAIA,gBAAgB,EAAE;MACrB,IAAI,CAACH,WAAW,CAAC,CAAC;MAClBG,gBAAgB,CAACD,QAAQ,GAAG,IAAI;MAChCC,gBAAgB,CAACL,QAAQ,GAAG,KAAK;IAClC;EACD;;EAEA;AACD;AACA;AACA;EACCE,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,YAAY,CAACG,OAAO,CAACC,IAAI,IAAI;MACjCA,IAAI,CAACH,QAAQ,GAAG,KAAK;IACtB,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCZ,sBAAsBA,CAAA,EAAG;IACxB,IAAI,CAAC5B,iBAAiB,GAAG,IAAI,CAACuC,YAAY,CAACK,GAAG,CAACD,IAAI,IAAI;MACtD,MAAME,WAAW,GAAG,IAAI,CAACC,qBAAqB,CAACH,IAAI,CAACI,GAAG,CAAC;MACxD,OAAOF,WAAW,CAACG,SAAS,GAAGH,WAAW,CAACI,YAAY,GAAGnD,MAAM,CAACsB,kBAAkB;IACpF,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC8B,0BAA0BA,CAACC,KAAK,EAAE;IACjC,IAAI,CAACjD,yBAAyB,GAAG,IAAI;IACrC,IAAI,CAACkD,0BAA0B,CAACD,KAAK,CAACE,MAAM,CAAC;EAC9C;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCC,QAAQA,CAACH,KAAK,EAAE;IACf,IAAI,IAAI,CAACjD,yBAAyB,EAAE;MACnC,IAAI,CAACA,yBAAyB,GAAG,KAAK;MACtC;IACD;IAEA,IAAI,CAACqD,QAAQ,CAAC,IAAI,CAACC,uBAAuB,CAAC7C,IAAI,CAAC,IAAI,EAAEwC,KAAK,CAACE,MAAM,CAACI,SAAS,CAAC,EAAE3D,MAAM,CAACqB,oBAAoB,CAAC;EAC5G;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCuC,qBAAqBA,CAACP,KAAK,EAAE;IAC5B,IAAI,CAAC/C,eAAe,CAACuD,MAAM,CAACR,KAAK,CAACE,MAAM,CAAC;EAC1C;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC3C,QAAQA,CAAA,EAAG;IACV,IAAI,CAACrB,KAAK,GAAG,IAAI,CAACuE,qBAAqB,CAAC,CAAC,CAACvE,KAAK;EAChD;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCmE,uBAAuBA,CAACK,SAAS,EAAE;IAClC,MAAMC,kBAAkB,GAAG,IAAI,CAACC,8BAA8B,CAACF,SAAS,CAAC;;IAEzE;IACA,IAAI,IAAI,CAAC5D,iBAAiB,KAAK6D,kBAAkB,EAAE;MAClD;IACD;;IAEA;IACA;IACA,IAAIA,kBAAkB,IAAI,CAAC,IAAIA,kBAAkB,IAAI,IAAI,CAAChC,UAAU,GAAG,CAAC,EAAE;MACzE,MAAMkC,YAAY,GAAG,IAAI,CAACzB,YAAY,CAACuB,kBAAkB,CAAC;MAC1D,IAAI,CAACG,+BAA+B,CAAC,IAAI,CAACrE,YAAY,EAAEoE,YAAY,EAAEF,kBAAkB,CAAC;MACzF,IAAI,CAAC3D,0BAA0B,GAAG,IAAI;IACvC;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCiD,0BAA0BA,CAACc,YAAY,EAAE;IACxC,MAAMC,SAAS,GAAGD,YAAY,CAACE,YAAY,CAAC,yBAAyB,CAAC;IACtE,MAAMxE,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMoE,YAAY,GAAG,IAAI,CAACK,cAAc,CAACF,SAAS,CAAC;;IAEnD;IACA;IACA,IAAIvE,YAAY,KAAKoE,YAAY,EAAE;MAClC,IAAI,CAACM,mBAAmB,CAAC,IAAI,CAACrE,iBAAiB,CAAC;MAChD;IACD;;IAEA;IACA,MAAM6D,kBAAkB,GAAG,IAAI,CAACvB,YAAY,CAACgC,OAAO,CAACP,YAAY,CAAC;IAClE,IAAI,CAACC,+BAA+B,CAACrE,YAAY,EAAEoE,YAAY,EAAEF,kBAAkB,CAAC;EACrF;EAEA,IAAIU,cAAcA,CAAA,EAAG;IACpB,OAAO,IAAI,CAACC,YAAY,CAAC,CAAC;EAC3B;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACZ,MAAMC,oBAAoB,GAAG,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAE3D,OAAO,IAAI,CAACC,KAAK,CAACjC,GAAG,CAAC,CAACD,IAAI,EAAEmC,GAAG,KAAK;MACpCnC,IAAI,CAACoC,OAAO,GAAGD,GAAG,KAAKH,oBAAoB;MAC3C,OAAOhC,IAAI;IACZ,CAAC,CAAC;EACH;EAEA,IAAIb,UAAUA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACS,YAAY,CAACyC,MAAM;EAChC;EAEA,IAAIpF,YAAYA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACmC,kBAAkB,EAAE;MAC5B,OAAO,IAAI,CAACkD,aAAa,CAAC,CAAC,CAAC;IAC7B;IAEA,OAAO,IAAI;EACZ;EAEA,IAAIxC,gBAAgBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACV,kBAAkB,EAAE;MAC5B,OAAO,IAAI,CAACkD,aAAa,CAAC,IAAI,CAAClD,kBAAkB,GAAG,CAAC,CAAC;IACvD;IAEA,OAAO,IAAI;EACZ;EAEA,IAAIkD,aAAaA,CAAA,EAAG;IACnB,OAAO,IAAI,CAAC1C,YAAY,CAAC2C,MAAM,CAACvC,IAAI,IAAIA,IAAI,CAACH,QAAQ,CAAC;EACvD;EAEA,IAAI2C,YAAYA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAC5C,YAAY,CAAC2C,MAAM,CAACvC,IAAI,IAAI,CAACA,IAAI,CAACP,QAAQ,CAAC;EACxD;EAEA,IAAIL,kBAAkBA,CAAA,EAAG;IACxB,OAAO,IAAI,CAACkD,aAAa,CAACD,MAAM;EACjC;EAEA,IAAIzC,YAAYA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAC6C,eAAe,CAAC,OAAO,CAAC;EACrC;EAEA,IAAIC,UAAUA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACC,UAAU,CAACC,aAAa,CAAE,kBAAiB,CAAC;EACzD;EAEA,IAAIC,gBAAgBA,CAAA,EAAG;IACtB,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACJ,UAAU,CAACK,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;EACxE;EAEA,IAAInF,uBAAuBA,CAAA,EAAG;IAC7B,OAAO,IAAI,CAACgF,gBAAgB,CAACN,MAAM,CAACvC,IAAI,IAAI,CAACA,IAAI,CAACP,QAAQ,CAAC;EAC5D;EAEA,IAAIwD,SAASA,CAAA,EAAG;IACf,IAAIvH,OAAO,CAAC,CAAC,EAAE;MACd,OAAO,IAAI;IACZ;IAEA,OAAO,IAAI,CAACgB,KAAK,IAAIS,MAAM,CAACoB,gBAAgB;EAC7C;EAEA,IAAI2E,sBAAsBA,CAAA,EAAG;IAC5B,OAAO,IAAI,CAACjF,UAAU,CAACkF,OAAO,CAACvH,gCAAgC,CAAC;EACjE;EAEA,IAAIwH,qBAAqBA,CAAA,EAAG;IAC3B,OAAO,IAAI,CAACnF,UAAU,CAACkF,OAAO,CAACxH,+BAA+B,CAAC;EAChE;EAEA,IAAI0H,aAAaA,CAAA,EAAG;IACnB,OAAO,IAAI,CAAChH,SAAS,IAAI,IAAI,CAAC4B,UAAU,CAACkF,OAAO,CAACvH,gCAAgC,CAAC;EACnF;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCkG,YAAYA,CAAA,EAAG;IACd,MAAME,oBAAoB,GAAG,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC3D,MAAM9C,UAAU,GAAG,IAAI,CAACA,UAAU;IAElC,OAAO,IAAI,CAAC+C,KAAK,CAACjC,GAAG,CAAC,CAACD,IAAI,EAAEmC,GAAG,KAAK;MACpC,MAAMmB,GAAG,GAAGnB,GAAG,GAAG,CAAC;;MAEnB;MACA;MACA;MACA,MAAMoB,aAAa,GAAG,IAAI,CAACN,SAAS,IAAMd,GAAG,KAAKhD,UAAU,GAAG,CAAC,IAAK,CAACa,IAAI,CAACwD,SAAU;;MAErF;MACA,MAAMC,eAAe,GAAGzD,IAAI,CAAC0D,OAAO,GAAI,GAAEJ,GAAI,KAAItD,IAAI,CAAC0D,OAAQ,EAAC,GAAI,GAAE,IAAI,CAACN,qBAAsB,IAAGE,GAAI,EAAC;MAEzG,OAAO;QACNK,IAAI,EAAE3D,IAAI,CAAC2D,IAAI;QACfD,OAAO,EAAE,IAAI,CAACT,SAAS,GAAG,EAAE,GAAGjD,IAAI,CAAC0D,OAAO;QAC3CE,UAAU,EAAE,IAAI,CAACX,SAAS,GAAG,EAAE,GAAGjD,IAAI,CAAC4D,UAAU;QACjDC,MAAM,EAAEP,GAAG;QACXzD,QAAQ,EAAEG,IAAI,CAACH,QAAQ;QACvBJ,QAAQ,EAAEO,IAAI,CAACP,QAAQ;QACvB8D,aAAa;QACbO,eAAe,EAAG3B,GAAG,GAAGH,oBAAoB,IAAK,CAAChC,IAAI,CAACP,QAAQ;QAC/DsE,kBAAkB,EAAE/D,IAAI,CAACwD,SAAS;QAClCF,GAAG;QACHU,IAAI,EAAE7E,UAAU;QAChBsE,eAAe;QACfpH,SAAS,EAAEhB,yBAAyB,CAAC2E,IAAI,CAAC;QAC1CiE,SAAS,EAAEjE,IAAI,CAACI,GAAG;QACnB8D,QAAQ,EAAE,IAAI,CAAC5G,iBAAiB,KAAK6E,GAAG,GAAG,GAAG,GAAG;MAClD,CAAC;IACF,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;EACCzC,oBAAoBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACzC,YAAY,EAAE;MACtB,OAAO,IAAI,CAAC2C,YAAY,CAACgC,OAAO,CAAC,IAAI,CAAC3E,YAAY,CAAC;IACpD;IACA,OAAO,CAAC;EACT;;EAEA;AACD;AACA;AACA;AACA;EACCgF,uBAAuBA,CAAA,EAAG;IACzB,IAAID,oBAAoB,GAAG,CAAC;IAE5B,IAAI,CAACpC,YAAY,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEmC,GAAG,KAAK;MACxC,IAAI,CAACnC,IAAI,CAACP,QAAQ,EAAE;QACnBuC,oBAAoB,GAAGG,GAAG;MAC3B;IACD,CAAC,CAAC;IAEF,OAAOH,oBAAoB;EAC5B;EAEAN,cAAcA,CAACyC,KAAK,EAAE;IACrB,OAAO,IAAI,CAACvE,YAAY,CAACwE,IAAI,CAACpE,IAAI,IAAIA,IAAI,CAACI,GAAG,KAAK+D,KAAK,CAAC;EAC1D;EAEAhE,qBAAqBA,CAACgE,KAAK,EAAE;IAC5B,OAAO,IAAI,CAACxB,UAAU,CAACC,aAAa,CAAE,iCAAgCuB,KAAM,GAAE,CAAC;EAChF;;EAEA;AACD;AACA;AACA;AACA;EACCjF,oBAAoBA,CAAA,EAAG;IACtB,IAAI,CAAC,IAAI,CAAC1B,0BAA0B,EAAE;MACrC,IAAI,CAACmE,mBAAmB,CAAC,IAAI,CAACrE,iBAAiB,CAAC;IACjD;IACA,IAAI,CAACE,0BAA0B,GAAG,KAAK;EACxC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCmE,mBAAmBA,CAAC0C,SAAS,EAAE;IAC9B,IAAI,CAAC3B,UAAU,CAAC5B,SAAS,GAAG,IAAI,CAACwD,8BAA8B,CAACD,SAAS,CAAC;EAC3E;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,8BAA8BA,CAACD,SAAS,EAAE;IACzC,IAAIA,SAAS,KAAK,CAAC,EAAE;MACpB,OAAO,CAAC;IACT;;IAEA;IACA;IACA;IACA,KAAK,IAAIE,gBAAgB,GAAGF,SAAS,GAAG,CAAC,EAAEE,gBAAgB,IAAI,CAAC,EAAEA,gBAAgB,EAAE,EAAE;MACrF,IAAI,IAAI,CAAClH,iBAAiB,CAACkH,gBAAgB,CAAC,GAAG,CAAC,EAAE;QACjD,OAAO,IAAI,CAAClH,iBAAiB,CAACkH,gBAAgB,CAAC;MAChD;IACD;IAEA,OAAO,CAAC;EACT;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCnD,8BAA8BA,CAACF,SAAS,EAAE;IACzC,KAAK,IAAIqD,gBAAgB,GAAG,CAAC,EAAEA,gBAAgB,IAAI,IAAI,CAAClH,iBAAiB,CAACgF,MAAM,GAAG,CAAC,EAAEkC,gBAAgB,EAAE,EAAE;MACzG,MAAMC,UAAU,GAAG,IAAI,CAACnH,iBAAiB,CAACkH,gBAAgB,CAAC;MAE3D,IAAIC,UAAU,GAAG,CAAC,IAAItD,SAAS,GAAGsD,UAAU,EAAE;QAC7C,OAAOD,gBAAgB;MACxB;IACD;IAEA,OAAO,CAAC;EACT;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCjD,+BAA+BA,CAACrE,YAAY,EAAEoE,YAAY,EAAE/D,iBAAiB,EAAE;IAC9E,IAAIL,YAAY,IAAIoE,YAAY,EAAE;MACjCpE,YAAY,CAAC4C,QAAQ,GAAG,KAAK;MAC7BwB,YAAY,CAACxB,QAAQ,GAAG,IAAI;MAE5B,IAAI,CAAC4E,SAAS,CAAC,kBAAkB,EAAE;QAClCxH,YAAY,EAAEoE,YAAY;QAC1BnE,sBAAsB,EAAED;MACzB,CAAC,CAAC;MAEF,IAAI,CAACK,iBAAiB,GAAGA,iBAAiB;IAC3C;EACD;;EAEA;AACD;AACA;AACA;EACCsD,QAAQA,CAAC8D,EAAE,EAAEC,KAAK,EAAE;IACnBC,YAAY,CAAC,IAAI,CAACC,gBAAgB,CAAC;IACnC,IAAI,CAACA,gBAAgB,GAAGC,UAAU,CAAC,MAAM;MACxC,IAAI,CAACD,gBAAgB,GAAG,IAAI;MAC5BH,EAAE,CAAC,CAAC;IACL,CAAC,EAAEC,KAAK,CAAC;EACV;;EAEA;AACD;AACA;AACA;EACCI,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAID,CAAC,GAAGC,CAAC,EAAE;MACV,OAAO,CAAC,CAAC;IACV;IACA,IAAID,CAAC,GAAGC,CAAC,EAAE;MACV,OAAO,CAAC;IACT;IACA,OAAO,CAAC;EACT;AACD;AAEA9H,MAAM,CAAC+H,MAAM,CAAC,CAAC;AAEf,eAAe/H,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}