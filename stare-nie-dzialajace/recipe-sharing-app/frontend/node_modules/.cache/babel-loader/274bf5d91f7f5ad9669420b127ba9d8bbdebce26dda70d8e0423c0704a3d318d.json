{"ast":null,"code":"var TableScaleWidthMode;\n(function (TableScaleWidthMode) {\n  TableScaleWidthMode[\"Default\"] = \"Default\";\n  TableScaleWidthMode[\"Smart\"] = \"Smart\";\n  TableScaleWidthMode[\"Grow\"] = \"Grow\";\n})(TableScaleWidthMode || (TableScaleWidthMode = {}));\nexport { TableScaleWidthMode };","map":{"version":3,"names":["TableScaleWidthMode"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/enums/TableScaleWidthMode.ts"],"sourcesContent":["export enum TableScaleWidthMode {\n  /*\n   * Every column without fixed width gets the maximum available space of the table\n   */\n  Default = 'Default',\n  /*\n   * Every column gets the space it needs for displaying the full header text. If all headers need more space than the\n   * available table width, horizontal scrolling will be enabled.\n   * If there is space left, columns with a long content will get more space until there is no more table space left\n   */\n  Smart = 'Smart',\n  /*\n   * Every column gets the space it needs for displaying it's full header text and full content of all cells.\n   * If it requires more space than the table has, horizontal scrolling will be enabled.\n   */\n  Grow = 'Grow'\n}\n"],"mappings":"IAAYA,mBAAA;WAAAA,mBAAA;EAAAA,mBAAA;EAAAA,mBAAA;EAAAA,mBAAA;GAAAA,mBAAA,KAAAA,mBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}