{"ast":null,"code":"const generateTimeItemsArray = x => {\n  const array = [];\n  for (let i = 0; i < x; i++) {\n    let tempString = i.toString();\n    if (tempString.length === 1) {\n      tempString = `0${tempString}`;\n    }\n    array.push(tempString);\n  }\n  return array;\n};\nconst getHours = config => {\n  let hoursValueArray = [];\n  if (config.isTwelveHoursFormat) {\n    hoursValueArray = generateTimeItemsArray(12);\n  } else {\n    hoursValueArray = generateTimeItemsArray(24);\n  }\n  if (config.minHour === 1) {\n    for (let i = 0; i < hoursValueArray.length; i++) {\n      const tempValue = hoursValueArray[i] * 1 + 1;\n      if (tempValue.toString().length === 1) {\n        hoursValueArray[i] = `0${tempValue.toString()}`;\n      } else {\n        hoursValueArray[i] = tempValue.toString();\n      }\n    }\n  }\n  return hoursValueArray;\n};\nconst getMinutes = () => {\n  return generateTimeItemsArray(60);\n};\nconst getSeconds = () => {\n  return generateTimeItemsArray(60);\n};\nconst getHoursConfigByFormat = type => {\n  const config = {};\n  if (type === \"hour0_23\") {\n    config.minHour = 0;\n    config.maxHour = 23;\n    config.isTwelveHoursFormat = false;\n  } else if (type === \"hour1_24\") {\n    config.minHour = 1;\n    config.maxHour = 24;\n    config.isTwelveHoursFormat = false;\n  } else if (type === \"hour0_11\") {\n    config.minHour = 0;\n    config.maxHour = 11;\n    config.isTwelveHoursFormat = true;\n  } else if (type === \"hour1_12\") {\n    config.minHour = 1;\n    config.maxHour = 12;\n    config.isTwelveHoursFormat = true;\n  }\n  return config;\n};\nconst getTimeControlsByFormat = (formatArray, hoursConfig) => {\n  const timeControls = [false, false, false, false]; // hours, minutes, seconds and am/pm\n\n  for (let i = 0; i < formatArray.length; i++) {\n    if (hoursConfig.maxHour !== 0) {\n      timeControls[0] = true;\n    }\n    if (hoursConfig.maxHour !== 0 && hoursConfig.isTwelveHoursFormat) {\n      timeControls[0] = true;\n    }\n    if (formatArray[i].type === \"minute\") {\n      timeControls[1] = true;\n    }\n    if (formatArray[i].type === \"second\") {\n      timeControls[2] = true;\n    }\n    if (formatArray[i].type === \"amPmMarker\") {\n      timeControls[3] = true;\n    }\n  }\n  return timeControls;\n};\nexport { getHours, getMinutes, getSeconds, getHoursConfigByFormat, getTimeControlsByFormat };","map":{"version":3,"names":["generateTimeItemsArray","x","array","i","tempString","toString","length","push","getHours","config","hoursValueArray","isTwelveHoursFormat","minHour","tempValue","getMinutes","getSeconds","getHoursConfigByFormat","type","maxHour","getTimeControlsByFormat","formatArray","hoursConfig","timeControls"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/timepicker-utils/TimeSlider.js"],"sourcesContent":["const generateTimeItemsArray = x => {\n\tconst array = [];\n\tfor (let i = 0; i < x; i++) {\n\t\tlet tempString = i.toString();\n\t\tif (tempString.length === 1) {\n\t\t\ttempString = `0${tempString}`;\n\t\t}\n\n\t\tarray.push(tempString);\n\t}\n\n\treturn array;\n};\n\nconst getHours = config => {\n\tlet hoursValueArray = [];\n\n\tif (config.isTwelveHoursFormat) {\n\t\thoursValueArray = generateTimeItemsArray(12);\n\t} else {\n\t\thoursValueArray = generateTimeItemsArray(24);\n\t}\n\n\tif (config.minHour === 1) {\n\t\tfor (let i = 0; i < hoursValueArray.length; i++) {\n\t\t\tconst tempValue = hoursValueArray[i] * 1 + 1;\n\n\t\t\tif (tempValue.toString().length === 1) {\n\t\t\t\thoursValueArray[i] = `0${tempValue.toString()}`;\n\t\t\t} else {\n\t\t\t\thoursValueArray[i] = tempValue.toString();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn hoursValueArray;\n};\n\nconst getMinutes = () => {\n\treturn generateTimeItemsArray(60);\n};\n\nconst getSeconds = () => {\n\treturn generateTimeItemsArray(60);\n};\n\nconst getHoursConfigByFormat = type => {\n\tconst config = {};\n\n\tif (type === \"hour0_23\") {\n\t\tconfig.minHour = 0;\n\t\tconfig.maxHour = 23;\n\t\tconfig.isTwelveHoursFormat = false;\n\t} else if (type === \"hour1_24\") {\n\t\tconfig.minHour = 1;\n\t\tconfig.maxHour = 24;\n\t\tconfig.isTwelveHoursFormat = false;\n\t} else if (type === \"hour0_11\") {\n\t\tconfig.minHour = 0;\n\t\tconfig.maxHour = 11;\n\t\tconfig.isTwelveHoursFormat = true;\n\t} else if (type === \"hour1_12\") {\n\t\tconfig.minHour = 1;\n\t\tconfig.maxHour = 12;\n\t\tconfig.isTwelveHoursFormat = true;\n\t}\n\n\treturn config;\n};\n\nconst getTimeControlsByFormat = (formatArray, hoursConfig) => {\n\tconst timeControls = [false, false, false, false]; // hours, minutes, seconds and am/pm\n\n\tfor (let i = 0; i < formatArray.length; i++) {\n\t\tif (hoursConfig.maxHour !== 0) {\n\t\t\ttimeControls[0] = true;\n\t\t}\n\t\tif (hoursConfig.maxHour !== 0 && hoursConfig.isTwelveHoursFormat) {\n\t\t\ttimeControls[0] = true;\n\t\t}\n\t\tif (formatArray[i].type === \"minute\") {\n\t\t\ttimeControls[1] = true;\n\t\t}\n\t\tif (formatArray[i].type === \"second\") {\n\t\t\ttimeControls[2] = true;\n\t\t}\n\t\tif (formatArray[i].type === \"amPmMarker\") {\n\t\t\ttimeControls[3] = true;\n\t\t}\n\t}\n\n\treturn timeControls;\n};\n\nexport {\n\tgetHours,\n\tgetMinutes,\n\tgetSeconds,\n\tgetHoursConfigByFormat,\n\tgetTimeControlsByFormat,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}