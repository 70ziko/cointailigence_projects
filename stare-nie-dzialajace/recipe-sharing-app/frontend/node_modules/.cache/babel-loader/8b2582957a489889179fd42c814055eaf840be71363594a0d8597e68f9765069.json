{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-tree-item\",\n  properties: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */{\n    /**\n     * Defines the text of the tree item.\n     *\n     * @public\n     * @type {String}\n     * @defaultValue \"\"\n     */\n    text: {\n      type: String\n    },\n    /**\n     * Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    expanded: {\n      type: Boolean\n    },\n    /**\n     * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n     * <br>\n     * <i>Note:</i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons.\n     * Set this to <code>true</code> for nodes you intend to load lazily, when the user clicks the expand button.\n     * It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    hasChildren: {\n      type: Boolean\n    },\n    /**\n     * Defines whether the tree node is selected by the user. Only has effect if the <code>ui5-tree</code> is in one of the\n     * following modes: in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code>.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    selected: {\n      type: Boolean\n    },\n    /**\n     * If set, an icon will be displayed before the text, representing the tree item.\n     *\n     * @public\n     * @type {String}\n     * @defaultValue \"\"\n     */\n    icon: {\n      type: String\n    }\n  },\n  managedSlots: true,\n  slots: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */{\n    /**\n     * Defines the items of this <code>ui5-tree-item</code>.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      propertyName: \"items\",\n      type: HTMLElement,\n      invalidateOnChildChange: true\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * This is the item to use inside a <code>ui5-tree</code>.\n * You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * <h3>Usage</h3>\n * <code>ui5-tree-item</code> is an abstract element, representing a node in a <code>ui5-tree</code>. The tree itself is rendered as a list,\n * and each <code>ui5-tree-item</code> is represented by a list item(<code>ui5-li-tree</code>) in that list. Therefore, you should only use\n * <code>ui5-tree-item</code> directly in your apps. The <code>ui5-li-tree</code> list item is internal for the list, and not intended for public use.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import @ui5/webcomponents/dist/TreeItem.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TreeItem\n * @extends UI5Element\n * @tagname ui5-tree-item\n * @public\n * @since 1.0.0-rc.8\n */\nclass TreeItem extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n  get requiresToggleButton() {\n    return this.hasChildren || this.items.length > 0;\n  }\n\n  /**\n   * Call this method to manually switch the <code>expanded</code> state of a tree item.\n   *\n   * @public\n   */\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n}\nTreeItem.define();\nexport default TreeItem;","map":{"version":3,"names":["UI5Element","metadata","tag","properties","text","type","String","expanded","Boolean","hasChildren","selected","icon","managedSlots","slots","propertyName","HTMLElement","invalidateOnChildChange","TreeItem","requiresToggleButton","items","length","toggle","define"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/TreeItem.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-tree-item\",\n\tproperties: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the text of the tree item.\n\t\t *\n\t\t * @public\n\t\t * @type {String}\n\t\t * @defaultValue \"\"\n\t\t */\n\t\ttext: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\texpanded: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree node has children, even if currently no other tree nodes are slotted inside.\n\t\t * <br>\n\t\t * <i>Note:</i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons.\n\t\t * Set this to <code>true</code> for nodes you intend to load lazily, when the user clicks the expand button.\n\t\t * It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\thasChildren: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the tree node is selected by the user. Only has effect if the <code>ui5-tree</code> is in one of the\n\t\t * following modes: in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code>.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tselected: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * If set, an icon will be displayed before the text, representing the tree item.\n\t\t *\n\t\t * @public\n\t\t * @type {String}\n\t\t * @defaultValue \"\"\n\t\t */\n\t\ticon: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.TreeItem.prototype */ {\n\n\t\t/**\n\t\t * Defines the items of this <code>ui5-tree-item</code>.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"items\",\n\t\t\ttype: HTMLElement,\n\t\t\tinvalidateOnChildChange: true,\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * This is the item to use inside a <code>ui5-tree</code>.\n * You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * <h3>Usage</h3>\n * <code>ui5-tree-item</code> is an abstract element, representing a node in a <code>ui5-tree</code>. The tree itself is rendered as a list,\n * and each <code>ui5-tree-item</code> is represented by a list item(<code>ui5-li-tree</code>) in that list. Therefore, you should only use\n * <code>ui5-tree-item</code> directly in your apps. The <code>ui5-li-tree</code> list item is internal for the list, and not intended for public use.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import @ui5/webcomponents/dist/TreeItem.js\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TreeItem\n * @extends UI5Element\n * @tagname ui5-tree-item\n * @public\n * @since 1.0.0-rc.8\n */\nclass TreeItem extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tget requiresToggleButton() {\n\t\treturn this.hasChildren || this.items.length > 0;\n\t}\n\n\t/**\n\t * Call this method to manually switch the <code>expanded</code> state of a tree item.\n\t *\n\t * @public\n\t */\n\ttoggle() {\n\t\tthis.expanded = !this.expanded;\n\t}\n}\n\nTreeItem.define();\n\nexport default TreeItem;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;;AAEnE;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EAChBC,GAAG,EAAE,eAAe;EACpBC,UAAU,EAAE,0DAA2D;IAEtE;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLC,IAAI,EAAEC;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE;MACTF,IAAI,EAAEG;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,WAAW,EAAE;MACZJ,IAAI,EAAEG;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEE,QAAQ,EAAE;MACTL,IAAI,EAAEG;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEG,IAAI,EAAE;MACLN,IAAI,EAAEC;IACP;EACD,CAAC;EACDM,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,0DAA2D;IAEjE;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVC,YAAY,EAAE,OAAO;MACrBT,IAAI,EAAEU,WAAW;MACjBC,uBAAuB,EAAE;IAC1B;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASjB,UAAU,CAAC;EACjC,WAAWC,QAAQA,CAAA,EAAG;IACrB,OAAOA,QAAQ;EAChB;EAEA,IAAIiB,oBAAoBA,CAAA,EAAG;IAC1B,OAAO,IAAI,CAACT,WAAW,IAAI,IAAI,CAACU,KAAK,CAACC,MAAM,GAAG,CAAC;EACjD;;EAEA;AACD;AACA;AACA;AACA;EACCC,MAAMA,CAAA,EAAG;IACR,IAAI,CAACd,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;EAC/B;AACD;AAEAU,QAAQ,CAACK,MAAM,CAAC,CAAC;AAEjB,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}