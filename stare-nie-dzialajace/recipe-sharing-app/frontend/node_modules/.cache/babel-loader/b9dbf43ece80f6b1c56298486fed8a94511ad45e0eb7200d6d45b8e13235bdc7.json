{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport TreeItem from \"./TreeItem.js\";\nimport List from \"./List.js\";\nimport TreeListItem from \"./TreeListItem.js\";\nimport ListMode from \"./types/ListMode.js\";\n\n// Template\nimport TreeTemplate from \"./generated/templates/TreeTemplate.lit.js\";\n\n// Styles\nimport TreeCss from \"./generated/themes/Tree.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-tree\",\n  properties: /** @lends sap.ui.webcomponents.main.Tree.prototype */{\n    /**\n     * Defines the mode of the <code>ui5-tree</code>. Since the tree uses a <code>ui5-list</code> to display its structure,\n     * the tree modes are exactly the same as the list modes, and are all applicable.\n     * <br><br>\n     * <b>Note:</b> Available options are <code>None</code>, <code>SingleSelect</code>, <code>SingleSelectBegin</code>,\n     * <code>SingleSelectEnd</code>, <code>MultiSelect</code>, and <code>Delete</code>.\n     *\n     * @public\n     * @type {ListMode}\n     * @defaultValue \"None\"\n     */\n    mode: {\n      type: ListMode,\n      defaultValue: ListMode.None\n    },\n    /**\n     * Defines the text that is displayed when the <code>ui5-tree</code> contains no items.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    noDataText: {\n      type: String\n    },\n    /**\n     * Defines the <code>ui5-tree</code> header text.\n     * <br><br>\n     * <b>Note:</b> If the <code>header</code> slot is set, this property is ignored.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    headerText: {\n      type: String\n    },\n    /**\n     * Defines the <code>ui5-tree</code> footer text.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    footerText: {\n      type: String\n    },\n    /**\n     * An array, containing a flat structure of list items to render\n     *\n     * @private\n     */\n    _listItems: {\n      type: Object,\n      multiple: true\n    },\n    /**\n     * Shows the toggle button at the end, rather than at the beginning of the items\n     *\n     * @protected\n     * @since 1.0.0-rc.8\n     */\n    _toggleButtonEnd: {\n      type: Boolean\n    },\n    /**\n     * Represents the tree in a very minimal state - icons only with no text and no toggle buttons\n     *\n     * @protected\n     * @since 1.0.0-rc.8\n     */\n    _minimal: {\n      type: Boolean\n    }\n  },\n  managedSlots: true,\n  slots: /** @lends sap.ui.webcomponents.main.Tree.prototype */{\n    /**\n     * Defines the items of the <code>ui5-tree</code>. Tree items may have other tree items as children.\n     * <br><br>\n     * <b>Note:</b> Use <code>ui5-tree-item</code> for the intended design.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement,\n      propertyName: \"items\",\n      invalidateOnChildChange: true\n    },\n    /**\n     * Defines the <code>ui5-tree</code> header.\n     * <br><br>\n     * <b>Note:</b> When the <code>header</code> slot is set, the\n     * <code>headerText</code> property is ignored.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    header: {\n      type: HTMLElement\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.Tree.prototype */{\n    /**\n     * Fired when a tree item is expanded or collapsed.\n     * <i>Note:</i> You can call <code>preventDefault()</code> on the event object to suppress the event, if needed.\n     * This may be handy for example if you want to dynamically load tree items upon the user expanding a node.\n     * Even if you prevented the event's default behavior, you can always manually call <code>toggle()</code> on a tree item.\n     *\n     * @event sap.ui.webcomponents.main.Tree#item-toggle\n     * @param {HTMLElement} item the toggled item.\n     * @public\n     */\n    \"item-toggle\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n    /**\n     * Fired when a tree item is activated.\n     *\n     * @event sap.ui.webcomponents.main.Tree#item-click\n     * @param {HTMLElement} item the clicked item.\n     * @public\n     */\n    \"item-click\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n    /**\n     * Fired when the Delete button of any tree item is pressed.\n     * <br><br>\n     * <b>Note:</b> A Delete button is displayed on each item,\n     * when the <code>ui5-tree</code> <code>mode</code> property is set to <code>Delete</code>.\n     *\n     * @event sap.ui.webcomponents.main.Tree#item-delete\n     * @param {HTMLElement} item the deleted item.\n     * @public\n     */\n    \"item-delete\": {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    },\n    /**\n     * Fired when selection is changed by user interaction\n     * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.\n     *\n     * @event sap.ui.webcomponents.main.Tree#selection-change\n     * @param {Array} selectedItems An array of the selected items.\n     * @param {Array} previouslySelectedItems An array of the previously selected items.\n     * @public\n     */\n    \"selection-change\": {\n      detail: {\n        selectedItems: {\n          type: Array\n        },\n        previouslySelectedItems: {\n          type: Array\n        }\n      }\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>ui5-tree</code> component provides a tree structure for displaying data in a hierarchy.\n *\n * <h3>Keyboard Handling</h3>\n * <code>ui5-tree</code> provides advanced keyboard handling. You can use the up/down arrow keys to navigate to the previous/next item in the list,\n * representing the tree, regardless of nesting, but also the left/right arrow keys to drill down and go up the tree. If you press the right arrow\n * on a tree node, it will expand, if not expanded. If you press the right arrow key once more, the first child of this node will be selected.\n * If you press the left arrow on a tree node, it will collapse, if expanded. If you press the left arrow key once more, the parent node of this\n * tree node will be selected.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import @ui5/webcomponents/dist/Tree.js\";</code>\n * <br>\n * <code>import @ui5/webcomponents/dist/TreeItem.js\";</code> (for its respective item element)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Tree\n * @extends UI5Element\n * @tagname ui5-tree\n * @appenddocs TreeItem\n * @public\n * @since 1.0.0-rc.8\n */\nclass Tree extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get styles() {\n    return TreeCss;\n  }\n  static get template() {\n    return TreeTemplate;\n  }\n  static get dependencies() {\n    return [List, TreeListItem, TreeItem];\n  }\n  onBeforeRendering() {\n    this._listItems = [];\n    buildTree(this, 1, this._listItems);\n  }\n  get list() {\n    return this.getDomRef();\n  }\n  get _role() {\n    return \"tree\";\n  }\n  _onListItemStepIn(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    if (treeItem.items.length > 0) {\n      const firstChild = treeItem.items[0];\n      const firstChildListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === firstChild);\n      firstChildListItem && this.list.focusItem(firstChildListItem);\n    }\n  }\n  _onListItemStepOut(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    if (treeItem.parentElement !== this) {\n      const parent = treeItem.parentElement;\n      const parentListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === parent);\n      parentListItem && this.list.focusItem(parentListItem);\n    }\n  }\n  _onListItemToggle(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    const defaultPrevented = !this.fireEvent(\"item-toggle\", {\n      item: treeItem\n    }, true);\n    if (!defaultPrevented) {\n      treeItem.toggle();\n    }\n  }\n  _onListItemClick(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    this.fireEvent(\"item-click\", {\n      item: treeItem\n    });\n  }\n  _onListItemDelete(event) {\n    const listItem = event.detail.item;\n    const treeItem = listItem.treeItem;\n    this.fireEvent(\"item-delete\", {\n      item: treeItem\n    });\n  }\n  _onListSelectionChange(event) {\n    const previouslySelectedItems = event.detail.previouslySelectedItems.map(item => item.treeItem);\n    const selectedItems = event.detail.selectedItems.map(item => item.treeItem);\n    previouslySelectedItems.forEach(item => {\n      item.selected = false;\n    });\n    selectedItems.forEach(item => {\n      item.selected = true;\n    });\n    this.fireEvent(\"selection-change\", {\n      previouslySelectedItems,\n      selectedItems\n    });\n  }\n\n  /**\n   * Returns the corresponding list item for a given tree item\n   *\n   * @param item The tree item\n   * @protected\n   */\n  _getListItemForTreeItem(item) {\n    return this.list.items.find(listItem => listItem.treeItem === item);\n  }\n\n  /**\n   * Perform Depth-First-Search walk on the tree and run a callback on each node\n   *\n   * @public\n   * @param {function} callback function to execute on each node of the tree with 2 arguments: the node and the level\n   */\n  walk(callback) {\n    walkTree(this, 1, callback);\n  }\n}\nconst walkTree = (el, level, callback) => {\n  el.items.forEach(item => {\n    callback(item, level);\n    if (item.items.length > 0) {\n      walkTree(item, level + 1, callback);\n    }\n  });\n};\nconst buildTree = (el, level, result) => {\n  el.items.forEach(item => {\n    const listItem = {\n      treeItem: item,\n      level\n    };\n    result.push(listItem);\n    if (item.expanded && item.items.length > 0) {\n      buildTree(item, level + 1, result);\n    }\n  });\n};\nTree.define();\nexport default Tree;","map":{"version":3,"names":["UI5Element","litRender","TreeItem","List","TreeListItem","ListMode","TreeTemplate","TreeCss","metadata","tag","properties","mode","type","defaultValue","None","noDataText","String","headerText","footerText","_listItems","Object","multiple","_toggleButtonEnd","Boolean","_minimal","managedSlots","slots","HTMLElement","propertyName","invalidateOnChildChange","header","events","detail","item","selectedItems","Array","previouslySelectedItems","Tree","render","styles","template","dependencies","onBeforeRendering","buildTree","list","getDomRef","_role","_onListItemStepIn","event","listItem","treeItem","items","length","firstChild","firstChildListItem","getSlottedNodes","find","li","focusItem","_onListItemStepOut","parentElement","parent","parentListItem","_onListItemToggle","defaultPrevented","fireEvent","toggle","_onListItemClick","_onListItemDelete","_onListSelectionChange","map","forEach","selected","_getListItemForTreeItem","walk","callback","walkTree","el","level","result","push","expanded","define"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/Tree.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport TreeItem from \"./TreeItem.js\";\nimport List from \"./List.js\";\nimport TreeListItem from \"./TreeListItem.js\";\nimport ListMode from \"./types/ListMode.js\";\n\n// Template\nimport TreeTemplate from \"./generated/templates/TreeTemplate.lit.js\";\n\n// Styles\nimport TreeCss from \"./generated/themes/Tree.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-tree\",\n\tproperties: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {\n\t\t/**\n\t\t * Defines the mode of the <code>ui5-tree</code>. Since the tree uses a <code>ui5-list</code> to display its structure,\n\t\t * the tree modes are exactly the same as the list modes, and are all applicable.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Available options are <code>None</code>, <code>SingleSelect</code>, <code>SingleSelectBegin</code>,\n\t\t * <code>SingleSelectEnd</code>, <code>MultiSelect</code>, and <code>Delete</code>.\n\t\t *\n\t\t * @public\n\t\t * @type {ListMode}\n\t\t * @defaultValue \"None\"\n\t\t */\n\t\tmode: {\n\t\t\ttype: ListMode,\n\t\t\tdefaultValue: ListMode.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text that is displayed when the <code>ui5-tree</code> contains no items.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tnoDataText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>ui5-tree</code> header text.\n\t\t * <br><br>\n\t\t * <b>Note:</b> If the <code>header</code> slot is set, this property is ignored.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\theaderText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>ui5-tree</code> footer text.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tfooterText: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * An array, containing a flat structure of list items to render\n\t\t *\n\t\t * @private\n\t\t */\n\t\t_listItems: {\n\t\t\ttype: Object,\n\t\t\tmultiple: true,\n\t\t},\n\n\t\t/**\n\t\t * Shows the toggle button at the end, rather than at the beginning of the items\n\t\t *\n\t\t * @protected\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t_toggleButtonEnd: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Represents the tree in a very minimal state - icons only with no text and no toggle buttons\n\t\t *\n\t\t * @protected\n\t\t * @since 1.0.0-rc.8\n\t\t */\n\t\t_minimal: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {\n\n\t\t/**\n\t\t * Defines the items of the <code>ui5-tree</code>. Tree items may have other tree items as children.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use <code>ui5-tree-item</code> for the intended design.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t\tinvalidateOnChildChange: true,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>ui5-tree</code> header.\n\t\t * <br><br>\n\t\t * <b>Note:</b> When the <code>header</code> slot is set, the\n\t\t * <code>headerText</code> property is ignored.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\theader: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.Tree.prototype */ {\n\n\t\t/**\n\t\t * Fired when a tree item is expanded or collapsed.\n\t\t * <i>Note:</i> You can call <code>preventDefault()</code> on the event object to suppress the event, if needed.\n\t\t * This may be handy for example if you want to dynamically load tree items upon the user expanding a node.\n\t\t * Even if you prevented the event's default behavior, you can always manually call <code>toggle()</code> on a tree item.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#item-toggle\n\t\t * @param {HTMLElement} item the toggled item.\n\t\t * @public\n\t\t */\n\t\t\"item-toggle\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when a tree item is activated.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#item-click\n\t\t * @param {HTMLElement} item the clicked item.\n\t\t * @public\n\t\t */\n\t\t\"item-click\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when the Delete button of any tree item is pressed.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A Delete button is displayed on each item,\n\t\t * when the <code>ui5-tree</code> <code>mode</code> property is set to <code>Delete</code>.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#item-delete\n\t\t * @param {HTMLElement} item the deleted item.\n\t\t * @public\n\t\t */\n\t\t\"item-delete\": {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Fired when selection is changed by user interaction\n\t\t * in <code>SingleSelect</code>, <code>SingleSelectBegin</code>, <code>SingleSelectEnd</code> and <code>MultiSelect</code> modes.\n\t\t *\n\t\t * @event sap.ui.webcomponents.main.Tree#selection-change\n\t\t * @param {Array} selectedItems An array of the selected items.\n\t\t * @param {Array} previouslySelectedItems An array of the previously selected items.\n\t\t * @public\n\t\t */\n\t\t\"selection-change\": {\n\t\t\tdetail: {\n\t\t\t\tselectedItems: { type: Array },\n\t\t\t\tpreviouslySelectedItems: { type: Array },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The <code>ui5-tree</code> component provides a tree structure for displaying data in a hierarchy.\n *\n * <h3>Keyboard Handling</h3>\n * <code>ui5-tree</code> provides advanced keyboard handling. You can use the up/down arrow keys to navigate to the previous/next item in the list,\n * representing the tree, regardless of nesting, but also the left/right arrow keys to drill down and go up the tree. If you press the right arrow\n * on a tree node, it will expand, if not expanded. If you press the right arrow key once more, the first child of this node will be selected.\n * If you press the left arrow on a tree node, it will collapse, if expanded. If you press the left arrow key once more, the parent node of this\n * tree node will be selected.\n *\n * <h3>ES6 Module Import</h3>\n * <code>import @ui5/webcomponents/dist/Tree.js\";</code>\n * <br>\n * <code>import @ui5/webcomponents/dist/TreeItem.js\";</code> (for its respective item element)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Tree\n * @extends UI5Element\n * @tagname ui5-tree\n * @appenddocs TreeItem\n * @public\n * @since 1.0.0-rc.8\n */\nclass Tree extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn TreeCss;\n\t}\n\n\tstatic get template() {\n\t\treturn TreeTemplate;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tList,\n\t\t\tTreeListItem,\n\t\t\tTreeItem,\n\t\t];\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._listItems = [];\n\t\tbuildTree(this, 1, this._listItems);\n\t}\n\n\tget list() {\n\t\treturn this.getDomRef();\n\t}\n\n\tget _role() {\n\t\treturn \"tree\";\n\t}\n\n\t_onListItemStepIn(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tif (treeItem.items.length > 0) {\n\t\t\tconst firstChild = treeItem.items[0];\n\t\t\tconst firstChildListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === firstChild);\n\t\t\tfirstChildListItem && this.list.focusItem(firstChildListItem);\n\t\t}\n\t}\n\n\t_onListItemStepOut(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tif (treeItem.parentElement !== this) {\n\t\t\tconst parent = treeItem.parentElement;\n\t\t\tconst parentListItem = this.list.getSlottedNodes(\"items\").find(li => li.treeItem === parent);\n\t\t\tparentListItem && this.list.focusItem(parentListItem);\n\t\t}\n\t}\n\n\t_onListItemToggle(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tconst defaultPrevented = !this.fireEvent(\"item-toggle\", { item: treeItem }, true);\n\t\tif (!defaultPrevented) {\n\t\t\ttreeItem.toggle();\n\t\t}\n\t}\n\n\t_onListItemClick(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tthis.fireEvent(\"item-click\", { item: treeItem });\n\t}\n\n\t_onListItemDelete(event) {\n\t\tconst listItem = event.detail.item;\n\t\tconst treeItem = listItem.treeItem;\n\t\tthis.fireEvent(\"item-delete\", { item: treeItem });\n\t}\n\n\t_onListSelectionChange(event) {\n\t\tconst previouslySelectedItems = event.detail.previouslySelectedItems.map(item => item.treeItem);\n\t\tconst selectedItems = event.detail.selectedItems.map(item => item.treeItem);\n\n\t\tpreviouslySelectedItems.forEach(item => {\n\t\t\titem.selected = false;\n\t\t});\n\t\tselectedItems.forEach(item => {\n\t\t\titem.selected = true;\n\t\t});\n\n\t\tthis.fireEvent(\"selection-change\", {\n\t\t\tpreviouslySelectedItems,\n\t\t\tselectedItems,\n\t\t});\n\t}\n\n\t/**\n\t * Returns the corresponding list item for a given tree item\n\t *\n\t * @param item The tree item\n\t * @protected\n\t */\n\t_getListItemForTreeItem(item) {\n\t\treturn this.list.items.find(listItem => listItem.treeItem === item);\n\t}\n\n\t/**\n\t * Perform Depth-First-Search walk on the tree and run a callback on each node\n\t *\n\t * @public\n\t * @param {function} callback function to execute on each node of the tree with 2 arguments: the node and the level\n\t */\n\twalk(callback) {\n\t\twalkTree(this, 1, callback);\n\t}\n}\n\nconst walkTree = (el, level, callback) => {\n\tel.items.forEach(item => {\n\t\tcallback(item, level);\n\t\tif (item.items.length > 0) {\n\t\t\twalkTree(item, level + 1, callback);\n\t\t}\n\t});\n};\n\nconst buildTree = (el, level, result) => {\n\tel.items.forEach(item => {\n\t\tconst listItem = {\n\t\t\ttreeItem: item,\n\t\t\tlevel,\n\t\t};\n\n\t\tresult.push(listItem);\n\t\tif (item.expanded && item.items.length > 0) {\n\t\t\tbuildTree(item, level + 1, result);\n\t\t}\n\t});\n};\n\nTree.define();\n\nexport default Tree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}