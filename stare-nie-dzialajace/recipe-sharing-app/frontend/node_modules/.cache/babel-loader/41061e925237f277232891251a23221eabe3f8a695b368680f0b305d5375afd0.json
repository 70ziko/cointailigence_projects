{"ast":null,"code":"import getSharedResource from \"./getSharedResource.js\";\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\nconst DEFAULT_COLLECTION = \"SAP-icons\";\nconst parseName = name => {\n  // silently support ui5-compatible URIs\n  if (name.startsWith(\"sap-icon://\")) {\n    name = name.replace(\"sap-icon://\", \"\");\n  }\n  let collection;\n  [name, collection] = name.split(\"/\").reverse();\n  collection = collection || DEFAULT_COLLECTION;\n  // hardcoded alias in case icon explorer is used, resolve `SAP-icons-TNT` to `tnt`\n  // aliases can be made a feature in the future if more collections need it or more aliases are needed.\n  if (collection === \"SAP-icons-TNT\") {\n    collection = \"tnt\";\n  }\n  const registryKey = `${collection}/${name}`;\n  return {\n    name,\n    collection,\n    registryKey\n  };\n};\nconst registerIcon = (name, {\n  pathData,\n  ltr,\n  accData,\n  collection\n} = {}) => {\n  // eslint-disable-line\n  if (!collection) {\n    collection = DEFAULT_COLLECTION;\n  }\n  const key = `${collection}/${name}`;\n  registry.set(key, {\n    pathData,\n    ltr,\n    accData\n  });\n};\nconst getIconDataSync = nameProp => {\n  const {\n    registryKey\n  } = parseName(nameProp);\n  return registry.get(registryKey);\n};\nconst getIconData = async nameProp => {\n  const {\n    collection,\n    registryKey\n  } = parseName(nameProp);\n  if (!iconCollectionPromises.has(collection)) {\n    iconCollectionPromises.set(collection, Promise.resolve(ICON_NOT_FOUND));\n  }\n  const iconData = await iconCollectionPromises.get(collection);\n  if (iconData === ICON_NOT_FOUND) {\n    return iconData;\n  }\n  return registry.get(registryKey);\n};\nconst getRegisteredNames = async () => {\n  await Promise.all(Array.from(iconCollectionPromises.values()));\n  return Array.from(registry.keys());\n};\nconst registerCollectionPromise = (collection, promise) => {\n  iconCollectionPromises.set(collection, promise);\n};\nexport { getIconData, getIconDataSync, registerIcon, getRegisteredNames, registerCollectionPromise };","map":{"version":3,"names":["getSharedResource","registry","Map","iconCollectionPromises","ICON_NOT_FOUND","DEFAULT_COLLECTION","parseName","name","startsWith","replace","collection","split","reverse","registryKey","registerIcon","pathData","ltr","accData","key","set","getIconDataSync","nameProp","get","getIconData","has","Promise","resolve","iconData","getRegisteredNames","all","Array","from","values","keys","registerCollectionPromise","promise"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-base/dist/SVGIconRegistry.js"],"sourcesContent":["import getSharedResource from \"./getSharedResource.js\";\n\nconst registry = getSharedResource(\"SVGIcons.registry\", new Map());\nconst iconCollectionPromises = getSharedResource(\"SVGIcons.promises\", new Map());\n\nconst ICON_NOT_FOUND = \"ICON_NOT_FOUND\";\nconst DEFAULT_COLLECTION = \"SAP-icons\";\n\nconst parseName = name => {\n\t// silently support ui5-compatible URIs\n\tif (name.startsWith(\"sap-icon://\")) {\n\t\tname = name.replace(\"sap-icon://\", \"\");\n\t}\n\n\tlet collection;\n\t[name, collection] = name.split(\"/\").reverse();\n\tcollection = collection || DEFAULT_COLLECTION;\n\t// hardcoded alias in case icon explorer is used, resolve `SAP-icons-TNT` to `tnt`\n\t// aliases can be made a feature in the future if more collections need it or more aliases are needed.\n\tif (collection === \"SAP-icons-TNT\") {\n\t\tcollection = \"tnt\";\n\t}\n\tconst registryKey = `${collection}/${name}`;\n\treturn { name, collection, registryKey };\n};\n\n\nconst registerIcon = (name, { pathData, ltr, accData, collection } = {}) => { // eslint-disable-line\n\tif (!collection) {\n\t\tcollection = DEFAULT_COLLECTION;\n\t}\n\n\tconst key = `${collection}/${name}`;\n\tregistry.set(key, { pathData, ltr, accData });\n};\n\nconst getIconDataSync = nameProp => {\n\tconst { registryKey } = parseName(nameProp);\n\treturn registry.get(registryKey);\n};\n\nconst getIconData = async nameProp => {\n\tconst { collection, registryKey } = parseName(nameProp);\n\n\tif (!iconCollectionPromises.has(collection)) {\n\t\ticonCollectionPromises.set(collection, Promise.resolve(ICON_NOT_FOUND));\n\t}\n\n\tconst iconData = await iconCollectionPromises.get(collection);\n\n\tif (iconData === ICON_NOT_FOUND) {\n\t\treturn iconData;\n\t}\n\n\treturn registry.get(registryKey);\n};\n\nconst getRegisteredNames = async () => {\n\tawait Promise.all(Array.from(iconCollectionPromises.values()));\n\treturn Array.from(registry.keys());\n};\n\nconst registerCollectionPromise = (collection, promise) => {\n\ticonCollectionPromises.set(collection, promise);\n};\n\nexport {\n\tgetIconData,\n\tgetIconDataSync,\n\tregisterIcon,\n\tgetRegisteredNames,\n\tregisterCollectionPromise,\n};\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,wBAAwB;AAEtD,MAAMC,QAAQ,GAAGD,iBAAiB,CAAC,mBAAmB,EAAE,IAAIE,GAAG,CAAC,CAAC,CAAC;AAClE,MAAMC,sBAAsB,GAAGH,iBAAiB,CAAC,mBAAmB,EAAE,IAAIE,GAAG,CAAC,CAAC,CAAC;AAEhF,MAAME,cAAc,GAAG,gBAAgB;AACvC,MAAMC,kBAAkB,GAAG,WAAW;AAEtC,MAAMC,SAAS,GAAGC,IAAI,IAAI;EACzB;EACA,IAAIA,IAAI,CAACC,UAAU,CAAC,aAAa,CAAC,EAAE;IACnCD,IAAI,GAAGA,IAAI,CAACE,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;EACvC;EAEA,IAAIC,UAAU;EACd,CAACH,IAAI,EAAEG,UAAU,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC;EAC9CF,UAAU,GAAGA,UAAU,IAAIL,kBAAkB;EAC7C;EACA;EACA,IAAIK,UAAU,KAAK,eAAe,EAAE;IACnCA,UAAU,GAAG,KAAK;EACnB;EACA,MAAMG,WAAW,GAAI,GAAEH,UAAW,IAAGH,IAAK,EAAC;EAC3C,OAAO;IAAEA,IAAI;IAAEG,UAAU;IAAEG;EAAY,CAAC;AACzC,CAAC;AAGD,MAAMC,YAAY,GAAGA,CAACP,IAAI,EAAE;EAAEQ,QAAQ;EAAEC,GAAG;EAAEC,OAAO;EAAEP;AAAW,CAAC,GAAG,CAAC,CAAC,KAAK;EAAE;EAC7E,IAAI,CAACA,UAAU,EAAE;IAChBA,UAAU,GAAGL,kBAAkB;EAChC;EAEA,MAAMa,GAAG,GAAI,GAAER,UAAW,IAAGH,IAAK,EAAC;EACnCN,QAAQ,CAACkB,GAAG,CAACD,GAAG,EAAE;IAAEH,QAAQ;IAAEC,GAAG;IAAEC;EAAQ,CAAC,CAAC;AAC9C,CAAC;AAED,MAAMG,eAAe,GAAGC,QAAQ,IAAI;EACnC,MAAM;IAAER;EAAY,CAAC,GAAGP,SAAS,CAACe,QAAQ,CAAC;EAC3C,OAAOpB,QAAQ,CAACqB,GAAG,CAACT,WAAW,CAAC;AACjC,CAAC;AAED,MAAMU,WAAW,GAAG,MAAMF,QAAQ,IAAI;EACrC,MAAM;IAAEX,UAAU;IAAEG;EAAY,CAAC,GAAGP,SAAS,CAACe,QAAQ,CAAC;EAEvD,IAAI,CAAClB,sBAAsB,CAACqB,GAAG,CAACd,UAAU,CAAC,EAAE;IAC5CP,sBAAsB,CAACgB,GAAG,CAACT,UAAU,EAAEe,OAAO,CAACC,OAAO,CAACtB,cAAc,CAAC,CAAC;EACxE;EAEA,MAAMuB,QAAQ,GAAG,MAAMxB,sBAAsB,CAACmB,GAAG,CAACZ,UAAU,CAAC;EAE7D,IAAIiB,QAAQ,KAAKvB,cAAc,EAAE;IAChC,OAAOuB,QAAQ;EAChB;EAEA,OAAO1B,QAAQ,CAACqB,GAAG,CAACT,WAAW,CAAC;AACjC,CAAC;AAED,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMH,OAAO,CAACI,GAAG,CAACC,KAAK,CAACC,IAAI,CAAC5B,sBAAsB,CAAC6B,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9D,OAAOF,KAAK,CAACC,IAAI,CAAC9B,QAAQ,CAACgC,IAAI,CAAC,CAAC,CAAC;AACnC,CAAC;AAED,MAAMC,yBAAyB,GAAGA,CAACxB,UAAU,EAAEyB,OAAO,KAAK;EAC1DhC,sBAAsB,CAACgB,GAAG,CAACT,UAAU,EAAEyB,OAAO,CAAC;AAChD,CAAC;AAED,SACCZ,WAAW,EACXH,eAAe,EACfN,YAAY,EACZc,kBAAkB,EAClBM,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}