{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport { isEnter, isSpace } from \"@ui5/webcomponents-base/dist/Keys.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarBackgroundColor from \"./types/AvatarBackgroundColor.js\";\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n  [AvatarSize.XS]: {\n    [AvatarGroupType.Individual]: \"0.0625rem\",\n    [AvatarGroupType.Group]: \"-0.75rem\"\n  },\n  [AvatarSize.S]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \"-1.25rem\"\n  },\n  [AvatarSize.M]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \"-1.62rem\"\n  },\n  [AvatarSize.L]: {\n    [AvatarGroupType.Individual]: \"0.125rem\",\n    [AvatarGroupType.Group]: \" -2rem\"\n  },\n  [AvatarSize.XL]: {\n    [AvatarGroupType.Individual]: \"0.25rem\",\n    [AvatarGroupType.Group]: \"-2.7rem\"\n  }\n};\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-avatar-group\",\n  managedSlots: true,\n  properties: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */{\n    /**\n    \t * Defines the mode of the <code>AvatarGroup</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>Group</code></li>\n     * <li><code>Individual</code></li>\n     * <ul>\n     * @type {AvatarGroupType}\n     * @defaultValue \"Group\"\n     * @public\n     */\n    type: {\n      type: String,\n      defaultValue: AvatarGroupType.Group\n    },\n    /**\n     * Defines predefined size of the <code>ui5-avatar</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>XS</code></li>\n     * <li><code>S</code></li>\n     * <li><code>M</code></li>\n     * <li><code>L</code></li>\n     * <li><code>XL</code></li>\n     * <ul>\n     * @type {AvatarSize}\n     * @defaultValue \"S\"\n     * @public\n     */\n    avatarSize: {\n      type: String,\n      defaultValue: AvatarSize.S\n    },\n    /**\n     * @private\n     */\n    _overflowButtonText: {\n      type: String,\n      noAttribute: true\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */{\n    /**\n     * Defines the items of the <code>ui5-avatar-group</code>.\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      type: HTMLElement,\n      propertyName: \"items\"\n    }\n  },\n  events: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */{\n    /**\n    * Fired when the <code>ui5-avatar-group</code> is activated either with a\n    * click/tap or by using the Enter or Space key.\n    * @param {HTMLElement} targetRef The DOM ref of the clicked item.\n    * @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n    * @event\n    * @public\n    * @since 1.0.0-rc.11\n    */\n    click: {\n      detail: {\n        targetRef: {\n          type: HTMLElement\n        },\n        overflowButtonClicked: {\n          type: Boolean\n        }\n      }\n    }\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n  constructor() {\n    super();\n    this._itemNavigation = new ItemNavigation(this, {\n      getItemsCallback: () => {\n        return this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n      }\n    });\n    this._colorIndex = 0;\n    this._hiddenItems = 0;\n    this._onResizeHandler = this._onResize.bind(this);\n  }\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get template() {\n    return AvatarGroupTemplate;\n  }\n  static get styles() {\n    return AvatarGroupCss;\n  }\n  static get dependencies() {\n    return [Button];\n  }\n\n  /**\n   * Returns an array containing the ui5-avatar instances that are currently not displayed due to lack of space.\n   * @readonly\n   * @type { Array }\n   * @defaultValue []\n   * @public\n   */\n  get hiddenItems() {\n    return this.items.slice(this._hiddenStartIndex);\n  }\n\n  /**\n   * Returns an array containing the <code>AvatarBackgroundColor</code> values that correspond to the avatars in the <code>items</code> array.\n   * @readonly\n   * @type { Array }\n   * @defaultValue []\n   * @public\n   */\n  get colorScheme() {\n    return this.items.map(avatar => avatar._effectiveBackgroundColor);\n  }\n  get _hiddenStartIndex() {\n    return this._itemsCount - this._hiddenItems;\n  }\n  get _overflowBtnHidden() {\n    return this._hiddenItems === 0;\n  }\n  get _isGroup() {\n    return this.type === AvatarGroupType.Group;\n  }\n  get _itemsCount() {\n    return this.items.length;\n  }\n  get _groupTabIndex() {\n    return this._isGroup ? \"0\" : \"-1\";\n  }\n  get _overflowButtonTabIndex() {\n    return this._isGroup ? \"-1\" : false;\n  }\n  get _overflowButton() {\n    return this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n  }\n\n  /**\n   * Return the effective overflow button width\n   * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n   *\n   * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n   * 2) In case of \"Individual\" group type width is directly taken from button element\n   * @private\n   */\n  get _overflowButtonEffectiveWidth() {\n    // if in \"Group\" mode overflow button size is equal to the offset from second item\n    if (this._isGroup) {\n      let item = this.items[1];\n\n      // in some cases when second avatar is overflowed the offset of the button is the right one\n      if (!item || item.hidden) {\n        item = this._overflowButton;\n      }\n      return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n    }\n    return this._overflowButton.offsetWidth;\n  }\n  onAfterRendering() {\n    this._overflowItems();\n  }\n  onBeforeRendering() {\n    this._prepareAvatars();\n  }\n  onEnterDOM() {\n    ResizeHandler.register(this, this._onResizeHandler);\n  }\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._onResizeHandler);\n  }\n  _onResize() {\n    this._overflowItems();\n  }\n  _onkeydown(event) {\n    if (isEnter(event)) {\n      this._fireGroupEvent(event.target);\n    }\n    if (isSpace(event)) {\n      // prevent scrolling\n      event.preventDefault();\n    }\n  }\n  _onkeyup(event) {\n    if (!event.shiftKey && isSpace(event)) {\n      event.preventDefault();\n      this._fireGroupEvent(event.target);\n    }\n  }\n  _fireGroupEvent(targetRef) {\n    const isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS);\n    this.fireEvent(\"click\", {\n      targetRef,\n      overflowButtonClicked: isOverflowButtonClicked\n    });\n  }\n  _onGroupClick(event) {\n    event.stopPropagation();\n    if (event.isMarked === \"avatar\" || event.isMarked === \"button\" || this._isGroup) {\n      this._fireGroupEvent(event.target);\n    }\n  }\n  _onUI5Click(event) {\n    event.stopPropagation();\n  }\n\n  /**\n   * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n   * Set the margins (offsets) based on RTL/LTR.\n   * @private\n   */\n  _prepareAvatars() {\n    const RTL = this.effectiveDir === \"rtl\";\n    this._colorIndex = 0;\n    this.items.forEach((avatar, index) => {\n      const colorIndex = this._getNextBackgroundColor();\n      avatar.interactive = !this._isGroup;\n      if (!avatar.getAttribute(\"background-color\")) {\n        // AvatarGroup respects colors set to ui5-avatar\n        avatar.setAttribute(\"_background-color\", AvatarBackgroundColor[`Accent${colorIndex}`]);\n      }\n      if (!avatar.getAttribute(\"size\")) {\n        // AvatarGroup respects sizes set to ui5-avatar\n        avatar.setAttribute(\"_size\", this.avatarSize);\n      }\n\n      // last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n      if (index !== this._itemsCount - 1) {\n        // based on RTL margin left or right is set to avatars\n        avatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n      }\n    });\n  }\n  _onfocusin(event) {\n    const target = event.target;\n    this._itemNavigation.update(target);\n  }\n\n  /**\n   * Returns the total width to item excluding the item width\n   * RTL/LTR aware\n   * @private\n   * @param {HTMLElement} item\n   */\n  _getWidthToItem(item) {\n    const isRTL = this.effectiveDir === \"rtl\";\n    if (isRTL) {\n      // in RTL the total width is equal to difference of the parent container width and\n      // how much is the item offset to the left minus its offsetWidth\n      return item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n    }\n\n    // in LTR the width is equal to item.offsetLeft\n    return item.offsetLeft;\n  }\n\n  /**\n   * Overflows items that were not able to fit the container\n   * @private\n   */\n  _overflowItems() {\n    if (this.items.length < 2) {\n      // no need to overflow avatars\n      return;\n    }\n    let hiddenItems = 0;\n    for (let index = 0; index < this._itemsCount; index++) {\n      const item = this.items[index];\n\n      // show item to determine if it will fit the new container size\n      item.hidden = false;\n\n      // container width to current item + item width (avatar)\n      // used to determine whether the following items will fit the container or not\n      let totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n      if (index !== this._itemsCount - 1) {\n        totalWidth += this._overflowButtonEffectiveWidth;\n      }\n      if (totalWidth > this.offsetWidth) {\n        hiddenItems = this._itemsCount - index;\n        break;\n      }\n    }\n\n    // hide the items that did not fit the container size\n    this._setHiddenItems(hiddenItems);\n  }\n  _getNextBackgroundColor() {\n    // counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n    if (++this._colorIndex > 10) {\n      this._colorIndex = 1;\n    }\n    return this._colorIndex;\n  }\n  _setHiddenItems(hiddenItems) {\n    this._hiddenItems = hiddenItems;\n    this.items.forEach((item, index) => {\n      item.hidden = index >= this._hiddenStartIndex;\n    });\n    this._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n  }\n}\nAvatarGroup.define();\nexport default AvatarGroup;","map":{"version":3,"names":["UI5Element","litRender","ResizeHandler","ItemNavigation","isEnter","isSpace","AvatarGroupTemplate","AvatarGroupCss","Button","AvatarSize","AvatarGroupType","AvatarBackgroundColor","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","XS","Individual","Group","S","M","L","XL","metadata","tag","managedSlots","properties","type","String","defaultValue","avatarSize","_overflowButtonText","noAttribute","slots","HTMLElement","propertyName","events","click","detail","targetRef","overflowButtonClicked","Boolean","AvatarGroup","constructor","_itemNavigation","getItemsCallback","_isGroup","items","slice","_hiddenStartIndex","_colorIndex","_hiddenItems","_onResizeHandler","_onResize","bind","render","template","styles","dependencies","hiddenItems","colorScheme","map","avatar","_effectiveBackgroundColor","_itemsCount","_overflowBtnHidden","length","_groupTabIndex","_overflowButtonTabIndex","_overflowButton","shadowRoot","querySelector","_overflowButtonEffectiveWidth","item","hidden","effectiveDir","_getWidthToItem","offsetLeft","offsetWidth","onAfterRendering","_overflowItems","onBeforeRendering","_prepareAvatars","onEnterDOM","register","onExitDOM","deregister","_onkeydown","event","_fireGroupEvent","target","preventDefault","_onkeyup","shiftKey","isOverflowButtonClicked","classList","contains","fireEvent","_onGroupClick","stopPropagation","isMarked","_onUI5Click","RTL","forEach","index","colorIndex","_getNextBackgroundColor","interactive","getAttribute","setAttribute","style","_effectiveSize","_onfocusin","update","isRTL","offsetParent","totalWidth","_setHiddenItems","define"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/AvatarGroup.js"],"sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport {\n\tisEnter,\n\tisSpace,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarBackgroundColor from \"./types/AvatarBackgroundColor.js\";\n\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n\t[AvatarSize.XS]: {\n\t\t[AvatarGroupType.Individual]: \"0.0625rem\",\n\t\t[AvatarGroupType.Group]: \"-0.75rem\",\n\t},\n\t[AvatarSize.S]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.25rem\",\n\t},\n\t[AvatarSize.M]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.62rem\",\n\t},\n\t[AvatarSize.L]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \" -2rem\",\n\t},\n\t[AvatarSize.XL]: {\n\t\t[AvatarGroupType.Individual]: \"0.25rem\",\n\t\t[AvatarGroupType.Group]: \"-2.7rem\",\n\t},\n};\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-avatar-group\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */  {\n\n\t\t/**\n\t \t * Defines the mode of the <code>AvatarGroup</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>Group</code></li>\n\t\t * <li><code>Individual</code></li>\n\t\t * <ul>\n\t\t * @type {AvatarGroupType}\n\t\t * @defaultValue \"Group\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: AvatarGroupType.Group,\n\t\t},\n\n\t\t/**\n\t\t * Defines predefined size of the <code>ui5-avatar</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>XS</code></li>\n\t\t * <li><code>S</code></li>\n\t\t * <li><code>M</code></li>\n\t\t * <li><code>L</code></li>\n\t\t * <li><code>XL</code></li>\n\t\t * <ul>\n\t\t * @type {AvatarSize}\n\t\t * @defaultValue \"S\"\n\t\t * @public\n\t\t */\n\t\tavatarSize: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: AvatarSize.S,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_overflowButtonText: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t * Defines the items of the <code>ui5-avatar-group</code>.\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t* Fired when the <code>ui5-avatar-group</code> is activated either with a\n\t\t* click/tap or by using the Enter or Space key.\n\t\t* @param {HTMLElement} targetRef The DOM ref of the clicked item.\n\t\t* @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.11\n\t\t*/\n\t   click: {\n\t\t\tdetail: {\n\t\t\t\ttargetRef: { type: HTMLElement },\n\t\t\t\toverflowButtonClicked: { type: Boolean },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => {\n\t\t\t\treturn this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n\t\t\t},\n\t\t});\n\n\t\tthis._colorIndex = 0;\n\t\tthis._hiddenItems = 0;\n\t\tthis._onResizeHandler = this._onResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn AvatarGroupTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn AvatarGroupCss;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t];\n\t}\n\n\t/**\n\t * Returns an array containing the ui5-avatar instances that are currently not displayed due to lack of space.\n\t * @readonly\n\t * @type { Array }\n\t * @defaultValue []\n\t * @public\n\t */\n\tget hiddenItems() {\n\t\treturn this.items.slice(this._hiddenStartIndex);\n\t}\n\n\t/**\n\t * Returns an array containing the <code>AvatarBackgroundColor</code> values that correspond to the avatars in the <code>items</code> array.\n\t * @readonly\n\t * @type { Array }\n\t * @defaultValue []\n\t * @public\n\t */\n\tget colorScheme() {\n\t\treturn this.items.map(avatar => avatar._effectiveBackgroundColor);\n\t}\n\n\tget _hiddenStartIndex() {\n\t\treturn this._itemsCount - this._hiddenItems;\n\t}\n\n\tget _overflowBtnHidden() {\n\t\treturn this._hiddenItems === 0;\n\t}\n\n\tget _isGroup() {\n\t\treturn this.type === AvatarGroupType.Group;\n\t}\n\n\tget _itemsCount() {\n\t\treturn this.items.length;\n\t}\n\n\tget _groupTabIndex() {\n\t\treturn this._isGroup ? \"0\" : \"-1\";\n\t}\n\n\tget _overflowButtonTabIndex() {\n\t\treturn this._isGroup ? \"-1\" : false;\n\t}\n\n\tget _overflowButton() {\n\t\treturn this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n\t}\n\n\t/**\n\t * Return the effective overflow button width\n\t * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n\t *\n\t * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n\t * 2) In case of \"Individual\" group type width is directly taken from button element\n\t * @private\n\t */\n\tget _overflowButtonEffectiveWidth() {\n\t\t// if in \"Group\" mode overflow button size is equal to the offset from second item\n\t\tif (this._isGroup) {\n\t\t\tlet item = this.items[1];\n\n\t\t\t// in some cases when second avatar is overflowed the offset of the button is the right one\n\t\t\tif (!item || item.hidden) {\n\t\t\t\titem = this._overflowButton;\n\t\t\t}\n\n\t\t\treturn this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n\t\t}\n\n\t\treturn this._overflowButton.offsetWidth;\n\t}\n\n\tonAfterRendering() {\n\t\tthis._overflowItems();\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._prepareAvatars();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._onResizeHandler);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResizeHandler);\n\t}\n\n\t_onResize() {\n\t\tthis._overflowItems();\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isEnter(event)) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\n\t\tif (isSpace(event)) {\n\t\t\t// prevent scrolling\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (!event.shiftKey && isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_fireGroupEvent(targetRef) {\n\t\tconst isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS);\n\n\t\tthis.fireEvent(\"click\", {\n\t\t\ttargetRef,\n\t\t\toverflowButtonClicked: isOverflowButtonClicked,\n\t\t});\n\t}\n\n\t_onGroupClick(event) {\n\t\tevent.stopPropagation();\n\t\tif (event.isMarked === \"avatar\" || event.isMarked === \"button\" || this._isGroup) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_onUI5Click(event) {\n\t\tevent.stopPropagation();\n\t}\n\n\t/**\n\t * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n\t * Set the margins (offsets) based on RTL/LTR.\n\t * @private\n\t */\n\t_prepareAvatars() {\n\t\tconst RTL = this.effectiveDir === \"rtl\";\n\t\tthis._colorIndex = 0;\n\n\t\tthis.items.forEach((avatar, index) => {\n\t\t\tconst colorIndex = this._getNextBackgroundColor();\n\t\t\tavatar.interactive = !this._isGroup;\n\n\t\t\tif (!avatar.getAttribute(\"background-color\")) {\n\t\t\t\t// AvatarGroup respects colors set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_background-color\", AvatarBackgroundColor[`Accent${colorIndex}`]);\n\t\t\t}\n\n\t\t\tif (!avatar.getAttribute(\"size\")) {\n\t\t\t\t// AvatarGroup respects sizes set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_size\", this.avatarSize);\n\t\t\t}\n\n\t\t\t// last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\t\t\tif (index !== this._itemsCount - 1) {\n\t\t\t\t// based on RTL margin left or right is set to avatars\n\t\t\t\tavatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n\t\t\t}\n\t\t});\n\t}\n\n\t_onfocusin(event) {\n\t\tconst target = event.target;\n\t\tthis._itemNavigation.update(target);\n\t}\n\n\t/**\n\t * Returns the total width to item excluding the item width\n\t * RTL/LTR aware\n\t * @private\n\t * @param {HTMLElement} item\n\t */\n\t_getWidthToItem(item) {\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\n\t\tif (isRTL) {\n\t\t\t// in RTL the total width is equal to difference of the parent container width and\n\t\t\t// how much is the item offset to the left minus its offsetWidth\n\t\t\treturn item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n\t\t}\n\n\t\t// in LTR the width is equal to item.offsetLeft\n\t\treturn item.offsetLeft;\n\t}\n\n\t/**\n\t * Overflows items that were not able to fit the container\n\t * @private\n\t */\n\t_overflowItems() {\n\t\tif (this.items.length < 2) {\n\t\t\t// no need to overflow avatars\n\t\t\treturn;\n\t\t}\n\n\t\tlet hiddenItems = 0;\n\n\t\tfor (let index = 0; index < this._itemsCount; index++) {\n\t\t\tconst item = this.items[index];\n\n\t\t\t// show item to determine if it will fit the new container size\n\t\t\titem.hidden = false;\n\n\t\t\t// container width to current item + item width (avatar)\n\t\t\t// used to determine whether the following items will fit the container or not\n\t\t\tlet totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n\t\t\tif (index !== this._itemsCount - 1) {\n\t\t\t\ttotalWidth += this._overflowButtonEffectiveWidth;\n\t\t\t}\n\n\t\t\tif (totalWidth > this.offsetWidth) {\n\t\t\t\thiddenItems = this._itemsCount - index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// hide the items that did not fit the container size\n\t\tthis._setHiddenItems(hiddenItems);\n\t}\n\n\t_getNextBackgroundColor() {\n\t\t// counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n\t\tif (++this._colorIndex > 10) {\n\t\t\tthis._colorIndex = 1;\n\t\t}\n\t\treturn this._colorIndex;\n\t}\n\n\t_setHiddenItems(hiddenItems) {\n\t\tthis._hiddenItems = hiddenItems;\n\n\t\tthis.items.forEach((item, index) => {\n\t\t\titem.hidden = index >= this._hiddenStartIndex;\n\t\t});\n\n\t\tthis._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n\t}\n}\n\nAvatarGroup.define();\n\nexport default AvatarGroup;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,4CAA4C;AACnE,OAAOC,SAAS,MAAM,sDAAsD;AAC5E,OAAOC,aAAa,MAAM,wDAAwD;AAClF,OAAOC,cAAc,MAAM,yDAAyD;AACpF,SACCC,OAAO,EACPC,OAAO,QACD,sCAAsC;;AAE7C;AACA,OAAOC,mBAAmB,MAAM,kDAAkD;AAClF;AACA,OAAOC,cAAc,MAAM,uCAAuC;AAElE,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,qBAAqB,MAAM,kCAAkC;AAEpE,MAAMC,kBAAkB,GAAG,+BAA+B;AAC1D,MAAMC,kCAAkC,GAAI,IAAGD,kBAAmB,EAAC;;AAEnE;AACA,MAAME,OAAO,GAAG;EACf,CAACL,UAAU,CAACM,EAAE,GAAG;IAChB,CAACL,eAAe,CAACM,UAAU,GAAG,WAAW;IACzC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACS,CAAC,GAAG;IACf,CAACR,eAAe,CAACM,UAAU,GAAG,UAAU;IACxC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACU,CAAC,GAAG;IACf,CAACT,eAAe,CAACM,UAAU,GAAG,UAAU;IACxC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACW,CAAC,GAAG;IACf,CAACV,eAAe,CAACM,UAAU,GAAG,UAAU;IACxC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B,CAAC;EACD,CAACR,UAAU,CAACY,EAAE,GAAG;IAChB,CAACX,eAAe,CAACM,UAAU,GAAG,SAAS;IACvC,CAACN,eAAe,CAACO,KAAK,GAAG;EAC1B;AACD,CAAC;;AAED;AACA;AACA;AACA,MAAMK,QAAQ,GAAG;EAChBC,GAAG,EAAE,kBAAkB;EACvBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,6DAA+D;IAE1E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,IAAI,EAAE;MACLA,IAAI,EAAEC,MAAM;MACZC,YAAY,EAAElB,eAAe,CAACO;IAC/B,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEY,UAAU,EAAE;MACXH,IAAI,EAAEC,MAAM;MACZC,YAAY,EAAEnB,UAAU,CAACS;IAC1B,CAAC;IAED;AACF;AACA;IACEY,mBAAmB,EAAE;MACpBJ,IAAI,EAAEC,MAAM;MACZI,WAAW,EAAE;IACd;EAED,CAAC;EACDC,KAAK,EAAE,6DAA8D;IACpE;AACF;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE;MACVN,IAAI,EAAEO,WAAW;MACjBC,YAAY,EAAE;IACf;EACD,CAAC;EACDC,MAAM,EAAE,6DAA8D;IACrE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,KAAK,EAAE;MACRC,MAAM,EAAE;QACPC,SAAS,EAAE;UAAEZ,IAAI,EAAEO;QAAY,CAAC;QAChCM,qBAAqB,EAAE;UAAEb,IAAI,EAAEc;QAAQ;MACxC;IACD;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASzC,UAAU,CAAC;EACpC0C,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,eAAe,GAAG,IAAIxC,cAAc,CAAC,IAAI,EAAE;MAC/CyC,gBAAgB,EAAEA,CAAA,KAAM;QACvB,OAAO,IAAI,CAACC,QAAQ,GAAG,EAAE,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,IAAI,CAACC,iBAAiB,CAAC;MACxE;IACD,CAAC,CAAC;IAEF,IAAI,CAACC,WAAW,GAAG,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}