{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/TimePicker';\n\n/**\n * The `TimePicker` component provides an input field with assigned sliders which opens on user action. The `TimePicker` allows users to select a localized time using touch, mouse, or keyboard input. It consists of two parts: the time input field and the sliders.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/TimePicker\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nvar TimePicker = withWebComponent('ui5-time-picker', ['formatPattern', 'placeholder', 'value', 'valueState'], ['disabled', 'readonly'], ['valueStateMessage'], ['change', 'input']);\nTimePicker.displayName = 'TimePicker';\nTimePicker.defaultProps = {\n  disabled: false,\n  placeholder: undefined,\n  readonly: false,\n  value: undefined,\n  valueState: ValueState.None\n};\nexport { TimePicker };","map":{"version":3,"names":["TimePicker","withWebComponent","displayName","defaultProps","disabled","placeholder","undefined","readonly","value","valueState","ValueState","None"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/webComponents/TimePicker/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/TimePicker';\nimport { FC, ReactNode } from 'react';\n\nexport interface TimePickerPropTypes extends Omit<WithWebComponentPropTypes, 'onChange' | 'onInput'> {\n  /**\n   * Determines whether the `TimePicker` is displayed as disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Determines the format, displayed in the input field. Example: HH:mm:ss -> 11:42:35 hh:mm:ss a -> 2:23:15 PM mm:ss -> 12:04 (only minutes and seconds)\n   */\n  formatPattern?: string;\n  /**\n   * Defines a short hint, intended to aid the user with data entry when the `TimePicker` has no value.\n   *\n   * **Note:** When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the `TimePicker` appear empty - without placeholder or format pattern.\n   */\n  placeholder?: string;\n  /**\n   * Determines whether the `TimePicker` is displayed as readonly.\n   */\n  readonly?: boolean;\n  /**\n   * Defines a formatted time value.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the `TimePicker`.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the value state message that will be displayed as pop up under the `TimePicker`.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the `TimePicker` is in `Information`, `Warning` or `Error` value state.\n   */\n  valueStateMessage?: ReactNode;\n  /**\n   * Fired when the input operation has finished by clicking the \"OK\" button or when the text in the input field has changed and the focus leaves the input field.\n   */\n  onChange?: (event: CustomEvent) => void;\n  /**\n   * Fired when the value of the `TimePicker` is changed at each key stroke.\n   */\n  onInput?: (event: CustomEvent) => void;\n}\n\n/**\n * The `TimePicker` component provides an input field with assigned sliders which opens on user action. The `TimePicker` allows users to select a localized time using touch, mouse, or keyboard input. It consists of two parts: the time input field and the sliders.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/TimePicker\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst TimePicker: FC<TimePickerPropTypes> = withWebComponent<TimePickerPropTypes>(\n  'ui5-time-picker',\n  ['formatPattern', 'placeholder', 'value', 'valueState'],\n  ['disabled', 'readonly'],\n  ['valueStateMessage'],\n  ['change', 'input']\n);\n\nTimePicker.displayName = 'TimePicker';\n\nTimePicker.defaultProps = {\n  disabled: false,\n  placeholder: undefined,\n  readonly: false,\n  value: undefined,\n  valueState: ValueState.None\n};\n\nexport { TimePicker };\n"],"mappings":";;;;AAyDA;AACA;AACA;AACA;AACA;IACMA,UAAmC,GAAGC,gBAAgB,CAC1D,iBAD0D,EAE1D,CAAC,eAAD,EAAkB,aAAlB,EAAiC,OAAjC,EAA0C,YAA1C,CAF0D,EAG1D,CAAC,UAAD,EAAa,UAAb,CAH0D,EAI1D,CAAC,mBAAD,CAJ0D,EAK1D,CAAC,QAAD,EAAW,OAAX,CAL0D;AAQ5DD,UAAU,CAACE,WAAX,GAAyB,YAAzB;AAEAF,UAAU,CAACG,YAAX,GAA0B;EACxBC,QAAQ,EAAE,KADc;EAExBC,WAAW,EAAEC,SAFW;EAGxBC,QAAQ,EAAE,KAHc;EAIxBC,KAAK,EAAEF,SAJiB;EAKxBG,UAAU,EAAEC,UAAU,CAACC;AALC,CAA1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}