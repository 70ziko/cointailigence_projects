{"ast":null,"code":"class EventProvider {\n  constructor() {\n    this._eventRegistry = {};\n  }\n  attachEvent(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    let eventListeners = eventRegistry[eventName];\n    if (!Array.isArray(eventListeners)) {\n      eventRegistry[eventName] = [];\n      eventListeners = eventRegistry[eventName];\n    }\n    eventListeners.push({\n      \"function\": fnFunction\n    });\n  }\n  detachEvent(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    let eventListeners = eventRegistry[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    eventListeners = eventListeners.filter(event => {\n      return event[\"function\"] !== fnFunction; // eslint-disable-line\n    });\n\n    if (eventListeners.length === 0) {\n      delete eventRegistry[eventName];\n    }\n  }\n\n  /**\n   * Fires an event and returns the results of all event listeners as an array.\n   * Example: If listeners return promises, you can: await fireEvent(\"myEvent\") to know when all listeners have finished.\n   *\n   * @param eventName the event to fire\n   * @param data optional data to pass to each event listener\n   * @returns {Array} an array with the results of all event listeners\n   */\n  fireEvent(eventName, data) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry[eventName];\n    if (!eventListeners) {\n      return [];\n    }\n    return eventListeners.map(event => {\n      return event[\"function\"].call(this, data); // eslint-disable-line\n    });\n  }\n\n  isHandlerAttached(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry[eventName];\n    if (!eventListeners) {\n      return false;\n    }\n    for (let i = 0; i < eventListeners.length; i++) {\n      const event = eventListeners[i];\n      if (event[\"function\"] === fnFunction) {\n        // eslint-disable-line\n        return true;\n      }\n    }\n    return false;\n  }\n  hasListeners(eventName) {\n    return !!this._eventRegistry[eventName];\n  }\n}\nexport default EventProvider;","map":{"version":3,"names":["EventProvider","constructor","_eventRegistry","attachEvent","eventName","fnFunction","eventRegistry","eventListeners","Array","isArray","push","detachEvent","filter","event","length","fireEvent","data","map","call","isHandlerAttached","i","hasListeners"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-base/dist/EventProvider.js"],"sourcesContent":["class EventProvider {\n\tconstructor() {\n\t\tthis._eventRegistry = {};\n\t}\n\n\tattachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tlet eventListeners = eventRegistry[eventName];\n\n\t\tif (!Array.isArray(eventListeners)) {\n\t\t\teventRegistry[eventName] = [];\n\t\t\teventListeners = eventRegistry[eventName];\n\t\t}\n\n\t\teventListeners.push({\n\t\t\t\"function\": fnFunction,\n\t\t});\n\t}\n\n\tdetachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tlet eventListeners = eventRegistry[eventName];\n\n\t\tif (!eventListeners) {\n\t\t\treturn;\n\t\t}\n\n\t\teventListeners = eventListeners.filter(event => {\n\t\t\treturn event[\"function\"] !== fnFunction; // eslint-disable-line\n\t\t});\n\n\t\tif (eventListeners.length === 0) {\n\t\t\tdelete eventRegistry[eventName];\n\t\t}\n\t}\n\n\t/**\n\t * Fires an event and returns the results of all event listeners as an array.\n\t * Example: If listeners return promises, you can: await fireEvent(\"myEvent\") to know when all listeners have finished.\n\t *\n\t * @param eventName the event to fire\n\t * @param data optional data to pass to each event listener\n\t * @returns {Array} an array with the results of all event listeners\n\t */\n\tfireEvent(eventName, data) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry[eventName];\n\n\t\tif (!eventListeners) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn eventListeners.map(event => {\n\t\t\treturn event[\"function\"].call(this, data); // eslint-disable-line\n\t\t});\n\t}\n\n\tisHandlerAttached(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry[eventName];\n\n\t\tif (!eventListeners) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < eventListeners.length; i++) {\n\t\t\tconst event = eventListeners[i];\n\t\t\tif (event[\"function\"] === fnFunction) { // eslint-disable-line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasListeners(eventName) {\n\t\treturn !!this._eventRegistry[eventName];\n\t}\n}\n\nexport default EventProvider;\n"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;EACzB;EAEAC,WAAWA,CAACC,SAAS,EAAEC,UAAU,EAAE;IAClC,MAAMC,aAAa,GAAG,IAAI,CAACJ,cAAc;IACzC,IAAIK,cAAc,GAAGD,aAAa,CAACF,SAAS,CAAC;IAE7C,IAAI,CAACI,KAAK,CAACC,OAAO,CAACF,cAAc,CAAC,EAAE;MACnCD,aAAa,CAACF,SAAS,CAAC,GAAG,EAAE;MAC7BG,cAAc,GAAGD,aAAa,CAACF,SAAS,CAAC;IAC1C;IAEAG,cAAc,CAACG,IAAI,CAAC;MACnB,UAAU,EAAEL;IACb,CAAC,CAAC;EACH;EAEAM,WAAWA,CAACP,SAAS,EAAEC,UAAU,EAAE;IAClC,MAAMC,aAAa,GAAG,IAAI,CAACJ,cAAc;IACzC,IAAIK,cAAc,GAAGD,aAAa,CAACF,SAAS,CAAC;IAE7C,IAAI,CAACG,cAAc,EAAE;MACpB;IACD;IAEAA,cAAc,GAAGA,cAAc,CAACK,MAAM,CAACC,KAAK,IAAI;MAC/C,OAAOA,KAAK,CAAC,UAAU,CAAC,KAAKR,UAAU,CAAC,CAAC;IAC1C,CAAC,CAAC;;IAEF,IAAIE,cAAc,CAACO,MAAM,KAAK,CAAC,EAAE;MAChC,OAAOR,aAAa,CAACF,SAAS,CAAC;IAChC;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCW,SAASA,CAACX,SAAS,EAAEY,IAAI,EAAE;IAC1B,MAAMV,aAAa,GAAG,IAAI,CAACJ,cAAc;IACzC,MAAMK,cAAc,GAAGD,aAAa,CAACF,SAAS,CAAC;IAE/C,IAAI,CAACG,cAAc,EAAE;MACpB,OAAO,EAAE;IACV;IAEA,OAAOA,cAAc,CAACU,GAAG,CAACJ,KAAK,IAAI;MAClC,OAAOA,KAAK,CAAC,UAAU,CAAC,CAACK,IAAI,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;EACH;;EAEAG,iBAAiBA,CAACf,SAAS,EAAEC,UAAU,EAAE;IACxC,MAAMC,aAAa,GAAG,IAAI,CAACJ,cAAc;IACzC,MAAMK,cAAc,GAAGD,aAAa,CAACF,SAAS,CAAC;IAE/C,IAAI,CAACG,cAAc,EAAE;MACpB,OAAO,KAAK;IACb;IAEA,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,cAAc,CAACO,MAAM,EAAEM,CAAC,EAAE,EAAE;MAC/C,MAAMP,KAAK,GAAGN,cAAc,CAACa,CAAC,CAAC;MAC/B,IAAIP,KAAK,CAAC,UAAU,CAAC,KAAKR,UAAU,EAAE;QAAE;QACvC,OAAO,IAAI;MACZ;IACD;IAEA,OAAO,KAAK;EACb;EAEAgB,YAAYA,CAACjB,SAAS,EAAE;IACvB,OAAO,CAAC,CAAC,IAAI,CAACF,cAAc,CAACE,SAAS,CAAC;EACxC;AACD;AAEA,eAAeJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}