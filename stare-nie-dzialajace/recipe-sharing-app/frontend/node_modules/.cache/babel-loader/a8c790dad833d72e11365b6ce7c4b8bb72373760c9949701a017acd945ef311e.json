{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { createUseStyles } from 'react-jss';\nimport { useConsolidatedRef, useI18nBundle } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { SHOW_MORE } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { ToolbarDesign } from '@ui5/webcomponents-react/lib/ToolbarDesign';\nimport { ToolbarStyle } from '@ui5/webcomponents-react/lib/ToolbarStyle';\nimport React, { useRef, useState, useCallback, useEffect, forwardRef, useMemo, cloneElement, useLayoutEffect, createRef } from 'react';\nimport '@ui5/webcomponents-icons/dist/overflow';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { PlacementType } from '@ui5/webcomponents-react/lib/PlacementType';\nimport { Popover } from '@ui5/webcomponents-react/lib/Popover';\nimport { ToggleButton } from '@ui5/webcomponents-react/lib/ToggleButton';\nimport { createPortal } from 'react-dom';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n  e.stopImmediatePropagation();\n};\nvar OverflowPopover = function OverflowPopover(props) {\n  var lastVisibleIndex = props.lastVisibleIndex,\n    contentClass = props.contentClass,\n    children = props.children;\n  var popoverRef = useRef();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressed = _useState2[0],\n    setPressed = _useState2[1];\n  var handleToggleButtonClick = useCallback(function (e) {\n    if (popoverRef.current) {\n      if (!pressed) {\n        popoverRef.current.openBy(e.target);\n        setPressed(true);\n      } else {\n        popoverRef.current.close();\n      }\n    }\n  }, [pressed]);\n  useEffect(function () {\n    return function () {\n      if (popoverRef.current) {\n        popoverRef.current.close();\n      }\n    };\n  }, []);\n  var handleClose = useCallback(function (e) {\n    stopPropagation(e);\n    setPressed(false);\n  }, [setPressed]);\n  var renderChildren = useCallback(function () {\n    return React.Children.toArray((children === null || children === void 0 ? void 0 : children.type) === React.Fragment ? children.props.children : children).map(function (item, index) {\n      if (index > lastVisibleIndex) {\n        if (item.type.displayName === 'ToolbarSeparator') {\n          return /*#__PURE__*/React.cloneElement(item, {\n            style: {\n              height: '0.0625rem',\n              margin: '0.375rem 0.1875rem',\n              width: '100%'\n            }\n          });\n        }\n        return item;\n      }\n      return null;\n    });\n  }, [children, lastVisibleIndex]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToggleButton, {\n    design: ButtonDesign.Transparent,\n    icon: \"overflow\",\n    onClick: handleToggleButtonClick,\n    pressed: pressed\n  }), /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(Popover, {\n    placementType: PlacementType.Bottom,\n    ref: popoverRef,\n    onAfterClose: handleClose\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: contentClass\n  }, renderChildren())), document.body));\n};\nvar styles = {\n  outerContainer: {\n    width: '100%',\n    height: CssSizeVariables.sapWcrToolbarHeight,\n    position: 'relative',\n    overflow: 'hidden',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: \"solid 0.0625rem \".concat(ThemingParameters.sapGroup_TitleBorderColor)\n  },\n  hasOverflow: {\n    '& $toolbar': {\n      maxWidth: 'calc(100% - 44px)'\n    }\n  },\n  clear: {\n    borderBottom: 'none'\n  },\n  active: {\n    cursor: 'pointer',\n    '&:active': {\n      backgroundColor: ThemingParameters.sapActiveColor\n    },\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_Background\n    }\n  },\n  info: {\n    // This color is most similar to darken(@sapUiBaseColor, 10)\n    backgroundColor: ThemingParameters.sapList_HeaderBorderColor,\n    '&$active': {\n      backgroundColor: ThemingParameters.sapInfobar_Active_Background,\n      '&:active': {\n        backgroundColor: \"\".concat(ThemingParameters.sapInfobar_Active_Background)\n      },\n      '&:hover': {\n        backgroundColor: ThemingParameters.sapInfobar_Hover_Background\n      }\n    }\n  },\n  solid: {\n    backgroundColor: ThemingParameters.sapBackgroundColor\n  },\n  transparent: {\n    backgroundColor: ThemingParameters.sapToolbar_Background\n  },\n  toolbar: {\n    width: '100%',\n    '& >:first-child:not(.spacer)': {\n      margin: '0 0.25rem 0 0'\n    },\n    '& >:last-child:not(.spacer)': {\n      margin: '0 0.5rem 0 0.25rem'\n    },\n    '& > *:not(first-child):not(last-child):not(.spacer)': {\n      margin: '0 0.25rem'\n    },\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: '100%'\n  },\n  overflowButtonContainer: {\n    marginRight: '0.5rem'\n  },\n  popoverContent: {\n    maxWidth: '20rem',\n    padding: CssSizeVariables.sapWcrToolbarPopoverContentPadding,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n};\nvar useStyles = createUseStyles(styles, {\n  name: 'Toolbar'\n});\n\n/**\n * Horizontal container most commonly used to display buttons, labels, selects and various other input controls.\n *\n * The content of the `Toolbar` moves into the overflow area from right to left when the available space is not enough in the visible area of the container.\n * It can be accessed by the user through the overflow button that opens it in a popover.\n */\nvar Toolbar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n    toolbarStyle = props.toolbarStyle,\n    design = props.design,\n    active = props.active,\n    style = props.style,\n    tooltip = props.tooltip,\n    className = props.className,\n    onClick = props.onClick,\n    slot = props.slot;\n  var classes = useStyles(styles);\n  var outerContainer = useConsolidatedRef(ref);\n  var controlMetaData = useRef([]);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastVisibleIndex = _useState2[0],\n    setLastVisibleIndex = _useState2[1];\n  var passThroughProps = usePassThroughHtmlProps(props, ['onClick']);\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var toolbarClasses = StyleClassHelper.of(classes.outerContainer);\n  if (toolbarStyle === ToolbarStyle.Clear) {\n    toolbarClasses.put(classes.clear);\n  }\n  if (active) {\n    toolbarClasses.put(classes.active);\n  }\n  switch (design) {\n    case ToolbarDesign.Solid:\n      toolbarClasses.put(classes.solid);\n      break;\n    case ToolbarDesign.Transparent:\n      toolbarClasses.put(classes.transparent);\n      break;\n    case ToolbarDesign.Info:\n      toolbarClasses.put(classes.info);\n      break;\n  }\n  toolbarClasses.putIfPresent(className);\n  var childrenWithRef = useMemo(function () {\n    controlMetaData.current = [];\n    var refactoredChildren = React.Children.toArray(children).map(function (child, index) {\n      if (child.type === React.Fragment) {\n        return child.props.children.filter(Boolean).map(function (item, itemIndex) {\n          return /*#__PURE__*/cloneElement(item, {\n            key: \".\".concat(index, \":\").concat(itemIndex)\n          });\n        });\n      }\n      return child;\n    });\n    return refactoredChildren.flat().map(function (item, index) {\n      var _item$type;\n      var itemRef = /*#__PURE__*/createRef();\n      controlMetaData.current.push({\n        ref: itemRef\n      }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n      if ((item === null || item === void 0 ? void 0 : (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.displayName) === 'ToolbarSpacer') {\n        return item;\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: itemRef,\n        key: index\n      }, item);\n    });\n  }, [children, controlMetaData]);\n  var overflowNeeded = (lastVisibleIndex || lastVisibleIndex === 0) && React.Children.count(childrenWithRef) !== lastVisibleIndex + 1;\n  toolbarClasses.putIfPresent(overflowNeeded && classes.hasOverflow);\n  var calculateVisibleItems = useCallback(function () {\n    var OVERFLOW_BUTTON_WIDTH = 32 + 8;\n    requestAnimationFrame(function () {\n      if (!outerContainer.current) return;\n      var availableWidth = outerContainer.current.getBoundingClientRect().width;\n      var consumedWidth = 0;\n      var lastIndex = null;\n      if (availableWidth - OVERFLOW_BUTTON_WIDTH <= 0) {\n        lastIndex = -1;\n      } else {\n        controlMetaData.current.forEach(function (item, index) {\n          var currentMeta = controlMetaData.current[index];\n          if (currentMeta && currentMeta.ref && currentMeta.ref.current) {\n            var nextWidth = currentMeta.ref.current.getBoundingClientRect().width;\n            nextWidth += index === 0 || index === controlMetaData.current.length - 1 ? 4 : 8; // first & last element = padding: 4px\n\n            if (index === controlMetaData.current.length - 1) {\n              if (consumedWidth + nextWidth <= availableWidth - 8) {\n                lastIndex = index;\n              }\n            } else {\n              if (consumedWidth + nextWidth <= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                lastIndex = index;\n              }\n              if (consumedWidth < availableWidth - OVERFLOW_BUTTON_WIDTH && consumedWidth + nextWidth >= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                lastIndex = index - 1;\n              }\n            }\n            consumedWidth += nextWidth;\n          }\n        });\n      }\n      setLastVisibleIndex(lastIndex);\n    });\n  }, [outerContainer.current, controlMetaData.current, setLastVisibleIndex, childrenWithRef, overflowNeeded]);\n  var observer = useRef(new ResizeObserver(calculateVisibleItems));\n  useEffect(function () {\n    if (outerContainer.current) {\n      observer.current.observe(outerContainer.current);\n    }\n    return function () {\n      observer.current.disconnect();\n    };\n  }, [outerContainer.current]);\n  useLayoutEffect(function () {\n    calculateVisibleItems();\n  }, [calculateVisibleItems]);\n  var handleToolbarClick = useCallback(function (e) {\n    if (active && typeof onClick === 'function') {\n      onClick(enrichEventWithDetails(e));\n    }\n  }, [onClick, active]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    title: tooltip,\n    style: style,\n    className: toolbarClasses.className,\n    ref: outerContainer,\n    slot: slot,\n    onClick: handleToolbarClick\n  }, passThroughProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar\n  }, overflowNeeded && React.Children.map(childrenWithRef, function (item, index) {\n    if (index >= lastVisibleIndex + 1) {\n      return /*#__PURE__*/React.cloneElement(item, {\n        style: {\n          visibility: 'hidden'\n        }\n      });\n    }\n    return item;\n  }), !overflowNeeded && childrenWithRef), overflowNeeded && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overflowButtonContainer,\n    title: i18nBundle.getText(SHOW_MORE)\n  }, /*#__PURE__*/React.createElement(OverflowPopover, {\n    lastVisibleIndex: lastVisibleIndex,\n    contentClass: classes.popoverContent\n  }, React.Children.toArray(children).map(function (child) {\n    if (child.type === React.Fragment) {\n      return child.props.children;\n    }\n    return child;\n  }))));\n});\nToolbar.defaultProps = {\n  toolbarStyle: ToolbarStyle.Standard,\n  design: ToolbarDesign.Auto,\n  active: false\n};\nToolbar.displayName = 'Toolbar';\nexport { Toolbar };","map":{"version":3,"names":["stopPropagation","e","stopImmediatePropagation","OverflowPopover","props","lastVisibleIndex","contentClass","children","popoverRef","useRef","_useState","useState","_useState2","_slicedToArray","pressed","setPressed","handleToggleButtonClick","useCallback","current","openBy","target","close","useEffect","handleClose","renderChildren","React","Children","toArray","type","Fragment","map","item","index","displayName","cloneElement","style","height","margin","width","createElement","ToggleButton","design","ButtonDesign","Transparent","icon","onClick","createPortal","Popover","placementType","PlacementType","Bottom","ref","onAfterClose","className","document","body","styles","outerContainer","CssSizeVariables","sapWcrToolbarHeight","position","overflow","display","justifyContent","alignItems","borderBottom","concat","ThemingParameters","sapGroup_TitleBorderColor","hasOverflow","maxWidth","clear","active","cursor","backgroundColor","sapActiveColor","sapList_Hover_Background","info","sapList_HeaderBorderColor","sapInfobar_Active_Background","sapInfobar_Hover_Background","solid","sapBackgroundColor","transparent","sapToolbar_Background","toolbar","overflowButtonContainer","marginRight","popoverContent","padding","sapWcrToolbarPopoverContentPadding","flexDirection","useStyles","createUseStyles","name","Toolbar","forwardRef","toolbarStyle","tooltip","slot","classes","useConsolidatedRef","controlMetaData","setLastVisibleIndex","passThroughProps","usePassThroughHtmlProps","i18nBundle","useI18nBundle","toolbarClasses","StyleClassHelper","of","ToolbarStyle","Clear","put","ToolbarDesign","Solid","Info","putIfPresent","childrenWithRef","useMemo","refactoredChildren","child","filter","Boolean","itemIndex","key","flat","_item$type","itemRef","createRef","push","overflowNeeded","count","calculateVisibleItems","OVERFLOW_BUTTON_WIDTH","requestAnimationFrame","availableWidth","getBoundingClientRect","consumedWidth","lastIndex","forEach","currentMeta","nextWidth","length","observer","ResizeObserver","observe","disconnect","useLayoutEffect","handleToolbarClick","enrichEventWithDetails","_extends","title","visibility","getText","SHOW_MORE","defaultProps","Standard","Auto"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/internal/stopPropagation.ts","/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Toolbar/OverflowPopover.tsx","/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Toolbar/Toolbar.jss.ts","/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Toolbar/index.tsx"],"sourcesContent":["export const stopPropagation = (e) => {\n  e.stopPropagation();\n  e.stopImmediatePropagation();\n};\n","import '@ui5/webcomponents-icons/dist/overflow';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { PlacementType } from '@ui5/webcomponents-react/lib/PlacementType';\nimport { Popover } from '@ui5/webcomponents-react/lib/Popover';\nimport { ToggleButton } from '@ui5/webcomponents-react/lib/ToggleButton';\nimport React, { FC, ReactElement, ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Ui5PopoverDomRef } from '../../interfaces/Ui5PopoverDomRef';\nimport { stopPropagation } from '../../internal/stopPropagation';\n\ninterface OverflowPopoverProps {\n  lastVisibleIndex: number;\n  contentClass: string;\n  children: ReactNode;\n}\n\nexport const OverflowPopover: FC<OverflowPopoverProps> = (props: OverflowPopoverProps) => {\n  const { lastVisibleIndex, contentClass, children } = props;\n  const popoverRef = useRef<Ui5PopoverDomRef>();\n  const [pressed, setPressed] = useState(false);\n\n  const handleToggleButtonClick = useCallback(\n    (e) => {\n      if (popoverRef.current) {\n        if (!pressed) {\n          popoverRef.current.openBy(e.target);\n          setPressed(true);\n        } else {\n          popoverRef.current.close();\n        }\n      }\n    },\n    [pressed]\n  );\n\n  useEffect(() => {\n    return () => {\n      if (popoverRef.current) {\n        popoverRef.current.close();\n      }\n    };\n  }, []);\n\n  const handleClose = useCallback(\n    (e) => {\n      stopPropagation(e);\n      setPressed(false);\n    },\n    [setPressed]\n  );\n\n  const renderChildren = useCallback(() => {\n    return React.Children.toArray(\n      (children as ReactElement)?.type === React.Fragment ? (children as ReactElement).props.children : children\n    ).map((item: ReactElement<any>, index) => {\n      if (index > lastVisibleIndex) {\n        if ((item.type as any).displayName === 'ToolbarSeparator') {\n          return React.cloneElement(item, {\n            style: {\n              height: '0.0625rem',\n              margin: '0.375rem 0.1875rem',\n              width: '100%'\n            }\n          });\n        }\n        return item;\n      }\n      return null;\n    });\n  }, [children, lastVisibleIndex]);\n\n  return (\n    <>\n      <ToggleButton\n        design={ButtonDesign.Transparent}\n        icon=\"overflow\"\n        onClick={handleToggleButtonClick}\n        pressed={pressed}\n      />\n      {createPortal(\n        <Popover placementType={PlacementType.Bottom} ref={popoverRef} onAfterClose={handleClose}>\n          <div className={contentClass}>{renderChildren()}</div>\n        </Popover>,\n        document.body\n      )}\n    </>\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\n\nexport const styles = {\n  outerContainer: {\n    width: '100%',\n    height: CssSizeVariables.sapWcrToolbarHeight,\n    position: 'relative',\n    overflow: 'hidden',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: `solid 0.0625rem ${ThemingParameters.sapGroup_TitleBorderColor}`\n  },\n  hasOverflow: {\n    '& $toolbar': {\n      maxWidth: 'calc(100% - 44px)'\n    }\n  },\n  clear: {\n    borderBottom: 'none'\n  },\n  active: {\n    cursor: 'pointer',\n    '&:active': {\n      backgroundColor: ThemingParameters.sapActiveColor\n    },\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_Background\n    }\n  },\n  info: {\n    // This color is most similar to darken(@sapUiBaseColor, 10)\n    backgroundColor: ThemingParameters.sapList_HeaderBorderColor,\n    '&$active': {\n      backgroundColor: ThemingParameters.sapInfobar_Active_Background,\n      '&:active': {\n        backgroundColor: `${ThemingParameters.sapInfobar_Active_Background}`\n      },\n      '&:hover': {\n        backgroundColor: ThemingParameters.sapInfobar_Hover_Background\n      }\n    }\n  },\n  solid: {\n    backgroundColor: ThemingParameters.sapBackgroundColor\n  },\n  transparent: {\n    backgroundColor: ThemingParameters.sapToolbar_Background\n  },\n  toolbar: {\n    width: '100%',\n    '& >:first-child:not(.spacer)': {\n      margin: '0 0.25rem 0 0'\n    },\n    '& >:last-child:not(.spacer)': {\n      margin: '0 0.5rem 0 0.25rem'\n    },\n    '& > *:not(first-child):not(last-child):not(.spacer)': {\n      margin: '0 0.25rem'\n    },\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: '100%'\n  },\n  overflowButtonContainer: {\n    marginRight: '0.5rem'\n  },\n  popoverContent: {\n    maxWidth: '20rem',\n    padding: CssSizeVariables.sapWcrToolbarPopoverContentPadding,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n};\n","import { createUseStyles } from 'react-jss';\nimport { useConsolidatedRef, useI18nBundle } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { SHOW_MORE } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { ToolbarDesign } from '@ui5/webcomponents-react/lib/ToolbarDesign';\nimport { ToolbarStyle } from '@ui5/webcomponents-react/lib/ToolbarStyle';\nimport React, {\n  cloneElement,\n  createRef,\n  FC,\n  forwardRef,\n  ReactElement,\n  ReactFragment,\n  ReactNode,\n  ReactNodeArray,\n  Ref,\n  RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { OverflowPopover } from './OverflowPopover';\nimport { styles } from './Toolbar.jss';\n\nconst useStyles = createUseStyles(styles, { name: 'Toolbar' });\n\nexport interface ToolbarProptypes extends Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the content of the `Toolbar`.\n   */\n  children?: ReactNode | ReactNodeArray | ReactFragment;\n  /**\n   * Defines the visual style of the `Toolbar`.<br />\n   * <b>Note:</b> The visual styles are theme-dependent.\n   */\n  toolbarStyle?: ToolbarStyle;\n  /**\n   * Defines the `Toolbar` design.<br />\n   * <b>Note:</b> Design settings are theme-dependent.\n   */\n  design?: ToolbarDesign;\n  /**\n   * Indicates that the whole `Toolbar` is clickable. The Press event is fired only if `active` is set to true.\n   */\n  active?: boolean;\n  /**\n   * Fired when the user clicks on the `Toolbar`, if the `active` prop is set to \"true\".\n   */\n  onClick?: (event: CustomEvent) => void;\n}\n\n/**\n * Horizontal container most commonly used to display buttons, labels, selects and various other input controls.\n *\n * The content of the `Toolbar` moves into the overflow area from right to left when the available space is not enough in the visible area of the container.\n * It can be accessed by the user through the overflow button that opens it in a popover.\n */\nconst Toolbar: FC<ToolbarProptypes> = forwardRef((props: ToolbarProptypes, ref: Ref<HTMLDivElement>) => {\n  const { children, toolbarStyle, design, active, style, tooltip, className, onClick, slot } = props;\n  const classes = useStyles(styles);\n  const outerContainer: RefObject<HTMLDivElement> = useConsolidatedRef(ref);\n  const controlMetaData = useRef([]);\n  const [lastVisibleIndex, setLastVisibleIndex] = useState<number>(null);\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onClick']);\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const toolbarClasses = StyleClassHelper.of(classes.outerContainer);\n  if (toolbarStyle === ToolbarStyle.Clear) {\n    toolbarClasses.put(classes.clear);\n  }\n  if (active) {\n    toolbarClasses.put(classes.active);\n  }\n  switch (design) {\n    case ToolbarDesign.Solid:\n      toolbarClasses.put(classes.solid);\n      break;\n    case ToolbarDesign.Transparent:\n      toolbarClasses.put(classes.transparent);\n      break;\n    case ToolbarDesign.Info:\n      toolbarClasses.put(classes.info);\n      break;\n    default:\n      break;\n  }\n  toolbarClasses.putIfPresent(className);\n\n  const childrenWithRef = useMemo(() => {\n    controlMetaData.current = [];\n\n    const refactoredChildren = React.Children.toArray(children).map((child, index) => {\n      if ((child as ReactElement).type === React.Fragment) {\n        return (child as ReactElement).props.children.filter(Boolean).map((item, itemIndex: number) => {\n          return cloneElement(item, { key: `.${index}:${itemIndex}` });\n        });\n      }\n      return child;\n    });\n\n    return refactoredChildren.flat().map((item: ReactElement, index) => {\n      const itemRef: RefObject<HTMLDivElement> = createRef();\n\n      controlMetaData.current.push({\n        ref: itemRef\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if ((item?.type as any)?.displayName === 'ToolbarSpacer') {\n        return item;\n      }\n      return (\n        <div ref={itemRef} key={index}>\n          {item}\n        </div>\n      );\n    });\n  }, [children, controlMetaData]);\n\n  const overflowNeeded =\n    (lastVisibleIndex || lastVisibleIndex === 0) && React.Children.count(childrenWithRef) !== lastVisibleIndex + 1;\n\n  toolbarClasses.putIfPresent(overflowNeeded && classes.hasOverflow);\n\n  const calculateVisibleItems = useCallback(() => {\n    const OVERFLOW_BUTTON_WIDTH = 32 + 8;\n    requestAnimationFrame(() => {\n      if (!outerContainer.current) return;\n      const availableWidth = outerContainer.current.getBoundingClientRect().width;\n      let consumedWidth = 0;\n      let lastIndex = null;\n      let lastFitWidth = 0;\n\n      if (availableWidth - OVERFLOW_BUTTON_WIDTH <= 0) {\n        lastIndex = -1;\n        lastFitWidth = 0;\n      } else {\n        controlMetaData.current.forEach((item, index) => {\n          const currentMeta = controlMetaData.current[index] as { ref: RefObject<HTMLElement> };\n          if (currentMeta && currentMeta.ref && currentMeta.ref.current) {\n            let nextWidth = currentMeta.ref.current.getBoundingClientRect().width;\n            nextWidth += index === 0 || index === controlMetaData.current.length - 1 ? 4 : 8; // first & last element = padding: 4px\n            if (index === controlMetaData.current.length - 1) {\n              if (consumedWidth + nextWidth <= availableWidth - 8) {\n                lastIndex = index;\n                lastFitWidth = consumedWidth + nextWidth;\n              }\n            } else {\n              if (consumedWidth + nextWidth <= availableWidth - OVERFLOW_BUTTON_WIDTH) {\n                lastIndex = index;\n                lastFitWidth = consumedWidth + nextWidth;\n              }\n              if (\n                consumedWidth < availableWidth - OVERFLOW_BUTTON_WIDTH &&\n                consumedWidth + nextWidth >= availableWidth - OVERFLOW_BUTTON_WIDTH\n              ) {\n                lastIndex = index - 1;\n                lastFitWidth = 0;\n              }\n            }\n            consumedWidth += nextWidth;\n          }\n        });\n      }\n      setLastVisibleIndex(lastIndex);\n    });\n  }, [outerContainer.current, controlMetaData.current, setLastVisibleIndex, childrenWithRef, overflowNeeded]);\n\n  const observer = useRef(new ResizeObserver(calculateVisibleItems));\n\n  useEffect(() => {\n    if (outerContainer.current) {\n      observer.current.observe(outerContainer.current);\n    }\n    return () => {\n      observer.current.disconnect();\n    };\n  }, [outerContainer.current]);\n\n  useLayoutEffect(() => {\n    calculateVisibleItems();\n  }, [calculateVisibleItems]);\n\n  const handleToolbarClick = useCallback(\n    (e) => {\n      if (active && typeof onClick === 'function') {\n        onClick(enrichEventWithDetails(e));\n      }\n    },\n    [onClick, active]\n  );\n\n  return (\n    <div\n      title={tooltip}\n      style={style}\n      className={toolbarClasses.className}\n      ref={outerContainer}\n      slot={slot}\n      onClick={handleToolbarClick}\n      {...passThroughProps}\n    >\n      <div className={classes.toolbar}>\n        {overflowNeeded &&\n          React.Children.map(childrenWithRef, (item, index) => {\n            if (index >= lastVisibleIndex + 1) {\n              return React.cloneElement(item as ReactElement, { style: { visibility: 'hidden' } });\n            }\n            return item;\n          })}\n        {!overflowNeeded && childrenWithRef}\n      </div>\n      {overflowNeeded && (\n        <div className={classes.overflowButtonContainer} title={i18nBundle.getText(SHOW_MORE)}>\n          <OverflowPopover lastVisibleIndex={lastVisibleIndex} contentClass={classes.popoverContent}>\n            {React.Children.toArray(children).map((child) => {\n              if ((child as ReactElement).type === React.Fragment) {\n                return (child as ReactElement).props.children;\n              }\n              return child;\n            })}\n          </OverflowPopover>\n        </div>\n      )}\n    </div>\n  );\n});\n\nToolbar.defaultProps = {\n  toolbarStyle: ToolbarStyle.Standard,\n  design: ToolbarDesign.Auto,\n  active: false\n};\n\nToolbar.displayName = 'Toolbar';\nexport { Toolbar };\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkBA,CAACC,CAAD,EAAO;EACpCA,CAAC,CAACD,eAAF;EACAC,CAAC,CAACC,wBAAF;AACD,CAHM;ACgBA,IAAMC,eAAyC,GAAG,SAA5CA,eAA4CA,CAACC,KAAD,EAAiC;EAAA,IAChFC,gBADgF,GACnCD,KADmC,CAChFC,gBADgF;IAC9DC,YAD8D,GACnCF,KADmC,CAC9DE,YAD8D;IAChDC,QADgD,GACnCH,KADmC,CAChDG,QADgD;EAExF,IAAMC,UAAU,GAAGC,MAAM,EAAzB;EAFwF,IAAAC,SAAA,GAG1DC,QAAQ,CAAC,KAAD,CAHkD;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAGjFI,OAHiF,GAAAF,UAAA;IAGxEG,UAHwE,GAAAH,UAAA;EAKxF,IAAMI,uBAAuB,GAAGC,WAAW,CACzC,UAAChB,CAAD,EAAO;IACL,IAAIO,UAAU,CAACU,OAAf,EAAwB;MACtB,IAAI,CAACJ,OAAL,EAAc;QACZN,UAAU,CAACU,OAAX,CAAmBC,MAAnB,CAA0BlB,CAAC,CAACmB,MAA5B;QACAL,UAAU,CAAC,IAAD,CAAV;MACD,CAHD,MAGO;QACLP,UAAU,CAACU,OAAX,CAAmBG,KAAnB;MACD;IACF;EACF,CAVwC,EAWzC,CAACP,OAAD,CAXyC,CAA3C;EAcAQ,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACX,IAAId,UAAU,CAACU,OAAf,EAAwB;QACtBV,UAAU,CAACU,OAAX,CAAmBG,KAAnB;MACD;IACF,CAJD;EAKD,CANQ,EAMN,EANM,CAAT;EAQA,IAAME,WAAW,GAAGN,WAAW,CAC7B,UAAChB,CAAD,EAAO;IACLD,eAAe,CAACC,CAAD,CAAf;IACAc,UAAU,CAAC,KAAD,CAAV;EACD,CAJ4B,EAK7B,CAACA,UAAD,CAL6B,CAA/B;EAQA,IAAMS,cAAc,GAAGP,WAAW,CAAC,YAAM;IACvC,OAAOQ,KAAK,CAACC,QAAN,CAAeC,OAAf,CACL,CAACpB,QAAD,aAACA,QAAD,uBAACA,QAAD,CAA4BqB,IAA5B,MAAqCH,KAAK,CAACI,QAA3C,GAAuDtB,QAAD,CAA2BH,KAA3B,CAAiCG,QAAvF,GAAkGA,QAD7F,EAELuB,GAFK,CAED,UAACC,IAAD,EAA0BC,KAA1B,EAAoC;MACxC,IAAIA,KAAK,GAAG3B,gBAAZ,EAA8B;QAC5B,IAAK0B,IAAI,CAACH,IAAN,CAAmBK,WAAnB,KAAmC,kBAAvC,EAA2D;UACzD,oBAAOR,KAAK,CAACS,YAAN,CAAmBH,IAAnB,EAAyB;YAC9BI,KAAK,EAAE;cACLC,MAAM,EAAE,WADH;cAELC,MAAM,EAAE,oBAFH;cAGLC,KAAK,EAAE;YAHF;UADuB,CAAzB,CAAP;QAOD;QACD,OAAOP,IAAP;MACD;MACD,OAAO,IAAP;IACD,CAhBM,CAAP;EAiBD,CAlBiC,EAkB/B,CAACxB,QAAD,EAAWF,gBAAX,CAlB+B,CAAlC;EAoBA,oBACEoB,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAI,QAAA,qBACEJ,KAAA,CAAAc,aAAA,CAACC,YAAD;IACEC,MAAM,EAAEC,YAAY,CAACC,WADvB;IAEEC,IAAI,EAAC,UAFP;IAGEC,OAAO,EAAE7B,uBAHX;IAIEF,OAAO,EAAEA;EAJX,EADF,eAOGgC,YAAY,eACXrB,KAAA,CAAAc,aAAA,CAACQ,OAAD;IAASC,aAAa,EAAEC,aAAa,CAACC,MAAtC;IAA8CC,GAAG,EAAE3C,UAAnD;IAA+D4C,YAAY,EAAE7B;EAA7E,gBACEE,KAAA,CAAAc,aAAA;IAAKc,SAAS,EAAE/C;EAAhB,GAA+BkB,cAAc,EAA7C,CADF,CADW,EAIX8B,QAAQ,CAACC,IAJE,CAPf,CADF;AAgBD,CAvEM;ACbA,IAAMC,MAAM,GAAG;EACpBC,cAAc,EAAE;IACdnB,KAAK,EAAE,MADO;IAEdF,MAAM,EAAEsB,gBAAgB,CAACC,mBAFX;IAGdC,QAAQ,EAAE,UAHI;IAIdC,QAAQ,EAAE,QAJI;IAKdC,OAAO,EAAE,MALK;IAMdC,cAAc,EAAE,eANF;IAOdC,UAAU,EAAE,QAPE;IAQdC,YAAY,qBAAAC,MAAA,CAAqBC,iBAAiB,CAACC,yBAAvC;EARE,CADI;EAWpBC,WAAW,EAAE;IACX,cAAc;MACZC,QAAQ,EAAE;IADE;EADH,CAXO;EAgBpBC,KAAK,EAAE;IACLN,YAAY,EAAE;EADT,CAhBa;EAmBpBO,MAAM,EAAE;IACNC,MAAM,EAAE,SADF;IAEN,YAAY;MACVC,eAAe,EAAEP,iBAAiB,CAACQ;IADzB,CAFN;IAKN,WAAW;MACTD,eAAe,EAAEP,iBAAiB,CAACS;IAD1B;EALL,CAnBY;EA4BpBC,IAAI,EAAE;IACJ;IACAH,eAAe,EAAEP,iBAAiB,CAACW,yBAF/B;IAGJ,YAAY;MACVJ,eAAe,EAAEP,iBAAiB,CAACY,4BADzB;MAEV,YAAY;QACVL,eAAe,KAAAR,MAAA,CAAKC,iBAAiB,CAACY,4BAAvB;MADL,CAFF;MAKV,WAAW;QACTL,eAAe,EAAEP,iBAAiB,CAACa;MAD1B;IALD;EAHR,CA5Bc;EAyCpBC,KAAK,EAAE;IACLP,eAAe,EAAEP,iBAAiB,CAACe;EAD9B,CAzCa;EA4CpBC,WAAW,EAAE;IACXT,eAAe,EAAEP,iBAAiB,CAACiB;EADxB,CA5CO;EA+CpBC,OAAO,EAAE;IACP/C,KAAK,EAAE,MADA;IAEP,gCAAgC;MAC9BD,MAAM,EAAE;IADsB,CAFzB;IAKP,+BAA+B;MAC7BA,MAAM,EAAE;IADqB,CALxB;IAQP,uDAAuD;MACrDA,MAAM,EAAE;IAD6C,CARhD;IAWPyB,OAAO,EAAE,MAXF;IAYPE,UAAU,EAAE,QAZL;IAaPM,QAAQ,EAAE;EAbH,CA/CW;EA8DpBgB,uBAAuB,EAAE;IACvBC,WAAW,EAAE;EADU,CA9DL;EAiEpBC,cAAc,EAAE;IACdlB,QAAQ,EAAE,OADI;IAEdmB,OAAO,EAAE/B,gBAAgB,CAACgC,kCAFZ;IAGd5B,OAAO,EAAE,MAHK;IAId6B,aAAa,EAAE;EAJD;AAjEI,CAAf;AC2BP,IAAMC,SAAS,GAAGC,eAAe,CAACrC,MAAD,EAAS;EAAEsC,IAAI,EAAE;AAAR,CAAT,CAAjC;;AA2BA;AACA;AACA;AACA;AACA;AACA;IACMC,OAA6B,gBAAGC,UAAU,CAAC,UAAC5F,KAAD,EAA0B+C,GAA1B,EAAuD;EAAA,IAC9F5C,QAD8F,GACTH,KADS,CAC9FG,QAD8F;IACpF0F,YADoF,GACT7F,KADS,CACpF6F,YADoF;IACtExD,MADsE,GACTrC,KADS,CACtEqC,MADsE;IAC9D+B,MAD8D,GACTpE,KADS,CAC9DoE,MAD8D;IACtDrC,KADsD,GACT/B,KADS,CACtD+B,KADsD;IAC/C+D,OAD+C,GACT9F,KADS,CAC/C8F,OAD+C;IACtC7C,SADsC,GACTjD,KADS,CACtCiD,SADsC;IAC3BR,OAD2B,GACTzC,KADS,CAC3ByC,OAD2B;IAClBsD,IADkB,GACT/F,KADS,CAClB+F,IADkB;EAEtG,IAAMC,OAAO,GAAGR,SAAS,CAACpC,MAAD,CAAzB;EACA,IAAMC,cAAyC,GAAG4C,kBAAkB,CAAClD,GAAD,CAApE;EACA,IAAMmD,eAAe,GAAG7F,MAAM,CAAC,EAAD,CAA9B;EAJsG,IAAAC,SAAA,GAKtDC,QAAQ,CAAS,IAAT,CAL8C;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAK/FL,gBAL+F,GAAAO,UAAA;IAK7E2F,mBAL6E,GAAA3F,UAAA;EAOtG,IAAM4F,gBAAgB,GAAGC,uBAAuB,CAACrG,KAAD,EAAQ,CAAC,SAAD,CAAR,CAAhD;EAEA,IAAMsG,UAAU,GAAGC,aAAa,CAAC,0BAAD,CAAhC;EAEA,IAAMC,cAAc,GAAGC,gBAAgB,CAACC,EAAjB,CAAoBV,OAAO,CAAC3C,cAA5B,CAAvB;EACA,IAAIwC,YAAY,KAAKc,YAAY,CAACC,KAAlC,EAAyC;IACvCJ,cAAc,CAACK,GAAf,CAAmBb,OAAO,CAAC7B,KAA3B;EACD;EACD,IAAIC,MAAJ,EAAY;IACVoC,cAAc,CAACK,GAAf,CAAmBb,OAAO,CAAC5B,MAA3B;EACD;EACD,QAAQ/B,MAAR;IACE,KAAKyE,aAAa,CAACC,KAAnB;MACEP,cAAc,CAACK,GAAf,CAAmBb,OAAO,CAACnB,KAA3B;MACA;IACF,KAAKiC,aAAa,CAACvE,WAAnB;MACEiE,cAAc,CAACK,GAAf,CAAmBb,OAAO,CAACjB,WAA3B;MACA;IACF,KAAK+B,aAAa,CAACE,IAAnB;MACER,cAAc,CAACK,GAAf,CAAmBb,OAAO,CAACvB,IAA3B;MACA;EATJ;EAaA+B,cAAc,CAACS,YAAf,CAA4BhE,SAA5B;EAEA,IAAMiE,eAAe,GAAGC,OAAO,CAAC,YAAM;IACpCjB,eAAe,CAACpF,OAAhB,GAA0B,EAA1B;IAEA,IAAMsG,kBAAkB,GAAG/F,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBpB,QAAvB,EAAiCuB,GAAjC,CAAqC,UAAC2F,KAAD,EAAQzF,KAAR,EAAkB;MAChF,IAAKyF,KAAD,CAAwB7F,IAAxB,KAAiCH,KAAK,CAACI,QAA3C,EAAqD;QACnD,OAAQ4F,KAAD,CAAwBrH,KAAxB,CAA8BG,QAA9B,CAAuCmH,MAAvC,CAA8CC,OAA9C,EAAuD7F,GAAvD,CAA2D,UAACC,IAAD,EAAO6F,SAAP,EAA6B;UAC7F,oBAAO1F,YAAY,CAACH,IAAD,EAAO;YAAE8F,GAAG,MAAA3D,MAAA,CAAMlC,KAAN,OAAAkC,MAAA,CAAe0D,SAAf;UAAL,CAAP,CAAnB;QACD,CAFM,CAAP;MAGD;MACD,OAAOH,KAAP;IACD,CAP0B,CAA3B;IASA,OAAOD,kBAAkB,CAACM,IAAnB,GAA0BhG,GAA1B,CAA8B,UAACC,IAAD,EAAqBC,KAArB,EAA+B;MAAA,IAAA+F,UAAA;MAClE,IAAMC,OAAkC,gBAAGC,SAAS,EAApD;MAEA3B,eAAe,CAACpF,OAAhB,CAAwBgH,IAAxB,CAA6B;QAC3B/E,GAAG,EAAE6E;MADsB,CAA7B,EAHkE;;MAQlE,IAAI,CAACjG,IAAD,aAACA,IAAD,wBAAAgG,UAAA,GAAChG,IAAI,CAAEH,IAAP,cAAAmG,UAAA,uBAAAA,UAAA,CAAqB9F,WAArB,MAAqC,eAAzC,EAA0D;QACxD,OAAOF,IAAP;MACD;MACD,oBACEN,KAAA,CAAAc,aAAA;QAAKY,GAAG,EAAE6E,OAAV;QAAmBH,GAAG,EAAE7F;MAAxB,GACGD,IADH,CADF;IAKD,CAhBM,CAAP;EAiBD,CA7B8B,EA6B5B,CAACxB,QAAD,EAAW+F,eAAX,CA7B4B,CAA/B;EA+BA,IAAM6B,cAAc,GAClB,CAAC9H,gBAAgB,IAAIA,gBAAgB,KAAK,CAA1C,KAAgDoB,KAAK,CAACC,QAAN,CAAe0G,KAAf,CAAqBd,eAArB,MAA0CjH,gBAAgB,GAAG,CAD/G;EAGAuG,cAAc,CAACS,YAAf,CAA4Bc,cAAc,IAAI/B,OAAO,CAAC/B,WAAtD;EAEA,IAAMgE,qBAAqB,GAAGpH,WAAW,CAAC,YAAM;IAC9C,IAAMqH,qBAAqB,GAAG,KAAK,CAAnC;IACAC,qBAAqB,CAAC,YAAM;MAC1B,IAAI,CAAC9E,cAAc,CAACvC,OAApB,EAA6B;MAC7B,IAAMsH,cAAc,GAAG/E,cAAc,CAACvC,OAAf,CAAuBuH,qBAAvB,GAA+CnG,KAAtE;MACA,IAAIoG,aAAa,GAAG,CAApB;MACA,IAAIC,SAAS,GAAG,IAAhB;MAGA,IAAIH,cAAc,GAAGF,qBAAjB,IAA0C,CAA9C,EAAiD;QAC/CK,SAAS,GAAG,CAAC,CAAb;MAED,CAHD,MAGO;QACLrC,eAAe,CAACpF,OAAhB,CAAwB0H,OAAxB,CAAgC,UAAC7G,IAAD,EAAOC,KAAP,EAAiB;UAC/C,IAAM6G,WAAW,GAAGvC,eAAe,CAACpF,OAAhB,CAAwBc,KAAxB,CAApB;UACA,IAAI6G,WAAW,IAAIA,WAAW,CAAC1F,GAA3B,IAAkC0F,WAAW,CAAC1F,GAAZ,CAAgBjC,OAAtD,EAA+D;YAC7D,IAAI4H,SAAS,GAAGD,WAAW,CAAC1F,GAAZ,CAAgBjC,OAAhB,CAAwBuH,qBAAxB,GAAgDnG,KAAhE;YACAwG,SAAS,IAAI9G,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAKsE,eAAe,CAACpF,OAAhB,CAAwB6H,MAAxB,GAAiC,CAA1D,GAA8D,CAA9D,GAAkE,CAA/E,CAF6D;;YAG7D,IAAI/G,KAAK,KAAKsE,eAAe,CAACpF,OAAhB,CAAwB6H,MAAxB,GAAiC,CAA/C,EAAkD;cAChD,IAAIL,aAAa,GAAGI,SAAhB,IAA6BN,cAAc,GAAG,CAAlD,EAAqD;gBACnDG,SAAS,GAAG3G,KAAZ;cAED;YACF,CALD,MAKO;cACL,IAAI0G,aAAa,GAAGI,SAAhB,IAA6BN,cAAc,GAAGF,qBAAlD,EAAyE;gBACvEK,SAAS,GAAG3G,KAAZ;cAED;cACD,IACE0G,aAAa,GAAGF,cAAc,GAAGF,qBAAjC,IACAI,aAAa,GAAGI,SAAhB,IAA6BN,cAAc,GAAGF,qBAFhD,EAGE;gBACAK,SAAS,GAAG3G,KAAK,GAAG,CAApB;cAED;YACF;YACD0G,aAAa,IAAII,SAAjB;UACD;QACF,CAzBD;MA0BD;MACDvC,mBAAmB,CAACoC,SAAD,CAAnB;IACD,CAvCoB,CAArB;EAwCD,CA1CwC,EA0CtC,CAAClF,cAAc,CAACvC,OAAhB,EAAyBoF,eAAe,CAACpF,OAAzC,EAAkDqF,mBAAlD,EAAuEe,eAAvE,EAAwFa,cAAxF,CA1CsC,CAAzC;EA4CA,IAAMa,QAAQ,GAAGvI,MAAM,CAAC,IAAIwI,cAAJ,CAAmBZ,qBAAnB,CAAD,CAAvB;EAEA/G,SAAS,CAAC,YAAM;IACd,IAAImC,cAAc,CAACvC,OAAnB,EAA4B;MAC1B8H,QAAQ,CAAC9H,OAAT,CAAiBgI,OAAjB,CAAyBzF,cAAc,CAACvC,OAAxC;IACD;IACD,OAAO,YAAM;MACX8H,QAAQ,CAAC9H,OAAT,CAAiBiI,UAAjB;IACD,CAFD;EAGD,CAPQ,EAON,CAAC1F,cAAc,CAACvC,OAAhB,CAPM,CAAT;EASAkI,eAAe,CAAC,YAAM;IACpBf,qBAAqB;EACtB,CAFc,EAEZ,CAACA,qBAAD,CAFY,CAAf;EAIA,IAAMgB,kBAAkB,GAAGpI,WAAW,CACpC,UAAChB,CAAD,EAAO;IACL,IAAIuE,MAAM,IAAI,OAAO3B,OAAP,KAAmB,UAAjC,EAA6C;MAC3CA,OAAO,CAACyG,sBAAsB,CAACrJ,CAAD,CAAvB,CAAP;IACD;EACF,CALmC,EAMpC,CAAC4C,OAAD,EAAU2B,MAAV,CANoC,CAAtC;EASA,oBACE/C,KAAA,CAAAc,aAAA,QAAAgH,QAAA;IACEC,KAAK,EAAEtD,OADT;IAEE/D,KAAK,EAAEA,KAFT;IAGEkB,SAAS,EAAEuD,cAAc,CAACvD,SAH5B;IAIEF,GAAG,EAAEM,cAJP;IAKE0C,IAAI,EAAEA,IALR;IAMEtD,OAAO,EAAEwG;EANX,GAOM7C,gBAPN,gBASE/E,KAAA,CAAAc,aAAA;IAAKc,SAAS,EAAE+C,OAAO,CAACf;EAAxB,GACG8C,cAAc,IACb1G,KAAK,CAACC,QAAN,CAAeI,GAAf,CAAmBwF,eAAnB,EAAoC,UAACvF,IAAD,EAAOC,KAAP,EAAiB;IACnD,IAAIA,KAAK,IAAI3B,gBAAgB,GAAG,CAAhC,EAAmC;MACjC,oBAAOoB,KAAK,CAACS,YAAN,CAAmBH,IAAnB,EAAyC;QAAEI,KAAK,EAAE;UAAEsH,UAAU,EAAE;QAAd;MAAT,CAAzC,CAAP;IACD;IACD,OAAO1H,IAAP;EACD,CALD,CAFJ,EAQG,CAACoG,cAAD,IAAmBb,eARtB,CATF,EAmBGa,cAAc,iBACb1G,KAAA,CAAAc,aAAA;IAAKc,SAAS,EAAE+C,OAAO,CAACd,uBAAxB;IAAiDkE,KAAK,EAAE9C,UAAU,CAACgD,OAAX,CAAmBC,SAAnB;EAAxD,gBACElI,KAAA,CAAAc,aAAA,CAACpC,eAAD;IAAiBE,gBAAgB,EAAEA,gBAAnC;IAAqDC,YAAY,EAAE8F,OAAO,CAACZ;EAA3E,GACG/D,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBpB,QAAvB,EAAiCuB,GAAjC,CAAqC,UAAC2F,KAAD,EAAW;IAC/C,IAAKA,KAAD,CAAwB7F,IAAxB,KAAiCH,KAAK,CAACI,QAA3C,EAAqD;MACnD,OAAQ4F,KAAD,CAAwBrH,KAAxB,CAA8BG,QAArC;IACD;IACD,OAAOkH,KAAP;EACD,CALA,CADH,CADF,CApBJ,CADF;AAkCD,CA3K+C;AA6KhD1B,OAAO,CAAC6D,YAAR,GAAuB;EACrB3D,YAAY,EAAEc,YAAY,CAAC8C,QADN;EAErBpH,MAAM,EAAEyE,aAAa,CAAC4C,IAFD;EAGrBtF,MAAM,EAAE;AAHa,CAAvB;AAMAuB,OAAO,CAAC9D,WAAR,GAAsB,SAAtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}