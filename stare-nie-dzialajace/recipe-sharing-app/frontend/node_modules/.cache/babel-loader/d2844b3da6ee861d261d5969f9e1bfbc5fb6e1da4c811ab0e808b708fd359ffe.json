{"ast":null,"code":"import litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport RenderScheduler from \"@ui5/webcomponents-base/dist/RenderScheduler.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport CalendarSelection from \"@ui5/webcomponents-base/dist/types/CalendarSelection.js\";\nimport DateRangePickerTemplate from \"./generated/templates/DateRangePickerTemplate.lit.js\";\n\n// Styles\nimport DateRangePickerCss from \"./generated/themes/DateRangePicker.css.js\";\nimport DatePicker from \"./DatePicker.js\";\n\n/**\n * @public\n */\nconst metadata = {\n  tag: \"ui5-daterange-picker\",\n  properties: /** @lends sap.ui.webcomponents.main.DateRangePicker.prototype */{\n    /**\n     * Determines the symbol which separates the dates.\n     *\n     * @type {string}\n     * @defaultvalue \"-\"\n     * @public\n     */\n    delimiter: {\n      type: String,\n      defaultValue: \"-\"\n    },\n    /**\n     * Defines the UNIX timestamp of the first date - seconds since 00:00:00 UTC on Jan 1, 1970.\n     * @type {number}\n     * @private\n    */\n    _firstDateTimestamp: {\n      type: Integer\n    },\n    /**\n     * Defines the UNIX timestamp of the second date- seconds since 00:00:00 UTC on Jan 1, 1970.\n     * @type {number}\n     * @private\n    */\n    _lastDateTimestamp: {\n      type: Integer\n    }\n  },\n  slots: /** @lends sap.ui.webcomponents.main.DateRangePicker.prototype */{\n    //\n  },\n  events: /** @lends sap.ui.webcomponents.main.DateRangePicker.prototype */{\n    //\n  }\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar.\n *\n * <h3>Usage</h3>\n * The user can enter a date by:\n * Using the calendar that opens in a popup or typing it in directly in the input field (not available for mobile devices).\n * For the <code>ui5-daterange-picker</code>\n * <h3>ES6 Module Import</h3>\n *\n * <code>import @ui5/webcomponents/dist/DateRangePicker.js\";</code>\n *\n * <h3>Keyboard Handling</h3>\n * The <code>ui5-daterange-picker</code> provides advanced keyboard handling.\n * <br>\n *\n * When the <code>ui5-daterange-picker</code> input field is focused the user can\n * increment or decrement the corresponding field of the JS date object referenced by <code>_firstDateTimestamp</code> propery\n * if the caret symbol is before the delimiter character or <code>_lastDateTimestamp</code> property if the caret symbol is\n * after the delimiter character.\n * The following shortcuts are enabled:\n * <br>\n * <ul>\n * <li>[PAGEDOWN] - Decrements the corresponding day of the month by one</li>\n * <li>[SHIFT] + [PAGEDOWN] - Decrements the corresponding month by one</li>\n * <li>[SHIFT] + [CTRL] + [PAGEDOWN] - Decrements the corresponding year by one</li>\n * <li>[PAGEUP] - Increments the corresponding day of the month by one</li>\n * <li>[SHIFT] + [PAGEUP] - Increments the corresponding month by one</li>\n * <li>[SHIFT] + [CTRL] + [PAGEUP] - Increments the corresponding year by one</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DateRangePicker\n * @extends DatePicker\n * @tagname ui5-daterange-picker\n * @since 1.0.0-rc.8\n * @public\n */\nclass DateRangePicker extends DatePicker {\n  static get metadata() {\n    return metadata;\n  }\n  static get render() {\n    return litRender;\n  }\n  static get styles() {\n    return [DatePicker.styles, DateRangePickerCss];\n  }\n  static get template() {\n    return DateRangePickerTemplate;\n  }\n  constructor() {\n    super();\n    this._calendar.selection = CalendarSelection.Range;\n  }\n  _splitValueByDelimiter(value) {\n    let returnValue = [];\n    if (!value) {\n      return [\"\", \"\"];\n    }\n    if (this.delimiter) {\n      returnValue = String(value).split(this.delimiter);\n    }\n    return returnValue;\n  }\n  _setValue(value) {\n    const emptyValue = value === \"\",\n      isValid = emptyValue || this._checkValueValidity(value);\n    if (value === this._prevValue) {\n      return this;\n    }\n    if (!value) {\n      this.value = \"\";\n      return;\n    }\n    const dates = this._splitValueByDelimiter(value);\n    if (!isValid) {\n      this.valueState = ValueState.Error;\n      console.warn(\"Value can not be converted to a valid dates\", this); // eslint-disable-line\n      return;\n    }\n    this.valueState = ValueState.None;\n    let firstDate = this.getFormat().parse(dates[0]);\n    let lastDate;\n    if (dates.length > 1) {\n      lastDate = this.getFormat().parse(dates[1]);\n      if (firstDate > lastDate) {\n        const temp = firstDate;\n        firstDate = lastDate;\n        lastDate = temp;\n      }\n      this._lastDateTimestamp = CalendarDate.fromLocalJSDate(lastDate, this._primaryCalendarType).valueOf() / 1000;\n    }\n    this._firstDateTimestamp = CalendarDate.fromLocalJSDate(firstDate, this._primaryCalendarType).valueOf() / 1000;\n    this.value = this._formatValue(firstDate, lastDate);\n    this._prevValue = this.value;\n  }\n  _changeCalendarSelection() {\n    if (this._calendarDate.getYear() < 1) {\n      // 0 is a valid year, but we cannot display it\n      return;\n    }\n    const timestamp = this._calendarDate.valueOf() / 1000;\n    const dates = this._splitValueByDelimiter(this.value);\n    this._calendar = Object.assign({}, this._calendar);\n    this._calendar.timestamp = timestamp;\n    this._calendar.selectedDates = dates.map(date => this._getTimeStampFromString(date) / 1000);\n  }\n  get _calendarDate() {\n    const dateStrings = this._splitValueByDelimiter(this.value),\n      value = Boolean(this.value) && this._checkValueValidity(this.value) ? dateStrings[0] : this.getFormat().format(new Date()),\n      millisecondsUTCFirstDate = value ? this.getFormat().parse(value, true).getTime() : this.getFormat().parse(this.validValue, true).getTime(),\n      oCalDateFirst = CalendarDate.fromTimestamp(millisecondsUTCFirstDate - millisecondsUTCFirstDate % (24 * 60 * 60 * 1000), this._primaryCalendarType);\n    return oCalDateFirst;\n  }\n\n  /**\n   * Currently selected first date represented as JavaScript Date instance.\n   *\n   * @readonly\n   * @type { Date }\n   * @public\n   */\n  get firstDateValue() {\n    const dateValue = new Date(this._firstDateTimestamp * 1000);\n    return new Date(dateValue.getUTCFullYear(), dateValue.getUTCMonth(), dateValue.getUTCDate(), dateValue.getUTCHours());\n  }\n\n  /**\n   * Currently selected last date represented as JavaScript Date instance.\n   *\n   * @readonly\n   * @type { Date }\n   * @public\n   */\n  get lastDateValue() {\n    const dateValue = new Date(this._lastDateTimestamp * 1000);\n    return new Date(dateValue.getUTCFullYear(), dateValue.getUTCMonth(), dateValue.getUTCDate(), dateValue.getUTCHours());\n  }\n  get _placeholder() {\n    return this.placeholder !== undefined ? this.placeholder : this._displayFormat.concat(\" \", this.delimiter, \" \", this._displayFormat);\n  }\n  async getDayPicker() {\n    this.responsivePopover = await this._respPopover();\n    const calendar = this.responsivePopover.querySelector(`#${this._id}-calendar`);\n    return calendar.shadowRoot.querySelector(`#${calendar._id}-daypicker`);\n  }\n  async _handleInputChange() {\n    const nextValue = await this._getInput().getInputValue();\n    const emptyValue = nextValue === \"\";\n    const isValid = emptyValue || this._checkValueValidity(nextValue);\n    if (isValid) {\n      this._setValue(nextValue);\n      this.valueState = ValueState.None;\n    } else {\n      this.valueState = ValueState.Error;\n    }\n    this.fireEvent(\"change\", {\n      value: nextValue,\n      valid: isValid\n    });\n    // Angular two way data binding\n    this.fireEvent(\"value-changed\", {\n      value: nextValue,\n      valid: isValid\n    });\n  }\n  _checkValueValidity(value) {\n    return this.isValid(value) && this.isInValidRange(value);\n  }\n  isValid(value) {\n    return this._splitValueByDelimiter(value).map(dateString => super.isValid(dateString)).every(valid => valid);\n  }\n  isInValidRange(value) {\n    return this._splitValueByDelimiter(value).map(dateString => super.isInValidRange(this._getTimeStampFromString(dateString))).every(valid => valid);\n  }\n  _handleCalendarChange(event) {\n    const selectedDates = event.detail.dates;\n    if (selectedDates.length === 2) {\n      this.closePicker();\n      this._firstDateTimestamp = selectedDates[0] < selectedDates[1] ? selectedDates[0] : selectedDates[1];\n      this._lastDateTimestamp = selectedDates[0] > selectedDates[1] ? selectedDates[0] : selectedDates[1];\n      const fireChange = this._handleCalendarSelectedDatesChange(event, this._firstDateTimestamp);\n      if (fireChange) {\n        this.fireEvent(\"change\", {\n          value: this.value,\n          valid: true\n        });\n        // Angular two way data binding\n        this.fireEvent(\"value-changed\", {\n          value: this.value,\n          valid: true\n        });\n      }\n    } else {\n      this._firstDateTimestamp = selectedDates[0];\n      this._lastDateTimestamp = undefined;\n      this._calendar.timestamp = selectedDates[0];\n      this._calendar.selectedDates = [...event.detail.dates];\n      this.value = \"\";\n      return false;\n    }\n  }\n\n  /**\n   * Adds or extracts a given number of measuring units from the \"dateValue\" property value\n   *\n   * @param {boolean} forward if true indicates addition\n   * @param {boolean} years indicates that the measuring unit is in years\n   * @param {boolean} months indicates that the measuring unit is in months\n   * @param {boolean} days indicates that the measuring unit is in days\n   * @param {int} step number of measuring units to substract or add defaults ot 1\n   */\n  async _changeDateValueWrapper(forward, years, months, days, step = 1) {\n    const emptyValue = this.value === \"\";\n    const isValid = emptyValue || this._checkValueValidity(this.value);\n    if (!isValid) {\n      return;\n    }\n    const dates = this._splitValueByDelimiter(this.value);\n    const innerInput = this.shadowRoot.querySelector(\"ui5-input\").shadowRoot.querySelector(\".ui5-input-inner\");\n    const caretPos = this._getCaretPosition(innerInput);\n    const first = dates[0] && caretPos <= dates[0].trim().length + 1;\n    const last = dates[1] && caretPos >= this.value.length - dates[1].trim().length - 1 && caretPos <= this.value.length;\n    let firstDate = this.getFormat().parse(dates[0]);\n    let lastDate = this.getFormat().parse(dates[1]);\n    if (first && firstDate) {\n      firstDate = this._changeDateValue(firstDate, forward, years, months, days, step);\n    } else if (last && lastDate) {\n      lastDate = this._changeDateValue(lastDate, forward, years, months, days, step);\n    }\n    this.value = this._formatValue(firstDate, lastDate);\n    await RenderScheduler.whenFinished();\n    // Return the caret on the previous position after rendering\n    this._setCaretPosition(innerInput, caretPos);\n  }\n\n  /**\n   * This method is used in the derived classes\n   */\n  async _handleEnterPressed() {\n    const innerInput = this.shadowRoot.querySelector(\"ui5-input\").shadowRoot.querySelector(\".ui5-input-inner\");\n    const caretPos = this._getCaretPosition(innerInput);\n    this._setValue(this.value);\n    await RenderScheduler.whenFinished();\n    // Return the caret on the previous position after rendering\n    this._setCaretPosition(innerInput, caretPos);\n  }\n  _onfocusout() {\n    this._setValue(this.value);\n  }\n\n  /**\n  * Returns the caret (cursor) position of the specified text field (field).\n  * Return value range is 0-field.value.length.\n  */\n  _getCaretPosition(field) {\n    // Initialize\n    let caretPos = 0;\n\n    // IE Support\n    if (document.selection) {\n      // Set focus on the element\n      field.focus();\n\n      // To get cursor position, get empty selection range\n      const selection = document.selection.createRange();\n\n      // Move selection start to 0 position\n      selection.moveStart(\"character\", -field.value.length);\n\n      // The caret position is selection length\n      caretPos = selection.text.length;\n    } else if (field.selectionStart || field.selectionStart === \"0\") {\n      // Firefox support\n      caretPos = field.selectionDirection === \"backward\" ? field.selectionStart : field.selectionEnd;\n    }\n    return caretPos;\n  }\n  _setCaretPosition(field, caretPos) {\n    if (field.createTextRange) {\n      const range = field.createTextRange();\n      range.move(\"character\", caretPos);\n      range.select();\n    } else if (field.selectionStart) {\n      field.focus();\n      field.setSelectionRange(caretPos, caretPos);\n    } else {\n      field.focus();\n    }\n  }\n  _updateValueCalendarSelectedDatesChange() {\n    const calStartDate = CalendarDate.fromTimestamp(this._firstDateTimestamp * 1000, this._primaryCalendarType);\n    const calEndDate = CalendarDate.fromTimestamp(this._lastDateTimestamp * 1000, this._primaryCalendarType);\n\n    // Collect both dates and merge them into one\n    this.value = this._formatValue(calStartDate.toLocalJSDate(), calEndDate.toLocalJSDate());\n    this._prevValue = this.value;\n  }\n\n  /**\n   * Combines the start and end dates of a range into a formated string\n   *\n   * @param {int} firstDate locale start date\n   * @param {int} lastDate locale end date\n   * @returns {string} formated start to end date range\n   */\n  _formatValue(firstDate, lastDate) {\n    let value = \"\";\n    const delimiter = this.delimiter,\n      format = this.getFormat(),\n      firstDateString = firstDate && format.format(firstDate),\n      lastDateString = lastDate && format.format(lastDate);\n    if (firstDateString) {\n      if (delimiter && delimiter !== \"\" && lastDateString) {\n        value = firstDateString.concat(\" \", delimiter, \" \", lastDateString);\n      } else {\n        value = firstDateString;\n      }\n    }\n    return value;\n  }\n}\nDateRangePicker.define();\nexport default DateRangePicker;","map":{"version":3,"names":["litRender","Integer","ValueState","RenderScheduler","CalendarDate","CalendarSelection","DateRangePickerTemplate","DateRangePickerCss","DatePicker","metadata","tag","properties","delimiter","type","String","defaultValue","_firstDateTimestamp","_lastDateTimestamp","slots","events","DateRangePicker","render","styles","template","constructor","_calendar","selection","Range","_splitValueByDelimiter","value","returnValue","split","_setValue","emptyValue","isValid","_checkValueValidity","_prevValue","dates","valueState","Error","console","warn","None","firstDate","getFormat","parse","lastDate","length","temp","fromLocalJSDate","_primaryCalendarType","valueOf","_formatValue","_changeCalendarSelection","_calendarDate","getYear","timestamp","Object","assign","selectedDates","map","date","_getTimeStampFromString","dateStrings","Boolean","format","Date","millisecondsUTCFirstDate","getTime","validValue","oCalDateFirst","fromTimestamp","firstDateValue","dateValue","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","lastDateValue","_placeholder","placeholder","undefined","_displayFormat","concat","getDayPicker","responsivePopover","_respPopover","calendar","querySelector","_id","shadowRoot","_handleInputChange","nextValue","_getInput","getInputValue","fireEvent","valid","isInValidRange","dateString","every","_handleCalendarChange","event","detail","closePicker","fireChange","_handleCalendarSelectedDatesChange","_changeDateValueWrapper","forward","years","months","days","step","innerInput","caretPos","_getCaretPosition","first","trim","last","_changeDateValue","whenFinished","_setCaretPosition","_handleEnterPressed","_onfocusout","field","document","focus","createRange","moveStart","text","selectionStart","selectionDirection","selectionEnd","createTextRange","range","move","select","setSelectionRange","_updateValueCalendarSelectedDatesChange","calStartDate","calEndDate","toLocalJSDate","firstDateString","lastDateString","define"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents/dist/DateRangePicker.js"],"sourcesContent":["import litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport RenderScheduler from \"@ui5/webcomponents-base/dist/RenderScheduler.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport CalendarSelection from \"@ui5/webcomponents-base/dist/types/CalendarSelection.js\";\nimport DateRangePickerTemplate from \"./generated/templates/DateRangePickerTemplate.lit.js\";\n\n// Styles\nimport DateRangePickerCss from \"./generated/themes/DateRangePicker.css.js\";\nimport DatePicker from \"./DatePicker.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-daterange-picker\",\n\tproperties: /** @lends sap.ui.webcomponents.main.DateRangePicker.prototype */ {\n\t\t/**\n\t\t * Determines the symbol which separates the dates.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"-\"\n\t\t * @public\n\t\t */\n\t\tdelimiter: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"-\",\n\t\t},\n\t\t/**\n\t\t * Defines the UNIX timestamp of the first date - seconds since 00:00:00 UTC on Jan 1, 1970.\n\t\t * @type {number}\n\t\t * @private\n\t\t*/\n\t\t_firstDateTimestamp: {\n\t\t\ttype: Integer,\n\t\t},\n\t\t/**\n\t\t * Defines the UNIX timestamp of the second date- seconds since 00:00:00 UTC on Jan 1, 1970.\n\t\t * @type {number}\n\t\t * @private\n\t\t*/\n\t\t_lastDateTimestamp: {\n\t\t\ttype: Integer,\n\t\t},\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.DateRangePicker.prototype */ {\n\t\t//\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.DateRangePicker.prototype */ {\n\t\t//\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n * The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar.\n *\n * <h3>Usage</h3>\n * The user can enter a date by:\n * Using the calendar that opens in a popup or typing it in directly in the input field (not available for mobile devices).\n * For the <code>ui5-daterange-picker</code>\n * <h3>ES6 Module Import</h3>\n *\n * <code>import @ui5/webcomponents/dist/DateRangePicker.js\";</code>\n *\n * <h3>Keyboard Handling</h3>\n * The <code>ui5-daterange-picker</code> provides advanced keyboard handling.\n * <br>\n *\n * When the <code>ui5-daterange-picker</code> input field is focused the user can\n * increment or decrement the corresponding field of the JS date object referenced by <code>_firstDateTimestamp</code> propery\n * if the caret symbol is before the delimiter character or <code>_lastDateTimestamp</code> property if the caret symbol is\n * after the delimiter character.\n * The following shortcuts are enabled:\n * <br>\n * <ul>\n * <li>[PAGEDOWN] - Decrements the corresponding day of the month by one</li>\n * <li>[SHIFT] + [PAGEDOWN] - Decrements the corresponding month by one</li>\n * <li>[SHIFT] + [CTRL] + [PAGEDOWN] - Decrements the corresponding year by one</li>\n * <li>[PAGEUP] - Increments the corresponding day of the month by one</li>\n * <li>[SHIFT] + [PAGEUP] - Increments the corresponding month by one</li>\n * <li>[SHIFT] + [CTRL] + [PAGEUP] - Increments the corresponding year by one</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DateRangePicker\n * @extends DatePicker\n * @tagname ui5-daterange-picker\n * @since 1.0.0-rc.8\n * @public\n */\nclass DateRangePicker extends DatePicker {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get styles() {\n\t\treturn [DatePicker.styles, DateRangePickerCss];\n\t}\n\n\tstatic get template() {\n\t\treturn DateRangePickerTemplate;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._calendar.selection = CalendarSelection.Range;\n\t}\n\n\t_splitValueByDelimiter(value) {\n\t\tlet returnValue = [];\n\n\t\tif (!value) {\n\t\t\treturn [\"\", \"\"];\n\t\t}\n\n\t\tif (this.delimiter) {\n\t\t\treturnValue = String(value).split(this.delimiter);\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\t_setValue(value) {\n\t\tconst emptyValue = value === \"\",\n\t\t\tisValid = emptyValue || this._checkValueValidity(value);\n\n\t\tif (value === this._prevValue) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!value) {\n\t\t\tthis.value = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tconst dates = this._splitValueByDelimiter(value);\n\t\tif (!isValid) {\n\t\t\tthis.valueState = ValueState.Error;\n\t\t\tconsole.warn(\"Value can not be converted to a valid dates\", this); // eslint-disable-line\n\t\t\treturn;\n\t\t}\n\t\tthis.valueState = ValueState.None;\n\n\t\tlet firstDate = this.getFormat().parse(dates[0]);\n\t\tlet lastDate;\n\n\t\tif (dates.length > 1) {\n\t\t\tlastDate = this.getFormat().parse(dates[1]);\n\n\t\t\tif (firstDate > lastDate) {\n\t\t\t\tconst temp = firstDate;\n\t\t\t\tfirstDate = lastDate;\n\t\t\t\tlastDate = temp;\n\t\t\t}\n\t\t\tthis._lastDateTimestamp = CalendarDate.fromLocalJSDate(lastDate, this._primaryCalendarType).valueOf() / 1000;\n\t\t}\n\t\tthis._firstDateTimestamp = CalendarDate.fromLocalJSDate(firstDate, this._primaryCalendarType).valueOf() / 1000;\n\n\t\tthis.value = this._formatValue(firstDate, lastDate);\n\t\tthis._prevValue = this.value;\n\t}\n\n\t_changeCalendarSelection() {\n\t\tif (this._calendarDate.getYear() < 1) {\n\t\t\t// 0 is a valid year, but we cannot display it\n\t\t\treturn;\n\t\t}\n\n\t\tconst timestamp = this._calendarDate.valueOf() / 1000;\n\t\tconst dates = this._splitValueByDelimiter(this.value);\n\t\tthis._calendar = Object.assign({}, this._calendar);\n\t\tthis._calendar.timestamp = timestamp;\n\t\tthis._calendar.selectedDates = dates.map(date => this._getTimeStampFromString(date) / 1000);\n\t}\n\n\tget _calendarDate() {\n\t\tconst dateStrings = this._splitValueByDelimiter(this.value),\n\t\t\tvalue = Boolean(this.value) && this._checkValueValidity(this.value) ? dateStrings[0] : this.getFormat().format(new Date()),\n\t\t\tmillisecondsUTCFirstDate = value ? this.getFormat().parse(value, true).getTime() : this.getFormat().parse(this.validValue, true).getTime(),\n\t\t\toCalDateFirst = CalendarDate.fromTimestamp(\n\t\t\t\tmillisecondsUTCFirstDate - (millisecondsUTCFirstDate % (24 * 60 * 60 * 1000)),\n\t\t\t\tthis._primaryCalendarType\n\t\t\t);\n\n\t\treturn oCalDateFirst;\n\t}\n\n\t/**\n\t * Currently selected first date represented as JavaScript Date instance.\n\t *\n\t * @readonly\n\t * @type { Date }\n\t * @public\n\t */\n\tget firstDateValue() {\n\t\tconst dateValue = new Date(this._firstDateTimestamp * 1000);\n\t\treturn new Date(dateValue.getUTCFullYear(), dateValue.getUTCMonth(), dateValue.getUTCDate(), dateValue.getUTCHours());\n\t}\n\n\t/**\n\t * Currently selected last date represented as JavaScript Date instance.\n\t *\n\t * @readonly\n\t * @type { Date }\n\t * @public\n\t */\n\tget lastDateValue() {\n\t\tconst dateValue = new Date(this._lastDateTimestamp * 1000);\n\t\treturn new Date(dateValue.getUTCFullYear(), dateValue.getUTCMonth(), dateValue.getUTCDate(), dateValue.getUTCHours());\n\t}\n\n\tget _placeholder() {\n\t\treturn this.placeholder !== undefined ? this.placeholder : this._displayFormat.concat(\" \", this.delimiter, \" \", this._displayFormat);\n\t}\n\n\tasync getDayPicker() {\n\t\tthis.responsivePopover = await this._respPopover();\n\t\tconst calendar = this.responsivePopover.querySelector(`#${this._id}-calendar`);\n\t\treturn calendar.shadowRoot.querySelector(`#${calendar._id}-daypicker`);\n\t}\n\n\tasync _handleInputChange() {\n\t\tconst nextValue = await this._getInput().getInputValue();\n\t\tconst emptyValue = nextValue === \"\";\n\t\tconst isValid = emptyValue || this._checkValueValidity(nextValue);\n\n\t\tif (isValid) {\n\t\t\tthis._setValue(nextValue);\n\t\t\tthis.valueState = ValueState.None;\n\t\t} else {\n\t\t\tthis.valueState = ValueState.Error;\n\t\t}\n\n\t\tthis.fireEvent(\"change\", { value: nextValue, valid: isValid });\n\t\t// Angular two way data binding\n\t\tthis.fireEvent(\"value-changed\", { value: nextValue, valid: isValid });\n\t}\n\n\t_checkValueValidity(value) {\n\t\treturn this.isValid(value) && this.isInValidRange(value);\n\t}\n\n\tisValid(value) {\n\t\treturn this._splitValueByDelimiter(value)\n\t\t\t.map(dateString => super.isValid(dateString))\n\t\t\t.every(valid => valid);\n\t}\n\n\tisInValidRange(value) {\n\t\treturn this._splitValueByDelimiter(value)\n\t\t\t.map(dateString => super.isInValidRange(this._getTimeStampFromString(dateString)))\n\t\t\t.every(valid => valid);\n\t}\n\n\t_handleCalendarChange(event) {\n\t\tconst selectedDates = event.detail.dates;\n\t\tif (selectedDates.length === 2) {\n\t\t\tthis.closePicker();\n\t\t\tthis._firstDateTimestamp = selectedDates[0] < selectedDates[1] ? selectedDates[0] : selectedDates[1];\n\t\t\tthis._lastDateTimestamp = selectedDates[0] > selectedDates[1] ? selectedDates[0] : selectedDates[1];\n\t\t\tconst fireChange = this._handleCalendarSelectedDatesChange(event, this._firstDateTimestamp);\n\n\t\t\tif (fireChange) {\n\t\t\t\tthis.fireEvent(\"change\", { value: this.value, valid: true });\n\t\t\t\t// Angular two way data binding\n\t\t\t\tthis.fireEvent(\"value-changed\", { value: this.value, valid: true });\n\t\t\t}\n\t\t} else {\n\t\t\tthis._firstDateTimestamp = selectedDates[0];\n\t\t\tthis._lastDateTimestamp = undefined;\n\t\t\tthis._calendar.timestamp = selectedDates[0];\n\t\t\tthis._calendar.selectedDates = [...event.detail.dates];\n\t\t\tthis.value = \"\";\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Adds or extracts a given number of measuring units from the \"dateValue\" property value\n\t *\n\t * @param {boolean} forward if true indicates addition\n\t * @param {boolean} years indicates that the measuring unit is in years\n\t * @param {boolean} months indicates that the measuring unit is in months\n\t * @param {boolean} days indicates that the measuring unit is in days\n\t * @param {int} step number of measuring units to substract or add defaults ot 1\n\t */\n\tasync _changeDateValueWrapper(forward, years, months, days, step = 1) {\n\t\tconst emptyValue = this.value === \"\";\n\t\tconst isValid = emptyValue || this._checkValueValidity(this.value);\n\n\t\tif (!isValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dates = this._splitValueByDelimiter(this.value);\n\t\tconst innerInput = this.shadowRoot.querySelector(\"ui5-input\").shadowRoot.querySelector(\".ui5-input-inner\");\n\t\tconst caretPos = this._getCaretPosition(innerInput);\n\t\tconst first = dates[0] && caretPos <= dates[0].trim().length + 1;\n\t\tconst last = dates[1] && (caretPos >= this.value.length - dates[1].trim().length - 1 && caretPos <= this.value.length);\n\t\tlet firstDate = this.getFormat().parse(dates[0]);\n\t\tlet lastDate = this.getFormat().parse(dates[1]);\n\n\t\tif (first && firstDate) {\n\t\t\tfirstDate = this._changeDateValue(firstDate, forward, years, months, days, step);\n\t\t} else if (last && lastDate) {\n\t\t\tlastDate = this._changeDateValue(lastDate, forward, years, months, days, step);\n\t\t}\n\n\t\tthis.value = this._formatValue(firstDate, lastDate);\n\n\t\tawait RenderScheduler.whenFinished();\n\t\t// Return the caret on the previous position after rendering\n\t\tthis._setCaretPosition(innerInput, caretPos);\n\t}\n\n\t/**\n\t * This method is used in the derived classes\n\t */\n\tasync _handleEnterPressed() {\n\t\tconst innerInput = this.shadowRoot.querySelector(\"ui5-input\").shadowRoot.querySelector(\".ui5-input-inner\");\n\t\tconst caretPos = this._getCaretPosition(innerInput);\n\n\t\tthis._setValue(this.value);\n\n\t\tawait RenderScheduler.whenFinished();\n\t\t// Return the caret on the previous position after rendering\n\t\tthis._setCaretPosition(innerInput, caretPos);\n\t}\n\n\t_onfocusout() {\n\t\tthis._setValue(this.value);\n\t}\n\n\t/**\n\t* Returns the caret (cursor) position of the specified text field (field).\n\t* Return value range is 0-field.value.length.\n\t*/\n\t_getCaretPosition(field) {\n\t\t// Initialize\n\t\tlet caretPos = 0;\n\n\t\t// IE Support\n\t\tif (document.selection) {\n\t\t\t// Set focus on the element\n\t\t\tfield.focus();\n\n\t\t\t// To get cursor position, get empty selection range\n\t\t\tconst selection = document.selection.createRange();\n\n\t\t\t// Move selection start to 0 position\n\t\t\tselection.moveStart(\"character\", -field.value.length);\n\n\t\t\t// The caret position is selection length\n\t\t\tcaretPos = selection.text.length;\n\t\t} else if (field.selectionStart || field.selectionStart === \"0\") { // Firefox support\n\t\t\tcaretPos = field.selectionDirection === \"backward\" ? field.selectionStart : field.selectionEnd;\n\t\t}\n\n\t\treturn caretPos;\n\t}\n\n\t_setCaretPosition(field, caretPos) {\n\t\tif (field.createTextRange) {\n\t\t\tconst range = field.createTextRange();\n\t\t\trange.move(\"character\", caretPos);\n\t\t\trange.select();\n\t\t} else if (field.selectionStart) {\n\t\t\tfield.focus();\n\t\t\tfield.setSelectionRange(caretPos, caretPos);\n\t\t} else {\n\t\t\tfield.focus();\n\t\t}\n\t}\n\n\t_updateValueCalendarSelectedDatesChange() {\n\t\tconst calStartDate = CalendarDate.fromTimestamp(this._firstDateTimestamp * 1000, this._primaryCalendarType);\n\t\tconst calEndDate = CalendarDate.fromTimestamp(this._lastDateTimestamp * 1000, this._primaryCalendarType);\n\n\t\t// Collect both dates and merge them into one\n\t\tthis.value = this._formatValue(calStartDate.toLocalJSDate(), calEndDate.toLocalJSDate());\n\t\tthis._prevValue = this.value;\n\t}\n\n\t/**\n\t * Combines the start and end dates of a range into a formated string\n\t *\n\t * @param {int} firstDate locale start date\n\t * @param {int} lastDate locale end date\n\t * @returns {string} formated start to end date range\n\t */\n\t_formatValue(firstDate, lastDate) {\n\t\tlet value = \"\";\n\t\tconst delimiter = this.delimiter,\n\t\t\tformat = this.getFormat(),\n\t\t\tfirstDateString = firstDate && format.format(firstDate),\n\t\t\tlastDateString = lastDate && format.format(lastDate);\n\n\t\tif (firstDateString) {\n\t\t\tif (delimiter && delimiter !== \"\" && lastDateString) {\n\t\t\t\tvalue = firstDateString.concat(\" \", delimiter, \" \", lastDateString);\n\t\t\t} else {\n\t\t\t\tvalue = firstDateString;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\nDateRangePicker.define();\n\nexport default DateRangePicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}