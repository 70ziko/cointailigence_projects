{"ast":null,"code":"import { CalendarType } from '@ui5/webcomponents-react/lib/CalendarType';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/DateRangePicker';\n\n/**\n * The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/DateRangePicker\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nvar DateRangePicker = withWebComponent('ui5-daterange-picker', ['delimiter', 'formatPattern', 'maxDate', 'minDate', 'name', 'placeholder', 'primaryCalendarType', 'value', 'valueState'], ['disabled', 'hideWeekNumbers', 'readonly', 'required'], ['valueStateMessage'], ['change', 'input']);\nDateRangePicker.displayName = 'DateRangePicker';\nDateRangePicker.defaultProps = {\n  delimiter: '-',\n  disabled: false,\n  hideWeekNumbers: false,\n  placeholder: undefined,\n  primaryCalendarType: CalendarType.Gregorian,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\nexport { DateRangePicker };","map":{"version":3,"names":["DateRangePicker","withWebComponent","displayName","defaultProps","delimiter","disabled","hideWeekNumbers","placeholder","undefined","primaryCalendarType","CalendarType","Gregorian","readonly","required","valueState","ValueState","None"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/webComponents/DateRangePicker/index.tsx"],"sourcesContent":["import { CalendarType } from '@ui5/webcomponents-react/lib/CalendarType';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent, WithWebComponentPropTypes } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/DateRangePicker';\nimport { FC, ReactNode } from 'react';\n\nexport interface DateRangePickerPropTypes extends Omit<WithWebComponentPropTypes, 'onChange' | 'onInput'> {\n  /**\n   * Determines the symbol which separates the dates.\n   */\n  delimiter?: string;\n  /**\n   * Determines whether the `DatePicker` is displayed as disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Determines the format, displayed in the input field.\n   */\n  formatPattern?: string;\n  /**\n   * Defines the visibility of the week numbers column.\n   *\n   * **Note: **For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.****\n   */\n  hideWeekNumbers?: boolean;\n  /**\n   * Determines the maximum date available for selection.\n   */\n  maxDate?: string;\n  /**\n   * Determines the minimum date available for selection.\n   */\n  minDate?: string;\n  /**\n   * Determines the name with which the `DatePicker` will be submitted in an HTML form.\n   *\n   * **Important:** For the `name` property to have effect, you must add the following import to your project: `import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`\n   *\n   * **Note:** When set, a native `input` HTML element will be created inside the `DatePicker` so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines a short hint, intended to aid the user with data entry when the `DatePicker` has no value.\n   *\n   * **Note:** When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the `DatePicker` appear empty - without placeholder or format pattern.\n   */\n  placeholder?: string;\n  /**\n   * Determines the calendar type. The input value is formated according to the calendar type and the picker shows the months and years from the specified calendar.\n   *\n   * Available options are:\n   *\n   * *   `Gregorian`\n   * *   `Islamic`\n   * *   `Japanese`\n   * *   `Buddhist`\n   * *   `Persian`<br/>__Note:__ Calendar types other than Gregorian must be imported manually:<br />`import \"@ui5/webcomponents-localization/dist/features/calendar/{primaryCalendarType}.js\";`\n   */\n  primaryCalendarType?: CalendarType;\n  /**\n   * Determines whether the `DatePicker` is displayed as read-only.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the `DatePicker` is required.\n   */\n  required?: boolean;\n  /**\n   * Defines a formatted date value.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the `DatePicker`.\n   *\n   * Available options are:\n   *\n   * *   `None`\n   * *   `Error`\n   * *   `Warning`\n   * *   `Success`\n   * *   `Information`\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the value state message that will be displayed as pop up under the `DatePicker`.\n   *\n   * **Note:** If not specified, a default text (in the respective language) will be displayed.\n   * **Note:** The `valueStateMessage` would be displayed, when the `DatePicker` is in `Information`, `Warning` or `Error` value state.\n   */\n  valueStateMessage?: ReactNode;\n  /**\n   * Fired when the input operation has finished by pressing Enter or on focusout.\n   */\n  onChange?: (event: CustomEvent) => void;\n  /**\n   * Fired when the value of the `DatePicker` is changed at each key stroke.\n   */\n  onInput?: (event: CustomEvent) => void;\n}\n\n/**\n * The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar.\n *\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/DateRangePicker\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst DateRangePicker: FC<DateRangePickerPropTypes> = withWebComponent<DateRangePickerPropTypes>(\n  'ui5-daterange-picker',\n  [\n    'delimiter',\n    'formatPattern',\n    'maxDate',\n    'minDate',\n    'name',\n    'placeholder',\n    'primaryCalendarType',\n    'value',\n    'valueState'\n  ],\n  ['disabled', 'hideWeekNumbers', 'readonly', 'required'],\n  ['valueStateMessage'],\n  ['change', 'input']\n);\n\nDateRangePicker.displayName = 'DateRangePicker';\n\nDateRangePicker.defaultProps = {\n  delimiter: '-',\n  disabled: false,\n  hideWeekNumbers: false,\n  placeholder: undefined,\n  primaryCalendarType: CalendarType.Gregorian,\n  readonly: false,\n  required: false,\n  valueState: ValueState.None\n};\n\nexport { DateRangePicker };\n"],"mappings":";;;;;AAoGA;AACA;AACA;AACA;AACA;IACMA,eAA6C,GAAGC,gBAAgB,CACpE,sBADoE,EAEpE,CACE,WADF,EAEE,eAFF,EAGE,SAHF,EAIE,SAJF,EAKE,MALF,EAME,aANF,EAOE,qBAPF,EAQE,OARF,EASE,YATF,CAFoE,EAapE,CAAC,UAAD,EAAa,iBAAb,EAAgC,UAAhC,EAA4C,UAA5C,CAboE,EAcpE,CAAC,mBAAD,CAdoE,EAepE,CAAC,QAAD,EAAW,OAAX,CAfoE;AAkBtED,eAAe,CAACE,WAAhB,GAA8B,iBAA9B;AAEAF,eAAe,CAACG,YAAhB,GAA+B;EAC7BC,SAAS,EAAE,GADkB;EAE7BC,QAAQ,EAAE,KAFmB;EAG7BC,eAAe,EAAE,KAHY;EAI7BC,WAAW,EAAEC,SAJgB;EAK7BC,mBAAmB,EAAEC,YAAY,CAACC,SALL;EAM7BC,QAAQ,EAAE,KANmB;EAO7BC,QAAQ,EAAE,KAPmB;EAQ7BC,UAAU,EAAEC,UAAU,CAACC;AARM,CAA/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}