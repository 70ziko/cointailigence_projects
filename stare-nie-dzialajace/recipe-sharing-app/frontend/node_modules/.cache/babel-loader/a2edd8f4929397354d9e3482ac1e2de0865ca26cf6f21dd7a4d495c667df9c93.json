{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _wrapRegExp from '@babel/runtime/helpers/wrapRegExp';\nimport { isIE } from '@ui5/webcomponents-react-base/lib/Device';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useViewportRange } from '@ui5/webcomponents-react-base/lib/useViewportRange';\nimport { GridPosition } from '@ui5/webcomponents-react/lib/GridPosition';\nimport React, { forwardRef, useCallback, cloneElement, Children } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nvar generateGridSpans = function generateGridSpans() {\n  var gridSpan = {};\n  for (var i = 1; i <= 12; i++) {\n    gridSpan[\"gridSpan\".concat(i)] = _defineProperty({\n      gridColumn: \"span \".concat(i)\n    }, '-ms-grid-column-span', i);\n  }\n  return gridSpan;\n};\nvar styles = _objectSpread(_objectSpread({\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    '-ms-grid-columns': '(1fr)[12]'\n  }\n}, generateGridSpans()), {}, {\n  positionCenter: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  positionRight: {\n    marginLeft: 'auto',\n    marginRight: 0\n  }\n});\nvar INDENT_PATTERN = /*#__PURE__*/_wrapRegExp(/^(XL([0-9]|1[0-2]))? ?(L([0-9]|1[0-2]))? ?(M([0-9]|1[0-2]))? ?(S([0-9]|1[0-2]))?$/i, {\n  LargeDesktop: 2,\n  Desktop: 4,\n  Tablet: 6,\n  Phone: 8\n});\nvar SPAN_PATTERN = /*#__PURE__*/_wrapRegExp(/^(XL([1-9]|1[0-2]))? ?(L([1-9]|1[0-2]))? ?(M([1-9]|1[0-2]))? ?(S([1-9]|1[0-2]))?$/i, {\n  LargeDesktop: 2,\n  Desktop: 4,\n  Tablet: 6,\n  Phone: 8\n});\nvar DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 1);\nDefaultSpanMap.set('Tablet', 2);\nDefaultSpanMap.set('Desktop', 4);\nDefaultSpanMap.set('LargeDesktop', 4);\nvar DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\nvar getSpanFromString = function getSpanFromString(span, currentRange) {\n  var _spanConfig$groups$cu;\n  var spanConfig = SPAN_PATTERN.exec(span);\n  return (_spanConfig$groups$cu = spanConfig === null || spanConfig === void 0 ? void 0 : spanConfig.groups[currentRange]) !== null && _spanConfig$groups$cu !== void 0 ? _spanConfig$groups$cu : DefaultSpanMap.get(currentRange);\n};\nvar getIndentFromString = function getIndentFromString(indent, currentRange) {\n  var _indentConfig$groups$;\n  var indentConfig = INDENT_PATTERN.exec(indent);\n  return (_indentConfig$groups$ = indentConfig === null || indentConfig === void 0 ? void 0 : indentConfig.groups[currentRange]) !== null && _indentConfig$groups$ !== void 0 ? _indentConfig$groups$ : DefaultIndentMap.get(currentRange);\n};\nvar getIECellPlacement = function getIECellPlacement(col, row, span) {\n  var colStart;\n  var safeSpan = parseInt(span);\n  var added = col + safeSpan;\n  if (added <= 12) {\n    colStart = col + 1;\n    col = added;\n  } else {\n    colStart = 1;\n    col = safeSpan;\n    row++;\n  }\n  return [col, row, colStart];\n};\nvar useStyles = createUseStyles(styles, {\n  name: 'Grid'\n});\n/**\n * A layout container component used for aligning items with various sizes in a simple grid.\n */\n\nvar Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var position = props.position,\n    children = props.children,\n    hSpacing = props.hSpacing,\n    vSpacing = props.vSpacing,\n    style = props.style,\n    className = props.className,\n    tooltip = props.tooltip,\n    slot = props.slot,\n    defaultIndent = props.defaultIndent,\n    defaultSpan = props.defaultSpan;\n  var classes = useStyles();\n  var currentRange = useViewportRange('StdExt');\n  var gridClasses = StyleClassHelper.of(classes.grid);\n  if (GridPosition.Center === position) {\n    gridClasses.put(classes.positionCenter);\n  }\n  if (GridPosition.Right === position) {\n    gridClasses.put(classes.positionRight);\n  }\n  if (className) {\n    gridClasses.put(className);\n  }\n  var column = 0;\n  var row = 1;\n  var renderGridElements = useCallback(function (child) {\n    var _child$props$dataLay, _child$props$dataLay2;\n    if (!child) return null;\n    var childSpan = getSpanFromString((_child$props$dataLay = child.props['data-layout-span']) !== null && _child$props$dataLay !== void 0 ? _child$props$dataLay : defaultSpan, currentRange);\n    var childClass = classes[\"gridSpan\".concat(childSpan)];\n    var childrenWithGridLayout = [/*#__PURE__*/React.createElement(\"div\", {\n      className: childClass\n    }, child)];\n    var indentSpan = getIndentFromString((_child$props$dataLay2 = child.props['data-layout-indent']) !== null && _child$props$dataLay2 !== void 0 ? _child$props$dataLay2 : defaultIndent, currentRange);\n    if (indentSpan && indentSpan > 0) {\n      childrenWithGridLayout.unshift( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes[\"gridSpan\".concat(indentSpan)]\n      }));\n    }\n    if (isIE()) {\n      return childrenWithGridLayout.map(function (item, index) {\n        var colStart;\n        if (childrenWithGridLayout.length === 2 && index === 0) {\n          var _getIECellPlacement = getIECellPlacement(column, row, indentSpan);\n          var _getIECellPlacement2 = _slicedToArray(_getIECellPlacement, 3);\n          column = _getIECellPlacement2[0];\n          row = _getIECellPlacement2[1];\n          colStart = _getIECellPlacement2[2];\n          return /*#__PURE__*/cloneElement(item, {\n            style: {\n              marginRight: vSpacing,\n              marginBottom: hSpacing,\n              msGridRow: row,\n              msGridColumn: colStart\n            }\n          });\n        }\n        var _getIECellPlacement3 = getIECellPlacement(column, row, childSpan);\n        var _getIECellPlacement4 = _slicedToArray(_getIECellPlacement3, 3);\n        column = _getIECellPlacement4[0];\n        row = _getIECellPlacement4[1];\n        colStart = _getIECellPlacement4[2];\n        return /*#__PURE__*/cloneElement(item, {\n          style: {\n            marginRight: vSpacing,\n            marginBottom: hSpacing,\n            msGridRow: row,\n            msGridColumn: colStart\n          }\n        });\n      });\n    }\n    return childrenWithGridLayout;\n  }, [currentRange, defaultSpan, defaultIndent, classes, vSpacing, hSpacing]);\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: gridClasses.valueOf(),\n    style: _objectSpread({\n      gridRowGap: vSpacing,\n      gridColumnGap: hSpacing\n    }, style),\n    title: tooltip,\n    slot: slot\n  }, passThroughProps), Children.map(children, renderGridElements));\n});\nGrid.displayName = 'Grid';\nGrid.defaultProps = {\n  hSpacing: '1rem',\n  vSpacing: '1rem',\n  defaultIndent: 'XL0 L0 M0 S0',\n  defaultSpan: 'XL3 L3 M6 S12'\n};\nexport { Grid };","map":{"version":3,"names":["generateGridSpans","gridSpan","i","concat","_defineProperty","gridColumn","styles","_objectSpread","grid","display","gridTemplateColumns","positionCenter","marginLeft","marginRight","positionRight","INDENT_PATTERN","_wrapRegExp","LargeDesktop","Desktop","Tablet","Phone","SPAN_PATTERN","DefaultSpanMap","Map","set","DefaultIndentMap","getSpanFromString","span","currentRange","_spanConfig$groups$cu","spanConfig","exec","groups","get","getIndentFromString","indent","_indentConfig$groups$","indentConfig","getIECellPlacement","col","row","colStart","safeSpan","parseInt","added","useStyles","createUseStyles","name","Grid","forwardRef","props","ref","position","children","hSpacing","vSpacing","style","className","tooltip","slot","defaultIndent","defaultSpan","classes","useViewportRange","gridClasses","StyleClassHelper","of","GridPosition","Center","put","Right","column","renderGridElements","useCallback","child","_child$props$dataLay","_child$props$dataLay2","childSpan","childClass","childrenWithGridLayout","React","createElement","indentSpan","unshift","isIE","map","item","index","length","_getIECellPlacement","_getIECellPlacement2","_slicedToArray","cloneElement","marginBottom","msGridRow","msGridColumn","_getIECellPlacement3","_getIECellPlacement4","passThroughProps","usePassThroughHtmlProps","_extends","valueOf","gridRowGap","gridColumnGap","title","Children","displayName","defaultProps"],"sources":["/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Grid/Grid.jss.ts","/home/paris/projekty/haergi/feng/workspace/recipe-sharing-app/frontend/node_modules/@ui5/webcomponents-react/src/components/Grid/index.tsx"],"sourcesContent":["const generateGridSpans = () => {\n  let gridSpan = {};\n  for (let i = 1; i <= 12; i++) {\n    gridSpan[`gridSpan${i}`] = { gridColumn: `span ${i}`, ['-ms-grid-column-span']: i };\n  }\n  return gridSpan;\n};\n\nexport const styles = {\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: `repeat(12, 1fr)`,\n    '-ms-grid-columns': '(1fr)[12]'\n  },\n  ...generateGridSpans(),\n  positionCenter: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  positionRight: {\n    marginLeft: 'auto',\n    marginRight: 0\n  }\n};\n","import { isIE } from '@ui5/webcomponents-react-base/lib/Device';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useViewportRange } from '@ui5/webcomponents-react-base/lib/useViewportRange';\nimport { CommonProps } from '@ui5/webcomponents-react/interfaces/CommonProps';\nimport { GridPosition } from '@ui5/webcomponents-react/lib/GridPosition';\nimport React, {\n  Children,\n  cloneElement,\n  CSSProperties,\n  FC,\n  forwardRef,\n  ReactElement,\n  ReactNode,\n  ReactNodeArray,\n  Ref,\n  useCallback\n} from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { styles } from './Grid.jss';\n\nexport interface GridPropTypes extends CommonProps {\n  /**\n   * Vertical spacing between the rows in the Grid. If not specified, then 1rem.\n   */\n  vSpacing?: CSSProperties['height'];\n  /**\n   * Horizontal spacing between the content in the Grid. If not specified, then 1rem.\n   */\n  hSpacing?: CSSProperties['width'];\n  /**\n   * Position of the Grid in the window or surrounding container. Possible values are \"Center\", \"Left\" and \"Right\".\n   */\n  position?: GridPosition;\n  /**\n   * A string type that represents Grid's default span values for very large, large, medium and small screens for the whole Grid.\n   * Allowed values are separated by space Letters XL, L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\".\n   * Note that the parameters has to be provided in the order very large, large, medium, small.\n   * <br />\n   * You can override this default span on each child element by setting the prop `data-layout-span`.\n   */\n  defaultSpan?: string;\n  /**\n   * Defines default for the whole Grid numbers of empty columns before the current span begins. It can be defined for very large, large, medium and small screens.\n   * Allowed values are separated by space Letters XL, L, M or S followed by number of columns from 0 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M11\", \"s10\" or \"l4 m4\".\n   * Note that the parameters has to be provided in the order very-large, large, medium, small.\n   * <br />\n   * You can override this default indent on each child element by setting the prop `data-layout-indent`.\n   */\n  defaultIndent?: string;\n  /**\n   * Components that are placed into Grid layout.\n   */\n  children: ReactNode | ReactNodeArray;\n}\n\nconst INDENT_PATTERN = /^([X][L](?<LargeDesktop>[0-9]|1[0-2]))? ?([L](?<Desktop>[0-9]|1[0-2]))? ?([M](?<Tablet>[0-9]|1[0-2]))? ?([S](?<Phone>[0-9]|1[0-2]))?$/i;\nconst SPAN_PATTERN = /^([X][L](?<LargeDesktop>[1-9]|1[0-2]))? ?([L](?<Desktop>[1-9]|1[0-2]))? ?([M](?<Tablet>[1-9]|1[0-2]))? ?([S](?<Phone>[1-9]|1[0-2]))?$/i;\n\nconst DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 1);\nDefaultSpanMap.set('Tablet', 2);\nDefaultSpanMap.set('Desktop', 4);\nDefaultSpanMap.set('LargeDesktop', 4);\n\nconst DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\n\nconst getSpanFromString = (span, currentRange) => {\n  const spanConfig = SPAN_PATTERN.exec(span);\n  return spanConfig?.groups[currentRange] ?? DefaultSpanMap.get(currentRange);\n};\n\nconst getIndentFromString = (indent, currentRange) => {\n  const indentConfig = INDENT_PATTERN.exec(indent);\n  return indentConfig?.groups[currentRange] ?? DefaultIndentMap.get(currentRange);\n};\n\nconst getIECellPlacement = (col, row, span) => {\n  let colStart;\n  let safeSpan = parseInt(span);\n  const added = col + safeSpan;\n  if (added <= 12) {\n    colStart = col + 1;\n    col = added;\n  } else {\n    colStart = 1;\n    col = safeSpan;\n    row++;\n  }\n  return [col, row, colStart];\n};\n\nconst useStyles = createUseStyles(styles, { name: 'Grid' });\n/**\n * A layout container component used for aligning items with various sizes in a simple grid.\n */\nconst Grid: FC<GridPropTypes> = forwardRef((props: GridPropTypes, ref: Ref<HTMLDivElement>) => {\n  const { position, children, hSpacing, vSpacing, style, className, tooltip, slot, defaultIndent, defaultSpan } = props;\n  const classes = useStyles();\n  const currentRange = useViewportRange('StdExt');\n  const gridClasses = StyleClassHelper.of(classes.grid);\n\n  if (GridPosition.Center === position) {\n    gridClasses.put(classes.positionCenter);\n  }\n\n  if (GridPosition.Right === position) {\n    gridClasses.put(classes.positionRight);\n  }\n\n  if (className) {\n    gridClasses.put(className);\n  }\n\n  let column = 0;\n  let row = 1;\n  const renderGridElements = useCallback(\n    (child: ReactElement<any>) => {\n      if (!child) return null;\n\n      const childSpan = getSpanFromString(child.props['data-layout-span'] ?? defaultSpan, currentRange);\n      let childClass = classes[`gridSpan${childSpan}`];\n\n      const childrenWithGridLayout = [<div className={childClass}>{child}</div>];\n\n      const indentSpan = getIndentFromString(child.props['data-layout-indent'] ?? defaultIndent, currentRange);\n      if (indentSpan && indentSpan > 0) {\n        childrenWithGridLayout.unshift(<span className={classes[`gridSpan${indentSpan}`]} />);\n      }\n      if (isIE()) {\n        return childrenWithGridLayout.map((item, index) => {\n          let colStart;\n          if (childrenWithGridLayout.length === 2 && index === 0) {\n            [column, row, colStart] = getIECellPlacement(column, row, indentSpan);\n            return cloneElement(item, {\n              style: { marginRight: vSpacing, marginBottom: hSpacing, msGridRow: row, msGridColumn: colStart }\n            });\n          }\n          [column, row, colStart] = getIECellPlacement(column, row, childSpan);\n          return cloneElement(item, {\n            style: { marginRight: vSpacing, marginBottom: hSpacing, msGridRow: row, msGridColumn: colStart }\n          });\n        });\n      }\n      return childrenWithGridLayout;\n    },\n    [currentRange, defaultSpan, defaultIndent, classes, vSpacing, hSpacing]\n  );\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <div\n      ref={ref}\n      className={gridClasses.valueOf()}\n      style={{ gridRowGap: vSpacing, gridColumnGap: hSpacing, ...style }}\n      title={tooltip}\n      slot={slot}\n      {...passThroughProps}\n    >\n      {Children.map(children, renderGridElements)}\n    </div>\n  );\n});\n\nGrid.displayName = 'Grid';\n\nGrid.defaultProps = {\n  hSpacing: '1rem',\n  vSpacing: '1rem',\n  defaultIndent: 'XL0 L0 M0 S0',\n  defaultSpan: 'XL3 L3 M6 S12'\n};\n\nexport { Grid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}