const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const fs = require('fs');

const baseDir = '/' + path.basename(process.cwd()) + '/'

const selectIndexFile = () => {
  const mainPath = path.resolve(process.cwd(), 'frontend', 'src')
  const indexFilenames = ['index.js', 'index.jsx', 'index.ts', 'index.tsx']

  for (const filename of indexFilenames) {
    const indexFilePath = path.resolve(mainPath, filename)
    if (fs.existsSync(indexFilePath)) return indexFilePath
  }

  throw new Error('No valid index file found')
}

module.exports = {
  entry: {
    index: selectIndexFile()
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: path.resolve(process.cwd(), 'frontend', 'src', 'index.html')
    })
  ],
  module: {
    rules: [
      {
        test: /\.css$/,
        use: ["style-loader", "css-loader"]
      },
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: ["babel-loader"]
      },
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: ["babel-loader"]
      },
      {
        test: /\.(jpg|png)$/,
        use: {
          loader: 'url-loader',
        },
      },
      {
        test: /\.tsx?$/,
        use: 'ts-loader',
        exclude: /node_modules/,
      }
    ]
  },
  resolve: {
    extensions: ['', '.js', '.jsx', '.ts', '.tsx'],
  },
  output: {
    filename: '[name].bundle.js',
    path: path.resolve(process.cwd(), 'backend', 'build'),
    publicPath: baseDir,
    clean: true,
  },
};